{"version":3,"file":"chunk.9319.js","mappings":"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","sources":["webpack://proton-pass-extension/../../node_modules/openpgp/dist/lightweight/bn.interface.min.mjs"],"sourcesContent":["/*! OpenPGP.js v5.10.2 - 2023-09-18 - this is LGPL licensed code, see LICENSE/our website https://openpgpjs.org/ for more information. */\n\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self&&self;import e from\"./bn.min.mjs\";import\"./openpgp.min.mjs\";class t{constructor(t){if(void 0===t)throw Error(\"Invalid BigInteger input\");this.value=new e(t)}clone(){const e=new t(null);return this.value.copy(e.value),e}iinc(){return this.value.iadd(new e(1)),this}inc(){return this.clone().iinc()}idec(){return this.value.isub(new e(1)),this}dec(){return this.clone().idec()}iadd(e){return this.value.iadd(e.value),this}add(e){return this.clone().iadd(e)}isub(e){return this.value.isub(e.value),this}sub(e){return this.clone().isub(e)}imul(e){return this.value.imul(e.value),this}mul(e){return this.clone().imul(e)}imod(e){return this.value=this.value.umod(e.value),this}mod(e){return this.clone().imod(e)}modExp(t,i){const r=i.isEven()?e.red(i.value):e.mont(i.value),u=this.clone();return u.value=u.value.toRed(r).redPow(t.value).fromRed(),u}modInv(e){if(!this.gcd(e).isOne())throw Error(\"Inverse does not exist\");return new t(this.value.invm(e.value))}gcd(e){return new t(this.value.gcd(e.value))}ileftShift(e){return this.value.ishln(e.value.toNumber()),this}leftShift(e){return this.clone().ileftShift(e)}irightShift(e){return this.value.ishrn(e.value.toNumber()),this}rightShift(e){return this.clone().irightShift(e)}equal(e){return this.value.eq(e.value)}lt(e){return this.value.lt(e.value)}lte(e){return this.value.lte(e.value)}gt(e){return this.value.gt(e.value)}gte(e){return this.value.gte(e.value)}isZero(){return this.value.isZero()}isOne(){return this.value.eq(new e(1))}isNegative(){return this.value.isNeg()}isEven(){return this.value.isEven()}abs(){const e=this.clone();return e.value=e.value.abs(),e}toString(){return this.value.toString()}toNumber(){return this.value.toNumber()}getBit(e){return this.value.testn(e)?1:0}bitLength(){return this.value.bitLength()}byteLength(){return this.value.byteLength()}toUint8Array(e=\"be\",t){return this.value.toArrayLike(Uint8Array,e,t)}}export default t;\n//# sourceMappingURL=bn.interface.min.mjs.map\n"],"names":["window","global","self","t","constructor","Error","this","value","clone","e","copy","iinc","iadd","inc","idec","isub","dec","add","sub","imul","mul","imod","umod","mod","modExp","i","r","isEven","red","mont","u","toRed","redPow","fromRed","modInv","gcd","isOne","invm","ileftShift","ishln","toNumber","leftShift","irightShift","ishrn","rightShift","equal","eq","lt","lte","gt","gte","isZero","isNegative","isNeg","abs","toString","getBit","testn","bitLength","byteLength","toUint8Array","toArrayLike","Uint8Array"],"sourceRoot":""}