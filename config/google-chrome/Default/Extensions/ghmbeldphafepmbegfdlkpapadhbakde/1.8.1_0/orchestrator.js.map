{"version":3,"file":"orchestrator.js","mappings":"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","sources":["webpack://proton-pass-extension/../../packages/pass/globals/browser.ts","webpack://proton-pass-extension/../../packages/pass/utils/logger/index.ts","webpack://proton-pass-extension/../../node_modules/core-js/internals/a-callable.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/an-object.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/array-includes.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/array-set-length.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/classof-raw.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/copy-constructor-properties.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/create-non-enumerable-property.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/create-property-descriptor.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/define-built-in-accessor.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/define-built-in.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/define-global-property.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/descriptors.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/document-all.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/document-create-element.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/engine-user-agent.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/engine-v8-version.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/enum-bug-keys.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/export.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/fails.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/function-bind-native.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/function-call.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/function-name.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/function-uncurry-this.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/get-built-in.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/get-method.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/global.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/has-own-property.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/hidden-keys.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/ie8-dom-define.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/indexed-object.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/inspect-source.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/internal-state.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-array.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-callable.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-forced.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-null-or-undefined.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-object.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-pure.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/is-symbol.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/length-of-array-like.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/make-built-in.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/math-trunc.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-define-property.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-get-own-property-names.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-is-prototype-of.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-keys-internal.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/object-property-is-enumerable.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/ordinary-to-primitive.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/own-keys.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/require-object-coercible.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/shared-key.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/shared-store.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/shared.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/symbol-constructor-detection.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-absolute-index.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-indexed-object.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-integer-or-infinity.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-length.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-object.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-primitive.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/to-property-key.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/try-to-string.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/uid.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/use-symbol-as-uid.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/weak-map-basic-detection.js","webpack://proton-pass-extension/../../node_modules/core-js/internals/well-known-symbol.js","webpack://proton-pass-extension/../../node_modules/core-js/modules/es.array.push.js","webpack://proton-pass-extension/../../node_modules/core-js/modules/web.url-search-params.size.js","webpack://proton-pass-extension/../../node_modules/lodash/_LazyWrapper.js","webpack://proton-pass-extension/../../node_modules/lodash/_LodashWrapper.js","webpack://proton-pass-extension/../../node_modules/lodash/_Symbol.js","webpack://proton-pass-extension/../../node_modules/lodash/_WeakMap.js","webpack://proton-pass-extension/../../node_modules/lodash/_apply.js","webpack://proton-pass-extension/../../node_modules/lodash/_arrayPush.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseCreate.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseFlatten.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseGetTag.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseIsArguments.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseIsNative.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseLodash.js","webpack://proton-pass-extension/../../node_modules/lodash/_baseSetToString.js","webpack://proton-pass-extension/../../node_modules/lodash/_copyArray.js","webpack://proton-pass-extension/../../node_modules/lodash/_coreJsData.js","webpack://proton-pass-extension/../../node_modules/lodash/_createFlow.js","webpack://proton-pass-extension/../../node_modules/lodash/_defineProperty.js","webpack://proton-pass-extension/../../node_modules/lodash/_flatRest.js","webpack://proton-pass-extension/../../node_modules/lodash/_freeGlobal.js","webpack://proton-pass-extension/../../node_modules/lodash/_getData.js","webpack://proton-pass-extension/../../node_modules/lodash/_getFuncName.js","webpack://proton-pass-extension/../../node_modules/lodash/_getNative.js","webpack://proton-pass-extension/../../node_modules/lodash/_getRawTag.js","webpack://proton-pass-extension/../../node_modules/lodash/_getValue.js","webpack://proton-pass-extension/../../node_modules/lodash/_isFlattenable.js","webpack://proton-pass-extension/../../node_modules/lodash/_isLaziable.js","webpack://proton-pass-extension/../../node_modules/lodash/_isMasked.js","webpack://proton-pass-extension/../../node_modules/lodash/_metaMap.js","webpack://proton-pass-extension/../../node_modules/lodash/_objectToString.js","webpack://proton-pass-extension/../../node_modules/lodash/_overRest.js","webpack://proton-pass-extension/../../node_modules/lodash/_realNames.js","webpack://proton-pass-extension/../../node_modules/lodash/_root.js","webpack://proton-pass-extension/../../node_modules/lodash/_setToString.js","webpack://proton-pass-extension/../../node_modules/lodash/_shortOut.js","webpack://proton-pass-extension/../../node_modules/lodash/_toSource.js","webpack://proton-pass-extension/../../node_modules/lodash/_wrapperClone.js","webpack://proton-pass-extension/../../node_modules/lodash/constant.js","webpack://proton-pass-extension/../../node_modules/lodash/flatten.js","webpack://proton-pass-extension/../../node_modules/lodash/flow.js","webpack://proton-pass-extension/../../node_modules/lodash/identity.js","webpack://proton-pass-extension/../../node_modules/lodash/isArguments.js","webpack://proton-pass-extension/../../node_modules/lodash/isArray.js","webpack://proton-pass-extension/../../node_modules/lodash/isFunction.js","webpack://proton-pass-extension/../../node_modules/lodash/isObject.js","webpack://proton-pass-extension/../../node_modules/lodash/isObjectLike.js","webpack://proton-pass-extension/../../node_modules/lodash/noop.js","webpack://proton-pass-extension/../../node_modules/lodash/wrapperLodash.js","webpack://proton-pass-extension/../../node_modules/loglevel/lib/loglevel.js","webpack://proton-pass-extension/../../node_modules/webextension-polyfill/dist/browser-polyfill.js","webpack://proton-pass-extension/webpack/bootstrap","webpack://proton-pass-extension/webpack/runtime/compat get default export","webpack://proton-pass-extension/webpack/runtime/define property getters","webpack://proton-pass-extension/webpack/runtime/global","webpack://proton-pass-extension/webpack/runtime/hasOwnProperty shorthand","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/base64.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/assert.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","webpack://proton-pass-extension/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","webpack://proton-pass-extension/../../packages/pass/types/protobuf/item-v1.ts","webpack://proton-pass-extension/../../packages/pass/types/protobuf/vault-v1.ts","webpack://proton-pass-extension/../../packages/pass/types/worker/autosave.ts","webpack://proton-pass-extension/../../packages/pass/types/worker/messages.ts","webpack://proton-pass-extension/../../packages/pass/extension/message/send-message.ts","webpack://proton-pass-extension/../../packages/pass/fathom/protonpass-fathom/fathom.js","webpack://proton-pass-extension/../../packages/pass/fathom/protonpass-fathom/index.js","webpack://proton-pass-extension/./src/content/types/dropdown.ts","webpack://proton-pass-extension/./src/content/types/form.ts","webpack://proton-pass-extension/./src/content/constants.ts","webpack://proton-pass-extension/./src/content/injections/icon/index.ts","webpack://proton-pass-extension/./src/content/orchestrator.ts","webpack://proton-pass-extension/../../packages/pass/utils/listener/listener-store.ts","webpack://proton-pass-extension/./src/content/injections/cleanup.ts","webpack://proton-pass-extension/../../packages/pass/utils/dom/is-main-frame.ts","webpack://proton-pass-extension/./src/shared/extension/disable-browser-trap.ts"],"sourcesContent":["/* We create a proxy around the `chrome` or `browser` global object to hide them\n * from the devtools of our extension. This is done to prevent developers from\n * accidentally or intentionally modifying the extension's messaging system, which\n * could cause unexpected behavior or security issues. By hiding these globals,\n * we ensure that the extension's messaging system is only accessed through the\n * provided APIs, and not directly through the devtools console or other means */\nimport browser from 'webextension-polyfill';\n\nimport { logger } from '../utils/logger';\n\nconst self = globalThis as any;\nconst context = {\n    allowProxy: true,\n    globals: {\n        chrome: self.chrome,\n        browser: self.browser,\n    },\n};\n\nexport const disableBrowserProxyTrap = () => (context.allowProxy = false);\n\n/* To ensure that Sentry's internal checks involving the browser\n * APIs don't interfere with the initialization of our apps, we\n * wrap the proxy initialization in a setTimeout function, which\n * delays the initialization until the next tick after our apps load.\n * ⚠️ Make sure Sentry is always initialized on app boot. */\nexport default (() => {\n    const polyfill = browser;\n\n    setTimeout(\n        () =>\n            context.allowProxy &&\n            Object.entries(context.globals)\n                .filter(([, value]) => value)\n                .forEach(([key, value]) => {\n                    self[key] = new Proxy(value, {\n                        get(target, prop, receiver) {\n                            if (process.env.NODE_ENV !== 'development') {\n                                return logger.error(`[Extension::Error] extension API is protected`);\n                            }\n\n                            return Reflect.get(target, prop, receiver);\n                        },\n                        set() {\n                            logger.error(`[Extension::Error] extension API is read-only`);\n                            return false;\n                        },\n                    });\n                }),\n        0\n    );\n\n    return polyfill;\n})();\n\nexport const chromeAPI = context.globals.chrome as typeof chrome;\n","import log from 'loglevel';\n\nimport type { Callback } from '@proton/pass/types';\n\nlog.setLevel('info', false);\n\nexport const logId = (id: string) =>\n    id.length > 10 ? `[${id.slice(0, 5)}…${id.slice(id.length - 5, id.length)}]` : `[${id}]`;\n\ntype LoggerOptions = { onLog?: (log: string, originalLog: LogFunc) => void };\ntype LogFunc = Callback<any[], void>;\n\nconst withLoggerOptions =\n    <F extends LogFunc>(fn: F, options: LoggerOptions): ((...args: any[]) => void) =>\n    (...args) =>\n        options.onLog ? options.onLog(args.join(' '), fn) : fn(...args);\n\nexport const logger = (() => {\n    const options: LoggerOptions = {};\n\n    return {\n        info: withLoggerOptions(log.info, options),\n        debug: withLoggerOptions(log.debug, options),\n        error: withLoggerOptions(log.error, options),\n        warn: withLoggerOptions(log.warn, options),\n        setLogOptions: (opts: LoggerOptions) => (options.onLog = opts.onLog),\n    };\n})();\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nvar documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nmodule.exports = false;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.33.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.33.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var createFlow = require('./_createFlow');\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nmodule.exports = flow;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.10.0 - Fri Aug 12 2022 19:42:44 */\n\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n  /* vim: set sts=2 sw=2 et tw=80: */\n\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!globalThis.chrome?.runtime?.id) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n\n  if (typeof globalThis.browser === \"undefined\" || Object.getPrototypeOf(globalThis.browser) !== Object.prototype) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\"; // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n\n\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n\n          return super.get(key);\n        }\n\n      }\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n\n\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n\n\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n\n\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args); // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n\n\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n\n        });\n      };\n\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n\n            if (!(prop in target)) {\n              return undefined;\n            }\n\n            let value = target[prop];\n\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n\n                get() {\n                  return target[prop];\n                },\n\n                set(value) {\n                  target[prop] = value;\n                }\n\n              });\n              return value;\n            }\n\n            cache[prop] = value;\n            return value;\n          },\n\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n\n            return true;\n          },\n\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n\n        }; // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n\n\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n\n      });\n\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n\n\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {}\n          /* wrappers */\n          , {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n\n\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n\n          const isResultThenable = result !== true && isThenable(result); // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          } // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n\n\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          }; // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n\n\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          } // Let Chrome know that the listener is replying.\n\n\n          return true;\n        };\n      });\n\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    }; // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n\n\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to highBits\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if ((bitsHigh >>> 0) <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nlet BI;\nexport function detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    BI = ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\ndetectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\nconst HALF_2_PWR_32 = 0x080000000;\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('signed long too small');\n                    if (value > BI.MAX)\n                        throw new Error('signed long too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus) {\n                        if (hi > HALF_2_PWR_32 || (hi == HALF_2_PWR_32 && lo != 0))\n                            throw new Error('signed long too small');\n                    }\n                    else if (hi >= HALF_2_PWR_32)\n                        throw new Error('signed long too large');\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & HALF_2_PWR_32) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                if (jsonValue === null && (field.kind !== 'enum' || field.T()[0] !== 'google.protobuf.NullValue')) {\n                    continue;\n                }\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null` (or the old `\"NULL_VALUE\"`).\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null || json === \"NULL_VALUE\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` as the default for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return !emitDefaultValues && !optional ? undefined : null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","import { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    const msg = {};\n    Object.defineProperty(msg, MESSAGE_TYPE, { enumerable: false, value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","/* eslint-disable */\n// @generated by protobuf-ts 2.9.0\n// @generated from protobuf file \"item-v1.proto\" (package \"proton_pass_item_v1\", syntax proto3)\n// tslint:disable\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MESSAGE_TYPE } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\n\n// Item types\n\n/**\n * @generated from protobuf message proton_pass_item_v1.ItemNote\n */\nexport interface ItemNote {}\n/**\n * @generated from protobuf message proton_pass_item_v1.ItemLogin\n */\nexport interface ItemLogin {\n    /**\n     * @generated from protobuf field: string username = 1;\n     */\n    username: string;\n    /**\n     * @generated from protobuf field: string password = 2;\n     */\n    password: string;\n    /**\n     * @generated from protobuf field: repeated string urls = 3;\n     */\n    urls: string[];\n    /**\n     * @generated from protobuf field: string totp_uri = 4;\n     */\n    totpUri: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.ItemAlias\n */\nexport interface ItemAlias {}\n/**\n * @generated from protobuf message proton_pass_item_v1.ItemCreditCard\n */\nexport interface ItemCreditCard {\n    /**\n     * @generated from protobuf field: string cardholder_name = 1;\n     */\n    cardholderName: string;\n    /**\n     * @generated from protobuf field: proton_pass_item_v1.CardType card_type = 2;\n     */\n    cardType: CardType;\n    /**\n     * @generated from protobuf field: string number = 3;\n     */\n    number: string;\n    /**\n     * @generated from protobuf field: string verification_number = 4;\n     */\n    verificationNumber: string;\n    /**\n     * Expected format: YYYY-MM, always containing two numbers for the month, even if is 01\n     *\n     * @generated from protobuf field: string expiration_date = 5;\n     */\n    expirationDate: string;\n    /**\n     * @generated from protobuf field: string pin = 6;\n     */\n    pin: string;\n}\n/**\n * Client extras\n *\n * @generated from protobuf message proton_pass_item_v1.AllowedAndroidApp\n */\nexport interface AllowedAndroidApp {\n    /**\n     * @generated from protobuf field: string package_name = 1;\n     */\n    packageName: string;\n    /**\n     * @generated from protobuf field: repeated string hashes = 2;\n     */\n    hashes: string[];\n    /**\n     * @generated from protobuf field: string app_name = 3;\n     */\n    appName: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.AndroidSpecific\n */\nexport interface AndroidSpecific {\n    /**\n     * @generated from protobuf field: repeated proton_pass_item_v1.AllowedAndroidApp allowed_apps = 1;\n     */\n    allowedApps: AllowedAndroidApp[];\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.PlatformSpecific\n */\nexport interface PlatformSpecific {\n    /**\n     * @generated from protobuf field: proton_pass_item_v1.AndroidSpecific android = 1;\n     */\n    android?: AndroidSpecific;\n}\n// Item\n\n/**\n * @generated from protobuf message proton_pass_item_v1.ExtraTotp\n */\nexport interface ExtraTotp {\n    /**\n     * @generated from protobuf field: string totp_uri = 1;\n     */\n    totpUri: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.ExtraTextField\n */\nexport interface ExtraTextField {\n    /**\n     * @generated from protobuf field: string content = 1;\n     */\n    content: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.ExtraHiddenField\n */\nexport interface ExtraHiddenField {\n    /**\n     * @generated from protobuf field: string content = 1;\n     */\n    content: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.ExtraField\n */\nexport interface ExtraField {\n    /**\n     * @generated from protobuf field: string field_name = 1;\n     */\n    fieldName: string;\n    /**\n     * @generated from protobuf oneof: content\n     */\n    content:\n        | {\n              oneofKind: 'totp';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ExtraTotp totp = 2;\n               */\n              totp: ExtraTotp;\n          }\n        | {\n              oneofKind: 'text';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ExtraTextField text = 3;\n               */\n              text: ExtraTextField;\n          }\n        | {\n              oneofKind: 'hidden';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ExtraHiddenField hidden = 4;\n               */\n              hidden: ExtraHiddenField;\n          }\n        | {\n              oneofKind: undefined;\n          };\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.Metadata\n */\nexport interface Metadata {\n    /**\n     * @generated from protobuf field: string name = 1;\n     */\n    name: string;\n    /**\n     * @generated from protobuf field: string note = 2;\n     */\n    note: string;\n    /**\n     * @generated from protobuf field: string item_uuid = 3;\n     */\n    itemUuid: string;\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.Content\n */\nexport interface Content {\n    /**\n     * @generated from protobuf oneof: content\n     */\n    content:\n        | {\n              oneofKind: 'note';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ItemNote note = 2;\n               */\n              note: ItemNote;\n          }\n        | {\n              oneofKind: 'login';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ItemLogin login = 3;\n               */\n              login: ItemLogin;\n          }\n        | {\n              oneofKind: 'alias';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ItemAlias alias = 4;\n               */\n              alias: ItemAlias;\n          }\n        | {\n              oneofKind: 'creditCard';\n              /**\n               * @generated from protobuf field: proton_pass_item_v1.ItemCreditCard credit_card = 5;\n               */\n              creditCard: ItemCreditCard;\n          }\n        | {\n              oneofKind: undefined;\n          };\n}\n/**\n * @generated from protobuf message proton_pass_item_v1.Item\n */\nexport interface Item {\n    /**\n     * @generated from protobuf field: proton_pass_item_v1.Metadata metadata = 1;\n     */\n    metadata?: Metadata;\n    /**\n     * @generated from protobuf field: proton_pass_item_v1.Content content = 2;\n     */\n    content?: Content;\n    /**\n     * @generated from protobuf field: proton_pass_item_v1.PlatformSpecific platform_specific = 3;\n     */\n    platformSpecific?: PlatformSpecific;\n    /**\n     * @generated from protobuf field: repeated proton_pass_item_v1.ExtraField extra_fields = 4;\n     */\n    extraFields: ExtraField[];\n}\n/**\n * Credit cards\n *\n * @generated from protobuf enum proton_pass_item_v1.CardType\n */\nexport enum CardType {\n    /**\n     * @generated from protobuf enum value: Unspecified = 0;\n     */\n    Unspecified = 0,\n    /**\n     * @generated from protobuf enum value: Other = 1;\n     */\n    Other = 1,\n    /**\n     * @generated from protobuf enum value: Visa = 2;\n     */\n    Visa = 2,\n    /**\n     * @generated from protobuf enum value: Mastercard = 3;\n     */\n    Mastercard = 3,\n    /**\n     * @generated from protobuf enum value: AmericanExpress = 4;\n     */\n    AmericanExpress = 4,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ItemNote$Type extends MessageType<ItemNote> {\n    constructor() {\n        super('proton_pass_item_v1.ItemNote', []);\n    }\n    create(value?: PartialMessage<ItemNote>): ItemNote {\n        const message = {};\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ItemNote>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ItemNote): ItemNote {\n        return target ?? this.create();\n    }\n    internalBinaryWrite(message: ItemNote, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ItemNote\n */\nexport const ItemNote = new ItemNote$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ItemLogin$Type extends MessageType<ItemLogin> {\n    constructor() {\n        super('proton_pass_item_v1.ItemLogin', [\n            { no: 1, name: 'username', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'password', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: 'urls', kind: 'scalar', repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: 'totp_uri', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<ItemLogin>): ItemLogin {\n        const message = { username: '', password: '', urls: [], totpUri: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ItemLogin>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ItemLogin\n    ): ItemLogin {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string username */ 1:\n                    message.username = reader.string();\n                    break;\n                case /* string password */ 2:\n                    message.password = reader.string();\n                    break;\n                case /* repeated string urls */ 3:\n                    message.urls.push(reader.string());\n                    break;\n                case /* string totp_uri */ 4:\n                    message.totpUri = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ItemLogin, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string username = 1; */\n        if (message.username !== '') writer.tag(1, WireType.LengthDelimited).string(message.username);\n        /* string password = 2; */\n        if (message.password !== '') writer.tag(2, WireType.LengthDelimited).string(message.password);\n        /* repeated string urls = 3; */\n        for (let i = 0; i < message.urls.length; i++) writer.tag(3, WireType.LengthDelimited).string(message.urls[i]);\n        /* string totp_uri = 4; */\n        if (message.totpUri !== '') writer.tag(4, WireType.LengthDelimited).string(message.totpUri);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ItemLogin\n */\nexport const ItemLogin = new ItemLogin$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ItemAlias$Type extends MessageType<ItemAlias> {\n    constructor() {\n        super('proton_pass_item_v1.ItemAlias', []);\n    }\n    create(value?: PartialMessage<ItemAlias>): ItemAlias {\n        const message = {};\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ItemAlias>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ItemAlias\n    ): ItemAlias {\n        return target ?? this.create();\n    }\n    internalBinaryWrite(message: ItemAlias, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ItemAlias\n */\nexport const ItemAlias = new ItemAlias$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ItemCreditCard$Type extends MessageType<ItemCreditCard> {\n    constructor() {\n        super('proton_pass_item_v1.ItemCreditCard', [\n            { no: 1, name: 'cardholder_name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'card_type', kind: 'enum', T: () => ['proton_pass_item_v1.CardType', CardType] },\n            { no: 3, name: 'number', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: 'verification_number', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: 'expiration_date', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 6, name: 'pin', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<ItemCreditCard>): ItemCreditCard {\n        const message = {\n            cardholderName: '',\n            cardType: 0,\n            number: '',\n            verificationNumber: '',\n            expirationDate: '',\n            pin: '',\n        };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ItemCreditCard>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ItemCreditCard\n    ): ItemCreditCard {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string cardholder_name */ 1:\n                    message.cardholderName = reader.string();\n                    break;\n                case /* proton_pass_item_v1.CardType card_type */ 2:\n                    message.cardType = reader.int32();\n                    break;\n                case /* string number */ 3:\n                    message.number = reader.string();\n                    break;\n                case /* string verification_number */ 4:\n                    message.verificationNumber = reader.string();\n                    break;\n                case /* string expiration_date */ 5:\n                    message.expirationDate = reader.string();\n                    break;\n                case /* string pin */ 6:\n                    message.pin = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ItemCreditCard, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string cardholder_name = 1; */\n        if (message.cardholderName !== '') writer.tag(1, WireType.LengthDelimited).string(message.cardholderName);\n        /* proton_pass_item_v1.CardType card_type = 2; */\n        if (message.cardType !== 0) writer.tag(2, WireType.Varint).int32(message.cardType);\n        /* string number = 3; */\n        if (message.number !== '') writer.tag(3, WireType.LengthDelimited).string(message.number);\n        /* string verification_number = 4; */\n        if (message.verificationNumber !== '')\n            writer.tag(4, WireType.LengthDelimited).string(message.verificationNumber);\n        /* string expiration_date = 5; */\n        if (message.expirationDate !== '') writer.tag(5, WireType.LengthDelimited).string(message.expirationDate);\n        /* string pin = 6; */\n        if (message.pin !== '') writer.tag(6, WireType.LengthDelimited).string(message.pin);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ItemCreditCard\n */\nexport const ItemCreditCard = new ItemCreditCard$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AllowedAndroidApp$Type extends MessageType<AllowedAndroidApp> {\n    constructor() {\n        super('proton_pass_item_v1.AllowedAndroidApp', [\n            { no: 1, name: 'package_name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'hashes', kind: 'scalar', repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: 'app_name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<AllowedAndroidApp>): AllowedAndroidApp {\n        const message = { packageName: '', hashes: [], appName: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<AllowedAndroidApp>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: AllowedAndroidApp\n    ): AllowedAndroidApp {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string package_name */ 1:\n                    message.packageName = reader.string();\n                    break;\n                case /* repeated string hashes */ 2:\n                    message.hashes.push(reader.string());\n                    break;\n                case /* string app_name */ 3:\n                    message.appName = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: AllowedAndroidApp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string package_name = 1; */\n        if (message.packageName !== '') writer.tag(1, WireType.LengthDelimited).string(message.packageName);\n        /* repeated string hashes = 2; */\n        for (let i = 0; i < message.hashes.length; i++)\n            writer.tag(2, WireType.LengthDelimited).string(message.hashes[i]);\n        /* string app_name = 3; */\n        if (message.appName !== '') writer.tag(3, WireType.LengthDelimited).string(message.appName);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.AllowedAndroidApp\n */\nexport const AllowedAndroidApp = new AllowedAndroidApp$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AndroidSpecific$Type extends MessageType<AndroidSpecific> {\n    constructor() {\n        super('proton_pass_item_v1.AndroidSpecific', [\n            {\n                no: 1,\n                name: 'allowed_apps',\n                kind: 'message',\n                repeat: 1 /*RepeatType.PACKED*/,\n                T: () => AllowedAndroidApp,\n            },\n        ]);\n    }\n    create(value?: PartialMessage<AndroidSpecific>): AndroidSpecific {\n        const message = { allowedApps: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<AndroidSpecific>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: AndroidSpecific\n    ): AndroidSpecific {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* repeated proton_pass_item_v1.AllowedAndroidApp allowed_apps */ 1:\n                    message.allowedApps.push(AllowedAndroidApp.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: AndroidSpecific, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* repeated proton_pass_item_v1.AllowedAndroidApp allowed_apps = 1; */\n        for (let i = 0; i < message.allowedApps.length; i++)\n            AllowedAndroidApp.internalBinaryWrite(\n                message.allowedApps[i],\n                writer.tag(1, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.AndroidSpecific\n */\nexport const AndroidSpecific = new AndroidSpecific$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PlatformSpecific$Type extends MessageType<PlatformSpecific> {\n    constructor() {\n        super('proton_pass_item_v1.PlatformSpecific', [\n            { no: 1, name: 'android', kind: 'message', T: () => AndroidSpecific },\n        ]);\n    }\n    create(value?: PartialMessage<PlatformSpecific>): PlatformSpecific {\n        const message = {};\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<PlatformSpecific>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: PlatformSpecific\n    ): PlatformSpecific {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* proton_pass_item_v1.AndroidSpecific android */ 1:\n                    message.android = AndroidSpecific.internalBinaryRead(\n                        reader,\n                        reader.uint32(),\n                        options,\n                        message.android\n                    );\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: PlatformSpecific, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* proton_pass_item_v1.AndroidSpecific android = 1; */\n        if (message.android)\n            AndroidSpecific.internalBinaryWrite(\n                message.android,\n                writer.tag(1, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.PlatformSpecific\n */\nexport const PlatformSpecific = new PlatformSpecific$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExtraTotp$Type extends MessageType<ExtraTotp> {\n    constructor() {\n        super('proton_pass_item_v1.ExtraTotp', [\n            { no: 1, name: 'totp_uri', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<ExtraTotp>): ExtraTotp {\n        const message = { totpUri: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ExtraTotp>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ExtraTotp\n    ): ExtraTotp {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string totp_uri */ 1:\n                    message.totpUri = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ExtraTotp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string totp_uri = 1; */\n        if (message.totpUri !== '') writer.tag(1, WireType.LengthDelimited).string(message.totpUri);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ExtraTotp\n */\nexport const ExtraTotp = new ExtraTotp$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExtraTextField$Type extends MessageType<ExtraTextField> {\n    constructor() {\n        super('proton_pass_item_v1.ExtraTextField', [\n            { no: 1, name: 'content', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<ExtraTextField>): ExtraTextField {\n        const message = { content: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ExtraTextField>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ExtraTextField\n    ): ExtraTextField {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string content */ 1:\n                    message.content = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ExtraTextField, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string content = 1; */\n        if (message.content !== '') writer.tag(1, WireType.LengthDelimited).string(message.content);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ExtraTextField\n */\nexport const ExtraTextField = new ExtraTextField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExtraHiddenField$Type extends MessageType<ExtraHiddenField> {\n    constructor() {\n        super('proton_pass_item_v1.ExtraHiddenField', [\n            { no: 1, name: 'content', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<ExtraHiddenField>): ExtraHiddenField {\n        const message = { content: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ExtraHiddenField>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ExtraHiddenField\n    ): ExtraHiddenField {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string content */ 1:\n                    message.content = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ExtraHiddenField, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string content = 1; */\n        if (message.content !== '') writer.tag(1, WireType.LengthDelimited).string(message.content);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ExtraHiddenField\n */\nexport const ExtraHiddenField = new ExtraHiddenField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExtraField$Type extends MessageType<ExtraField> {\n    constructor() {\n        super('proton_pass_item_v1.ExtraField', [\n            { no: 1, name: 'field_name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'totp', kind: 'message', oneof: 'content', T: () => ExtraTotp },\n            { no: 3, name: 'text', kind: 'message', oneof: 'content', T: () => ExtraTextField },\n            { no: 4, name: 'hidden', kind: 'message', oneof: 'content', T: () => ExtraHiddenField },\n        ]);\n    }\n    create(value?: PartialMessage<ExtraField>): ExtraField {\n        const message = { fieldName: '', content: { oneofKind: undefined } };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<ExtraField>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: ExtraField\n    ): ExtraField {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string field_name */ 1:\n                    message.fieldName = reader.string();\n                    break;\n                case /* proton_pass_item_v1.ExtraTotp totp */ 2:\n                    message.content = {\n                        oneofKind: 'totp',\n                        totp: ExtraTotp.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).totp\n                        ),\n                    };\n                    break;\n                case /* proton_pass_item_v1.ExtraTextField text */ 3:\n                    message.content = {\n                        oneofKind: 'text',\n                        text: ExtraTextField.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).text\n                        ),\n                    };\n                    break;\n                case /* proton_pass_item_v1.ExtraHiddenField hidden */ 4:\n                    message.content = {\n                        oneofKind: 'hidden',\n                        hidden: ExtraHiddenField.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).hidden\n                        ),\n                    };\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: ExtraField, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string field_name = 1; */\n        if (message.fieldName !== '') writer.tag(1, WireType.LengthDelimited).string(message.fieldName);\n        /* proton_pass_item_v1.ExtraTotp totp = 2; */\n        if (message.content.oneofKind === 'totp')\n            ExtraTotp.internalBinaryWrite(\n                message.content.totp,\n                writer.tag(2, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.ExtraTextField text = 3; */\n        if (message.content.oneofKind === 'text')\n            ExtraTextField.internalBinaryWrite(\n                message.content.text,\n                writer.tag(3, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.ExtraHiddenField hidden = 4; */\n        if (message.content.oneofKind === 'hidden')\n            ExtraHiddenField.internalBinaryWrite(\n                message.content.hidden,\n                writer.tag(4, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.ExtraField\n */\nexport const ExtraField = new ExtraField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Metadata$Type extends MessageType<Metadata> {\n    constructor() {\n        super('proton_pass_item_v1.Metadata', [\n            { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'note', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: 'item_uuid', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n        ]);\n    }\n    create(value?: PartialMessage<Metadata>): Metadata {\n        const message = { name: '', note: '', itemUuid: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<Metadata>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Metadata): Metadata {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string name */ 1:\n                    message.name = reader.string();\n                    break;\n                case /* string note */ 2:\n                    message.note = reader.string();\n                    break;\n                case /* string item_uuid */ 3:\n                    message.itemUuid = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: Metadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string name = 1; */\n        if (message.name !== '') writer.tag(1, WireType.LengthDelimited).string(message.name);\n        /* string note = 2; */\n        if (message.note !== '') writer.tag(2, WireType.LengthDelimited).string(message.note);\n        /* string item_uuid = 3; */\n        if (message.itemUuid !== '') writer.tag(3, WireType.LengthDelimited).string(message.itemUuid);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.Metadata\n */\nexport const Metadata = new Metadata$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Content$Type extends MessageType<Content> {\n    constructor() {\n        super('proton_pass_item_v1.Content', [\n            { no: 2, name: 'note', kind: 'message', oneof: 'content', T: () => ItemNote },\n            { no: 3, name: 'login', kind: 'message', oneof: 'content', T: () => ItemLogin },\n            { no: 4, name: 'alias', kind: 'message', oneof: 'content', T: () => ItemAlias },\n            { no: 5, name: 'credit_card', kind: 'message', oneof: 'content', T: () => ItemCreditCard },\n        ]);\n    }\n    create(value?: PartialMessage<Content>): Content {\n        const message = { content: { oneofKind: undefined } };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<Content>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Content): Content {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* proton_pass_item_v1.ItemNote note */ 2:\n                    message.content = {\n                        oneofKind: 'note',\n                        note: ItemNote.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).note\n                        ),\n                    };\n                    break;\n                case /* proton_pass_item_v1.ItemLogin login */ 3:\n                    message.content = {\n                        oneofKind: 'login',\n                        login: ItemLogin.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).login\n                        ),\n                    };\n                    break;\n                case /* proton_pass_item_v1.ItemAlias alias */ 4:\n                    message.content = {\n                        oneofKind: 'alias',\n                        alias: ItemAlias.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).alias\n                        ),\n                    };\n                    break;\n                case /* proton_pass_item_v1.ItemCreditCard credit_card */ 5:\n                    message.content = {\n                        oneofKind: 'creditCard',\n                        creditCard: ItemCreditCard.internalBinaryRead(\n                            reader,\n                            reader.uint32(),\n                            options,\n                            (message.content as any).creditCard\n                        ),\n                    };\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: Content, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* proton_pass_item_v1.ItemNote note = 2; */\n        if (message.content.oneofKind === 'note')\n            ItemNote.internalBinaryWrite(\n                message.content.note,\n                writer.tag(2, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.ItemLogin login = 3; */\n        if (message.content.oneofKind === 'login')\n            ItemLogin.internalBinaryWrite(\n                message.content.login,\n                writer.tag(3, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.ItemAlias alias = 4; */\n        if (message.content.oneofKind === 'alias')\n            ItemAlias.internalBinaryWrite(\n                message.content.alias,\n                writer.tag(4, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.ItemCreditCard credit_card = 5; */\n        if (message.content.oneofKind === 'creditCard')\n            ItemCreditCard.internalBinaryWrite(\n                message.content.creditCard,\n                writer.tag(5, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.Content\n */\nexport const Content = new Content$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Item$Type extends MessageType<Item> {\n    constructor() {\n        super('proton_pass_item_v1.Item', [\n            { no: 1, name: 'metadata', kind: 'message', T: () => Metadata },\n            { no: 2, name: 'content', kind: 'message', T: () => Content },\n            { no: 3, name: 'platform_specific', kind: 'message', T: () => PlatformSpecific },\n            { no: 4, name: 'extra_fields', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => ExtraField },\n        ]);\n    }\n    create(value?: PartialMessage<Item>): Item {\n        const message = { extraFields: [] };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<Item>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Item): Item {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* proton_pass_item_v1.Metadata metadata */ 1:\n                    message.metadata = Metadata.internalBinaryRead(reader, reader.uint32(), options, message.metadata);\n                    break;\n                case /* proton_pass_item_v1.Content content */ 2:\n                    message.content = Content.internalBinaryRead(reader, reader.uint32(), options, message.content);\n                    break;\n                case /* proton_pass_item_v1.PlatformSpecific platform_specific */ 3:\n                    message.platformSpecific = PlatformSpecific.internalBinaryRead(\n                        reader,\n                        reader.uint32(),\n                        options,\n                        message.platformSpecific\n                    );\n                    break;\n                case /* repeated proton_pass_item_v1.ExtraField extra_fields */ 4:\n                    message.extraFields.push(ExtraField.internalBinaryRead(reader, reader.uint32(), options));\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: Item, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* proton_pass_item_v1.Metadata metadata = 1; */\n        if (message.metadata)\n            Metadata.internalBinaryWrite(\n                message.metadata,\n                writer.tag(1, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.Content content = 2; */\n        if (message.content)\n            Content.internalBinaryWrite(\n                message.content,\n                writer.tag(2, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* proton_pass_item_v1.PlatformSpecific platform_specific = 3; */\n        if (message.platformSpecific)\n            PlatformSpecific.internalBinaryWrite(\n                message.platformSpecific,\n                writer.tag(3, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        /* repeated proton_pass_item_v1.ExtraField extra_fields = 4; */\n        for (let i = 0; i < message.extraFields.length; i++)\n            ExtraField.internalBinaryWrite(\n                message.extraFields[i],\n                writer.tag(4, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_item_v1.Item\n */\nexport const Item = new Item$Type();\n","/* eslint-disable */\n// @generated by protobuf-ts 2.9.0\n// @generated from protobuf file \"vault-v1.proto\" (package \"proton_pass_vault_v1\", syntax proto3)\n// tslint:disable\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MESSAGE_TYPE } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\n\n/**\n * @generated from protobuf message proton_pass_vault_v1.VaultDisplayPreferences\n */\nexport interface VaultDisplayPreferences {\n    /**\n     * @generated from protobuf field: proton_pass_vault_v1.VaultIcon icon = 1;\n     */\n    icon: VaultIcon;\n    /**\n     * @generated from protobuf field: proton_pass_vault_v1.VaultColor color = 2;\n     */\n    color: VaultColor;\n}\n/**\n * @generated from protobuf message proton_pass_vault_v1.Vault\n */\nexport interface Vault {\n    /**\n     * @generated from protobuf field: string name = 1;\n     */\n    name: string;\n    /**\n     * @generated from protobuf field: string description = 2;\n     */\n    description: string;\n    /**\n     * @generated from protobuf field: proton_pass_vault_v1.VaultDisplayPreferences display = 3;\n     */\n    display?: VaultDisplayPreferences;\n}\n/**\n * @generated from protobuf enum proton_pass_vault_v1.VaultIcon\n */\nexport enum VaultIcon {\n    /**\n     * @generated from protobuf enum value: ICON_UNSPECIFIED = 0;\n     */\n    ICON_UNSPECIFIED = 0,\n    /**\n     * @generated from protobuf enum value: ICON_CUSTOM = 1;\n     */\n    ICON_CUSTOM = 1,\n    /**\n     * @generated from protobuf enum value: ICON1 = 2;\n     */\n    ICON1 = 2,\n    /**\n     * @generated from protobuf enum value: ICON2 = 3;\n     */\n    ICON2 = 3,\n    /**\n     * @generated from protobuf enum value: ICON3 = 4;\n     */\n    ICON3 = 4,\n    /**\n     * @generated from protobuf enum value: ICON4 = 5;\n     */\n    ICON4 = 5,\n    /**\n     * @generated from protobuf enum value: ICON5 = 6;\n     */\n    ICON5 = 6,\n    /**\n     * @generated from protobuf enum value: ICON6 = 7;\n     */\n    ICON6 = 7,\n    /**\n     * @generated from protobuf enum value: ICON7 = 8;\n     */\n    ICON7 = 8,\n    /**\n     * @generated from protobuf enum value: ICON8 = 9;\n     */\n    ICON8 = 9,\n    /**\n     * @generated from protobuf enum value: ICON9 = 10;\n     */\n    ICON9 = 10,\n    /**\n     * @generated from protobuf enum value: ICON10 = 11;\n     */\n    ICON10 = 11,\n    /**\n     * @generated from protobuf enum value: ICON11 = 12;\n     */\n    ICON11 = 12,\n    /**\n     * @generated from protobuf enum value: ICON12 = 13;\n     */\n    ICON12 = 13,\n    /**\n     * @generated from protobuf enum value: ICON13 = 14;\n     */\n    ICON13 = 14,\n    /**\n     * @generated from protobuf enum value: ICON14 = 15;\n     */\n    ICON14 = 15,\n    /**\n     * @generated from protobuf enum value: ICON15 = 16;\n     */\n    ICON15 = 16,\n    /**\n     * @generated from protobuf enum value: ICON16 = 17;\n     */\n    ICON16 = 17,\n    /**\n     * @generated from protobuf enum value: ICON17 = 18;\n     */\n    ICON17 = 18,\n    /**\n     * @generated from protobuf enum value: ICON18 = 19;\n     */\n    ICON18 = 19,\n    /**\n     * @generated from protobuf enum value: ICON19 = 20;\n     */\n    ICON19 = 20,\n    /**\n     * @generated from protobuf enum value: ICON20 = 21;\n     */\n    ICON20 = 21,\n    /**\n     * @generated from protobuf enum value: ICON21 = 22;\n     */\n    ICON21 = 22,\n    /**\n     * @generated from protobuf enum value: ICON22 = 23;\n     */\n    ICON22 = 23,\n    /**\n     * @generated from protobuf enum value: ICON23 = 24;\n     */\n    ICON23 = 24,\n    /**\n     * @generated from protobuf enum value: ICON24 = 25;\n     */\n    ICON24 = 25,\n    /**\n     * @generated from protobuf enum value: ICON25 = 26;\n     */\n    ICON25 = 26,\n    /**\n     * @generated from protobuf enum value: ICON26 = 27;\n     */\n    ICON26 = 27,\n    /**\n     * @generated from protobuf enum value: ICON27 = 28;\n     */\n    ICON27 = 28,\n    /**\n     * @generated from protobuf enum value: ICON28 = 29;\n     */\n    ICON28 = 29,\n    /**\n     * @generated from protobuf enum value: ICON29 = 30;\n     */\n    ICON29 = 30,\n    /**\n     * @generated from protobuf enum value: ICON30 = 31;\n     */\n    ICON30 = 31,\n}\n/**\n * @generated from protobuf enum proton_pass_vault_v1.VaultColor\n */\nexport enum VaultColor {\n    /**\n     * @generated from protobuf enum value: COLOR_UNSPECIFIED = 0;\n     */\n    COLOR_UNSPECIFIED = 0,\n    /**\n     * @generated from protobuf enum value: COLOR_CUSTOM = 1;\n     */\n    COLOR_CUSTOM = 1,\n    /**\n     * @generated from protobuf enum value: COLOR1 = 2;\n     */\n    COLOR1 = 2,\n    /**\n     * @generated from protobuf enum value: COLOR2 = 3;\n     */\n    COLOR2 = 3,\n    /**\n     * @generated from protobuf enum value: COLOR3 = 4;\n     */\n    COLOR3 = 4,\n    /**\n     * @generated from protobuf enum value: COLOR4 = 5;\n     */\n    COLOR4 = 5,\n    /**\n     * @generated from protobuf enum value: COLOR5 = 6;\n     */\n    COLOR5 = 6,\n    /**\n     * @generated from protobuf enum value: COLOR6 = 7;\n     */\n    COLOR6 = 7,\n    /**\n     * @generated from protobuf enum value: COLOR7 = 8;\n     */\n    COLOR7 = 8,\n    /**\n     * @generated from protobuf enum value: COLOR8 = 9;\n     */\n    COLOR8 = 9,\n    /**\n     * @generated from protobuf enum value: COLOR9 = 10;\n     */\n    COLOR9 = 10,\n    /**\n     * @generated from protobuf enum value: COLOR10 = 11;\n     */\n    COLOR10 = 11,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass VaultDisplayPreferences$Type extends MessageType<VaultDisplayPreferences> {\n    constructor() {\n        super('proton_pass_vault_v1.VaultDisplayPreferences', [\n            { no: 1, name: 'icon', kind: 'enum', T: () => ['proton_pass_vault_v1.VaultIcon', VaultIcon] },\n            { no: 2, name: 'color', kind: 'enum', T: () => ['proton_pass_vault_v1.VaultColor', VaultColor] },\n        ]);\n    }\n    create(value?: PartialMessage<VaultDisplayPreferences>): VaultDisplayPreferences {\n        const message = { icon: 0, color: 0 };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<VaultDisplayPreferences>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(\n        reader: IBinaryReader,\n        length: number,\n        options: BinaryReadOptions,\n        target?: VaultDisplayPreferences\n    ): VaultDisplayPreferences {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* proton_pass_vault_v1.VaultIcon icon */ 1:\n                    message.icon = reader.int32();\n                    break;\n                case /* proton_pass_vault_v1.VaultColor color */ 2:\n                    message.color = reader.int32();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(\n        message: VaultDisplayPreferences,\n        writer: IBinaryWriter,\n        options: BinaryWriteOptions\n    ): IBinaryWriter {\n        /* proton_pass_vault_v1.VaultIcon icon = 1; */\n        if (message.icon !== 0) writer.tag(1, WireType.Varint).int32(message.icon);\n        /* proton_pass_vault_v1.VaultColor color = 2; */\n        if (message.color !== 0) writer.tag(2, WireType.Varint).int32(message.color);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_vault_v1.VaultDisplayPreferences\n */\nexport const VaultDisplayPreferences = new VaultDisplayPreferences$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Vault$Type extends MessageType<Vault> {\n    constructor() {\n        super('proton_pass_vault_v1.Vault', [\n            { no: 1, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: 'display', kind: 'message', T: () => VaultDisplayPreferences },\n        ]);\n    }\n    create(value?: PartialMessage<Vault>): Vault {\n        const message = { name: '', description: '' };\n        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });\n        if (value !== undefined) reflectionMergePartial<Vault>(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Vault): Vault {\n        let message = target ?? this.create(),\n            end = reader.pos + length;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case /* string name */ 1:\n                    message.name = reader.string();\n                    break;\n                case /* string description */ 2:\n                    message.description = reader.string();\n                    break;\n                case /* proton_pass_vault_v1.VaultDisplayPreferences display */ 3:\n                    message.display = VaultDisplayPreferences.internalBinaryRead(\n                        reader,\n                        reader.uint32(),\n                        options,\n                        message.display\n                    );\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === 'throw')\n                        throw new globalThis.Error(\n                            `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`\n                        );\n                    let d = reader.skip(wireType);\n                    if (u !== false)\n                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message: Vault, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {\n        /* string name = 1; */\n        if (message.name !== '') writer.tag(1, WireType.LengthDelimited).string(message.name);\n        /* string description = 2; */\n        if (message.description !== '') writer.tag(2, WireType.LengthDelimited).string(message.description);\n        /* proton_pass_vault_v1.VaultDisplayPreferences display = 3; */\n        if (message.display)\n            VaultDisplayPreferences.internalBinaryWrite(\n                message.display,\n                writer.tag(3, WireType.LengthDelimited).fork(),\n                options\n            ).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\n/**\n * @generated MessageType for protobuf message proton_pass_vault_v1.Vault\n */\nexport const Vault = new Vault$Type();\n","import type { Item, ItemRevision } from '../data';\nimport type { FormEntryPrompt } from './form';\n\nexport enum AutoSaveType {\n    NEW,\n    UPDATE,\n}\n\nexport type AutoSavePromptOptions =\n    | { shouldPrompt: false }\n    | {\n          shouldPrompt: true;\n          data: { action: AutoSaveType.NEW } | { action: AutoSaveType.UPDATE; item: ItemRevision<'login'> };\n      };\n\nexport type WithAutoSavePromptOptions<T, U = boolean> = T & {\n    autosave: Extract<AutoSavePromptOptions, { shouldPrompt: U }>;\n};\n\nexport type AutosavePayload = { item: Item<'login'>; submission: FormEntryPrompt };\n","import type { AnyAction } from 'redux';\nimport type { Tabs } from 'webextension-polyfill';\n\nimport type { ExtensionSession } from '@proton/pass/auth';\nimport type { ExportRequestPayload } from '@proton/pass/export/types';\nimport type { AliasOptions, FeatureFlagState } from '@proton/pass/store';\nimport type { Notification } from '@proton/pass/store/actions/with-notification';\nimport type { ProxiedSettings } from '@proton/pass/store/reducers/settings';\nimport type { ExtensionForkResultPayload } from '@proton/shared/lib/authentication/sessionForking';\nimport type { User } from '@proton/shared/lib/interfaces';\n\nimport type { ShareEventPayload } from '../api';\nimport type { ForkPayload } from '../api/fork';\nimport type { AliasCreationDTO, SelectedItem } from '../data';\nimport type { TelemetryEvent } from '../data/telemetry';\nimport type { Maybe, MaybeNull } from '../utils';\nimport type { AutofillResult } from './autofill';\nimport type { AutosavePayload, WithAutoSavePromptOptions } from './autosave';\nimport type { FormEntry, FormEntryPrompt, NewFormEntry } from './form';\nimport type { OnboardingMessage } from './onboarding';\nimport type { OtpCode, OtpRequest } from './otp';\nimport type { TabId } from './runtime';\nimport type { PopupInitialState, WorkerState } from './state';\n\ntype WithPayload<T extends WorkerMessageType, P extends {}> = { type: T; payload: P };\n\nexport type PortFrameForwardingMessage<T = any> = {\n    forwardTo: string;\n    payload: T;\n    type: WorkerMessageType.PORT_FORWARDING_MESSAGE;\n};\n\nexport type ExtensionEndpoint = 'popup' | 'contentscript' | 'background' | 'page';\n\nexport enum WorkerMessageType {\n    ACCOUNT_EXTENSION = 'auth-ext',\n    ACCOUNT_FORK = 'fork',\n    ACCOUNT_ONBOARDING = 'pass-onboarding',\n    ACCOUNT_PROBE = 'pass-installed',\n    ACTIVITY_PROBE = 'ACTIVITY_PROBE',\n    ALIAS_CREATE = 'ALIAS_CREATE',\n    ALIAS_OPTIONS = 'ALIAS_OPTIONS',\n    AUTOFILL_OTP_CHECK = 'AUTOFILL_OTP_CHECK',\n    AUTOFILL_QUERY = 'AUTOFILL_QUERY',\n    AUTOFILL_SELECT = 'AUTOFILL_SELECT',\n    AUTOFILL_SYNC = 'AUTOFILL_SYNC',\n    AUTOSAVE_REQUEST = 'AUTOSAVE_REQUEST',\n    DEBUG = 'DEBUG',\n    EXPORT_DECRYPT = 'EXPORT_DECRYPT',\n    EXPORT_REQUEST = 'EXPORT_REQUEST',\n    FEATURE_FLAGS_UPDATE = 'FEATURE_FLAGS_UPDATE',\n    FORM_ENTRY_COMMIT = 'FORM_ENTRY_COMMIT',\n    FORM_ENTRY_REQUEST = 'FORM_ENTRY_REQUEST',\n    FORM_ENTRY_STAGE = 'FORM_ENTRY_STAGE',\n    FORM_ENTRY_STASH = 'FORM_ENTRY_STASH',\n    IMPORT_PROGRESS = 'IMPORT_PROGRESS',\n    LOAD_CONTENT_SCRIPT = 'LOAD_CONTENT_SCRIPT',\n    LOCALE_REQUEST = 'LOCALE_REQUEST',\n    LOG_EVENT = 'LOG_EVENT',\n    LOG_REQUEST = 'LOG_REQUEST',\n    NOTIFICATION = 'NOTIFICATION',\n    ONBOARDING_ACK = 'ONBOARDING_ACK',\n    ONBOARDING_REQUEST = 'ONBOARDING_REQUEST',\n    OTP_CODE_GENERATE = 'OTP_CODE_GENERATE',\n    PERMISSIONS_UPDATE = 'PERMISSIONS_UPDATE',\n    POPUP_INIT = 'POPUP_INIT',\n    PORT_FORWARDING_MESSAGE = 'PORT_FORWARDING',\n    PORT_UNAUTHORIZED = 'PORT_UNAUTHORIZED',\n    RESOLVE_EXTENSION_KEY = 'RESOLVE_EXTENSION_KEY',\n    RESOLVE_TAB = 'RESOLVE_TAB',\n    RESOLVE_USER_DATA = 'RESOLVE_USER_DATA',\n    SENTRY_CS_EVENT = 'SENTRY_CS_EVENT',\n    SESSION_RESUMED = 'SESSION_RESUMED',\n    SETTINGS_UPDATE = 'SETTINGS_UPDATE',\n    SHARE_SERVER_EVENT = 'SHARE_SERVER_EVENT',\n    START_CONTENT_SCRIPT = 'START_CONTENT_SCRIPT',\n    STORE_ACTION = 'STORE_ACTION',\n    TELEMETRY_EVENT = 'TELEMETRY_EVENT',\n    UNLOAD_CONTENT_SCRIPT = 'UNLOAD_CONTENT_SCRIPT',\n    UNLOCK_REQUEST = 'UNLOCK_REQUEST',\n    UPDATE_AVAILABLE = 'UPDATE_AVAILABLE',\n    WORKER_INIT = 'WORKER_INIT',\n    WORKER_STATUS = 'WORKER_STATUS',\n    WORKER_WAKEUP = 'WORKER_WAKEUP',\n}\n\n/* messages for communication with account */\nexport type AccountAuthExtMessage = { type: WorkerMessageType.ACCOUNT_EXTENSION };\nexport type AccountForkMessage = WithPayload<WorkerMessageType.ACCOUNT_FORK, ForkPayload>;\nexport type AccountPassOnboardingMessage = { type: WorkerMessageType.ACCOUNT_ONBOARDING };\nexport type AccountProbeMessage = { type: WorkerMessageType.ACCOUNT_PROBE };\n\nexport type ActivityProbeMessage = { type: WorkerMessageType.ACTIVITY_PROBE };\nexport type AliasCreateMessage = WithPayload<WorkerMessageType.ALIAS_CREATE, { url: string; alias: AliasCreationDTO }>;\nexport type AliasOptionsMessage = { type: WorkerMessageType.ALIAS_OPTIONS };\nexport type AutofillOTPCheckMessage = { type: WorkerMessageType.AUTOFILL_OTP_CHECK };\nexport type AutofillQueryMessage = { type: WorkerMessageType.AUTOFILL_QUERY };\nexport type AutofillSelectMessage = WithPayload<WorkerMessageType.AUTOFILL_SELECT, SelectedItem>;\nexport type AutofillSyncMessage = WithPayload<WorkerMessageType.AUTOFILL_SYNC, AutofillResult>;\nexport type AutoSaveRequestMessage = WithPayload<WorkerMessageType.AUTOSAVE_REQUEST, AutosavePayload>;\nexport type DebugMessage = WithPayload<WorkerMessageType.DEBUG, { debug: string }>;\nexport type ExportRequestMessage = WithPayload<WorkerMessageType.EXPORT_REQUEST, ExportRequestPayload>;\nexport type FeatureFlagsUpdateMessage = WithPayload<WorkerMessageType.FEATURE_FLAGS_UPDATE, FeatureFlagState>;\nexport type FormEntryCommitMessage = WithPayload<WorkerMessageType.FORM_ENTRY_COMMIT, { reason: string }>;\nexport type FormEntryRequestMessage = { type: WorkerMessageType.FORM_ENTRY_REQUEST };\nexport type FormEntryStageMessage = WithPayload<WorkerMessageType.FORM_ENTRY_STAGE, NewFormEntry & { reason: string }>;\nexport type FormEntryStashMessage = WithPayload<WorkerMessageType.FORM_ENTRY_STASH, { reason: string }>;\nexport type ImportDecryptMessage = WithPayload<WorkerMessageType.EXPORT_DECRYPT, { data: string; passphrase: string }>;\nexport type ImportProgressMessage = WithPayload<WorkerMessageType.IMPORT_PROGRESS, { progress: number }>;\nexport type LoadContentScriptMessage = { type: WorkerMessageType.LOAD_CONTENT_SCRIPT };\nexport type LocaleRequestMessage = { type: WorkerMessageType.LOCALE_REQUEST };\nexport type LogEventMessage = WithPayload<WorkerMessageType.LOG_EVENT, { log: string }>;\nexport type LogRequestMessage = { type: WorkerMessageType.LOG_REQUEST };\nexport type NotificationMessage = WithPayload<WorkerMessageType.NOTIFICATION, { notification: Notification }>;\nexport type OnboardingAckMessage = WithPayload<WorkerMessageType.ONBOARDING_ACK, { message: OnboardingMessage }>;\nexport type OnboardingRequestMessage = { type: WorkerMessageType.ONBOARDING_REQUEST };\nexport type OTPCodeGenerateMessage = WithPayload<WorkerMessageType.OTP_CODE_GENERATE, OtpRequest>;\nexport type PermissionsUpdateMessage = WithPayload<WorkerMessageType.PERMISSIONS_UPDATE, { check: boolean }>;\nexport type PopupInitMessage = WithPayload<WorkerMessageType.POPUP_INIT, { tabId: TabId }>;\nexport type PortUnauthorizedMessage = { type: WorkerMessageType.PORT_UNAUTHORIZED };\nexport type ResolveExtensionKeyMessage = { type: WorkerMessageType.RESOLVE_EXTENSION_KEY };\nexport type ResolveTabIdMessage = { type: WorkerMessageType.RESOLVE_TAB };\nexport type ResolveUserDataMessage = { type: WorkerMessageType.RESOLVE_USER_DATA };\nexport type ResumeSessionSuccessMessage = WithPayload<WorkerMessageType.SESSION_RESUMED, ExtensionSession>;\nexport type SentryCSEventMessage = WithPayload<WorkerMessageType.SENTRY_CS_EVENT, { message: string; data: any }>;\nexport type SettingsUpdateMessage = WithPayload<WorkerMessageType.SETTINGS_UPDATE, ProxiedSettings>;\nexport type ShareServerEventMessage = WithPayload<WorkerMessageType.SHARE_SERVER_EVENT, ShareEventPayload>;\nexport type StartContentScriptMessage = { type: WorkerMessageType.START_CONTENT_SCRIPT };\nexport type StoreActionMessage = WithPayload<WorkerMessageType.STORE_ACTION, { action: AnyAction }>;\nexport type TelemetryEventMessage = WithPayload<WorkerMessageType.TELEMETRY_EVENT, { event: TelemetryEvent }>;\nexport type UnloadContentScriptMessage = { type: WorkerMessageType.UNLOAD_CONTENT_SCRIPT };\nexport type UnlockRequestMessage = WithPayload<WorkerMessageType.UNLOCK_REQUEST, { pin: string }>;\nexport type UpdateAvailableMessage = { type: WorkerMessageType.UPDATE_AVAILABLE };\nexport type WorkerInitMessage = WithPayload<WorkerMessageType.WORKER_INIT, { sync: boolean }>;\nexport type WorkerStatusMessage = WithPayload<WorkerMessageType.WORKER_STATUS, { state: WorkerState }>;\nexport type WorkerWakeUpMessage = WithPayload<WorkerMessageType.WORKER_WAKEUP, { tabId: TabId }>;\n\nexport type WorkerMessage =\n    | AccountAuthExtMessage\n    | AccountForkMessage\n    | AccountPassOnboardingMessage\n    | AccountProbeMessage\n    | ActivityProbeMessage\n    | AliasCreateMessage\n    | AliasOptionsMessage\n    | AutofillOTPCheckMessage\n    | AutofillQueryMessage\n    | AutofillSelectMessage\n    | AutofillSyncMessage\n    | AutoSaveRequestMessage\n    | DebugMessage\n    | ExportRequestMessage\n    | FeatureFlagsUpdateMessage\n    | FormEntryCommitMessage\n    | FormEntryRequestMessage\n    | FormEntryStageMessage\n    | FormEntryStashMessage\n    | ImportDecryptMessage\n    | ImportProgressMessage\n    | LoadContentScriptMessage\n    | LocaleRequestMessage\n    | LogEventMessage\n    | LogRequestMessage\n    | NotificationMessage\n    | OnboardingAckMessage\n    | OnboardingRequestMessage\n    | OTPCodeGenerateMessage\n    | PermissionsUpdateMessage\n    | PopupInitMessage\n    | PortFrameForwardingMessage\n    | PortUnauthorizedMessage\n    | ResolveExtensionKeyMessage\n    | ResolveTabIdMessage\n    | ResolveUserDataMessage\n    | ResumeSessionSuccessMessage\n    | SentryCSEventMessage\n    | SettingsUpdateMessage\n    | ShareServerEventMessage\n    | StartContentScriptMessage\n    | StoreActionMessage\n    | TelemetryEventMessage\n    | UnloadContentScriptMessage\n    | UnlockRequestMessage\n    | UpdateAvailableMessage\n    | WorkerInitMessage\n    | WorkerStatusMessage\n    | WorkerWakeUpMessage;\n\nexport type WorkerMessageWithSender<T extends WorkerMessage = WorkerMessage> = T & { sender: ExtensionEndpoint };\nexport type MessageFailure = { type: 'error'; error: string; payload?: string };\nexport type MessageSuccess<T> = T extends { [key: string]: any } ? T & { type: 'success' } : { type: 'success' };\nexport type MaybeMessage<T> = MessageSuccess<T> | MessageFailure;\nexport type Outcome<T = {}, F = {}> = ({ ok: true } & T) | ({ ok: false; error: MaybeNull<string> } & F);\n\ntype WorkerMessageResponseMap = {\n    [WorkerMessageType.ACCOUNT_FORK]: { payload: ExtensionForkResultPayload };\n    [WorkerMessageType.ALIAS_CREATE]: Outcome;\n    [WorkerMessageType.ALIAS_OPTIONS]: Outcome<{ options: AliasOptions; needsUpgrade: boolean }>;\n    [WorkerMessageType.AUTOFILL_OTP_CHECK]: { shouldPrompt: false } | ({ shouldPrompt: true } & SelectedItem);\n    [WorkerMessageType.AUTOFILL_QUERY]: AutofillResult;\n    [WorkerMessageType.AUTOFILL_SELECT]: { username: string; password: string };\n    [WorkerMessageType.EXPORT_DECRYPT]: { data: string };\n    [WorkerMessageType.EXPORT_REQUEST]: { data: string };\n    [WorkerMessageType.FORM_ENTRY_COMMIT]: { committed: Maybe<FormEntryPrompt> };\n    [WorkerMessageType.FORM_ENTRY_REQUEST]: { submission: Maybe<WithAutoSavePromptOptions<FormEntry>> };\n    [WorkerMessageType.FORM_ENTRY_STAGE]: { staged: FormEntry };\n    [WorkerMessageType.LOCALE_REQUEST]: { locale: string };\n    [WorkerMessageType.LOG_REQUEST]: { logs: string[] };\n    [WorkerMessageType.ONBOARDING_REQUEST]: { message?: OnboardingMessage };\n    [WorkerMessageType.OTP_CODE_GENERATE]: OtpCode;\n    [WorkerMessageType.POPUP_INIT]: PopupInitialState;\n    [WorkerMessageType.RESOLVE_EXTENSION_KEY]: { key: string };\n    [WorkerMessageType.RESOLVE_TAB]: { tab: Maybe<Tabs.Tab> };\n    [WorkerMessageType.RESOLVE_USER_DATA]: { user: MaybeNull<User> };\n    [WorkerMessageType.UNLOCK_REQUEST]: Outcome<{}, { canRetry: boolean }>;\n    [WorkerMessageType.WORKER_INIT]: WorkerState;\n    [WorkerMessageType.WORKER_WAKEUP]: WorkerState & { settings: ProxiedSettings; features: FeatureFlagState };\n};\n\nexport type WorkerMessageResponse<MessageType> = MessageType extends keyof WorkerMessageResponseMap\n    ? WorkerMessageResponseMap[MessageType]\n    : boolean;\n\nexport type WorkerResponse<T extends Maybe<WorkerMessage | WorkerMessageWithSender>> = T extends undefined\n    ? MessageFailure\n    : T extends WorkerMessage\n    ? T['type'] extends infer MessageType\n        ? MaybeMessage<WorkerMessageResponse<MessageType>>\n        : never\n    : never;\n\nexport type WorkerSendResponse<T extends Maybe<WorkerMessage> = Maybe<WorkerMessage>> = (\n    response: WorkerResponse<T>\n) => void;\n","import browser from '@proton/pass/globals/browser';\nimport type {\n    ExtensionEndpoint,\n    MessageFailure,\n    PortFrameForwardingMessage,\n    WorkerMessage,\n    WorkerMessageWithSender,\n    WorkerResponse,\n} from '@proton/pass/types';\nimport { WorkerMessageType } from '@proton/pass/types';\n\n/**\n * Wraps the untyped browser.runtime.sendMessage\n * with our message/response types to avoid manually\n * casting the response types every time we use extension\n * messaging\n */\nexport const sendMessage = async <T extends WorkerMessageWithSender>(\n    message: T\n): Promise<WorkerResponse<typeof message> | MessageFailure> => {\n    try {\n        return (await browser.runtime.sendMessage(browser.runtime.id, message)) as WorkerResponse<typeof message>;\n    } catch (error: any) {\n        return { type: 'error', error };\n    }\n};\n\n/**\n * Allows mapping over the response type via\n * an onReponse callback instead of manually\n * awaiting the sendMessage response and handling\n * it imperatively\n */\nsendMessage.on = async <R, T extends WorkerMessageWithSender>(\n    message: T,\n    onResponse: (res: WorkerResponse<typeof message> | MessageFailure) => R\n): Promise<R> => onResponse(await sendMessage(message));\n\n/**\n * Allows triggering an effect only if the\n * worker response is of type \"success\"\n */\nsendMessage.onSuccess = async <T extends WorkerMessageWithSender>(\n    message: T,\n    onSuccess: (res: Exclude<WorkerResponse<typeof message>, MessageFailure>) => void\n): Promise<void> =>\n    sendMessage.on(message, (response) => {\n        if (response.type === 'success') {\n            onSuccess(response as Exclude<WorkerResponse<typeof message>, MessageFailure>);\n        }\n    });\n\nexport type MessageWithSenderFactory = <T extends WorkerMessage>(message: T) => WorkerMessageWithSender<T>;\n\nexport const backgroundMessage: MessageWithSenderFactory = (message) => ({\n    ...message,\n    sender: 'background',\n});\n\nexport const popupMessage: MessageWithSenderFactory = (message) => ({\n    ...message,\n    sender: 'popup',\n});\n\nexport const contentScriptMessage: MessageWithSenderFactory = (message) => ({\n    ...message,\n    sender: 'contentscript',\n});\n\nexport const pageMessage: MessageWithSenderFactory = (message) => ({\n    ...message,\n    sender: 'page',\n});\n\nexport const portForwardingMessage = <T extends any>(forwardTo: string, payload: T): PortFrameForwardingMessage => ({\n    type: WorkerMessageType.PORT_FORWARDING_MESSAGE,\n    payload,\n    forwardTo,\n});\n\nexport const resolveMessageFactory = (endpoint: ExtensionEndpoint) => {\n    switch (endpoint) {\n        case 'background':\n            return backgroundMessage;\n        case 'popup':\n            return popupMessage;\n        case 'contentscript':\n            return contentScriptMessage;\n        case 'page':\n            return pageMessage;\n    }\n};\n","/**\n * A :func:`rule` depends on another rule which itself depends on the first\n * rule again, either directly or indirectly.\n */\nclass CycleError extends Error {}\n\n/**\n * An examined element was not contained in a browser ``window`` object, but\n * something needed it to be.\n */\nclass NoWindowError extends Error {}\n\nvar exceptions = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    CycleError: CycleError,\n    NoWindowError: NoWindowError,\n});\n\n/**\n * Return the passed-in arg. Useful as a default.\n */\nfunction identity(x) {\n    return x;\n}\n\n/*eslint-env browser*/\n\n/**\n * From an iterable return the best item, according to an arbitrary comparator\n * function. In case of a tie, the first item wins.\n *\n * @arg by {function} Given an item of the iterable, return a value to compare\n * @arg isBetter {function} Return whether its first arg is better than its\n *     second\n */\nfunction best(iterable, by, isBetter) {\n    let bestSoFar, bestKeySoFar;\n    let isFirst = true;\n    forEach(function (item) {\n        const key = by(item);\n        if (isBetter(key, bestKeySoFar) || isFirst) {\n            bestSoFar = item;\n            bestKeySoFar = key;\n            isFirst = false;\n        }\n    }, iterable);\n    if (isFirst) {\n        throw new Error('Tried to call best() on empty iterable');\n    }\n    return bestSoFar;\n}\n\n/**\n * Return the maximum item from an iterable, as defined by >.\n *\n * Works with any type that works with >. If multiple items are equally great,\n * return the first.\n *\n * @arg by {function} Given an item of the iterable, returns a value to\n *     compare\n */\nfunction max(iterable, by = identity) {\n    return best(iterable, by, (a, b) => a > b);\n}\n\n/**\n * Return an Array of maximum items from an iterable, as defined by > and ===.\n *\n * If an empty iterable is passed in, return [].\n */\nfunction maxes(iterable, by = identity) {\n    let bests = [];\n    let bestKeySoFar;\n    let isFirst = true;\n    forEach(function (item) {\n        const key = by(item);\n        if (key > bestKeySoFar || isFirst) {\n            bests = [item];\n            bestKeySoFar = key;\n            isFirst = false;\n        } else if (key === bestKeySoFar) {\n            bests.push(item);\n        }\n    }, iterable);\n    return bests;\n}\n\n/**\n * Return the minimum item from an iterable, as defined by <.\n *\n * If multiple items are equally great, return the first.\n */\nfunction min(iterable, by = identity) {\n    return best(iterable, by, (a, b) => a < b);\n}\n\n/**\n * Return the sum of an iterable, as defined by the + operator.\n */\nfunction sum(iterable) {\n    let total;\n    let isFirst = true;\n    forEach(function assignOrAdd(addend) {\n        if (isFirst) {\n            total = addend;\n            isFirst = false;\n        } else {\n            total += addend;\n        }\n    }, iterable);\n    return total;\n}\n\n/**\n * Return the number of items in an iterable, consuming it as a side effect.\n */\nfunction length(iterable) {\n    let num = 0;\n    // eslint-disable-next-line no-unused-vars\n    for (let item of iterable) {\n        num++;\n    }\n    return num;\n}\n\n/**\n * Iterate, depth first, over a DOM node. Return the original node first.\n *\n * @arg shouldTraverse {function} Given a node, say whether we should\n *     include it and its children. Default: always true.\n */\nfunction* walk(element, shouldTraverse = (element) => true) {\n    yield element;\n    for (let child of element.childNodes) {\n        if (shouldTraverse(child)) {\n            for (let w of walk(child, shouldTraverse)) {\n                yield w;\n            }\n        }\n    }\n}\n\nconst blockTags = new Set([\n    'ADDRESS',\n    'BLOCKQUOTE',\n    'BODY',\n    'CENTER',\n    'DIR',\n    'DIV',\n    'DL',\n    'FIELDSET',\n    'FORM',\n    'H1',\n    'H2',\n    'H3',\n    'H4',\n    'H5',\n    'H6',\n    'HR',\n    'ISINDEX',\n    'MENU',\n    'NOFRAMES',\n    'NOSCRIPT',\n    'OL',\n    'P',\n    'PRE',\n    'TABLE',\n    'UL',\n    'DD',\n    'DT',\n    'FRAMESET',\n    'LI',\n    'TBODY',\n    'TD',\n    'TFOOT',\n    'TH',\n    'THEAD',\n    'TR',\n    'HTML',\n]);\n/**\n * Return whether a DOM element is a block element by default (rather than by\n * styling).\n */\nfunction isBlock(element) {\n    return blockTags.has(element.tagName);\n}\n\n/**\n * Yield strings of text nodes within a normalized DOM node and its children,\n * without venturing into any contained block elements.\n *\n * @arg shouldTraverse {function} Specify additional elements to exclude by\n *     returning false\n */\nfunction* inlineTexts(element, shouldTraverse = (element) => true) {\n    // TODO: Could we just use querySelectorAll() with a really long\n    // selector rather than walk(), for speed?\n    for (let child of walk(\n        element,\n        (element) =>\n            !(isBlock(element) || (element.tagName === 'SCRIPT' && element.tagName === 'STYLE')) &&\n            shouldTraverse(element)\n    )) {\n        if (child.nodeType === child.TEXT_NODE) {\n            // wholeText() is not implemented by jsdom, so we use\n            // textContent(). The result should be the same, since\n            // we're calling it on only text nodes, but it may be\n            // slower. On the positive side, it means we don't need to\n            // normalize the DOM tree first.\n            yield child.textContent;\n        }\n    }\n}\n\n/**\n * Return the total length of the inline text within an element, with\n * whitespace collapsed.\n *\n * @arg shouldTraverse {function} Specify additional elements to exclude by\n *     returning false\n */\nfunction inlineTextLength(element, shouldTraverse = (element) => true) {\n    return sum(map((text) => collapseWhitespace(text).length, inlineTexts(element, shouldTraverse)));\n}\n\n/**\n * Return a string with each run of whitespace collapsed to a single space.\n */\nfunction collapseWhitespace(str) {\n    return str.replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * Return the ratio of the inline text length of the links in an element to the\n * inline text length of the entire element.\n *\n * @arg inlineLength {number} Optionally, the precalculated inline\n *     length of the fnode. If omitted, we will calculate it ourselves.\n */\nfunction linkDensity(fnode, inlineLength) {\n    if (inlineLength === undefined) {\n        inlineLength = inlineTextLength(fnode.element);\n    }\n    const lengthWithoutLinks = inlineTextLength(fnode.element, (element) => element.tagName !== 'A');\n    return (inlineLength - lengthWithoutLinks) / inlineLength;\n}\n\n/**\n * Return whether an element is a text node that consist wholly of whitespace.\n */\nfunction isWhitespace(element) {\n    return element.nodeType === element.TEXT_NODE && element.textContent.trim().length === 0;\n}\n\n/**\n * Get a key of a map, first setting it to a default value if it's missing.\n */\nfunction setDefault(map, key, defaultMaker) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    const defaultValue = defaultMaker();\n    map.set(key, defaultValue);\n    return defaultValue;\n}\n\n/**\n * Get a key of a map or, if it's missing, a default value.\n */\nfunction getDefault(map, key, defaultMaker) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    return defaultMaker();\n}\n\n/**\n * Return an Array, the reverse topological sort of the given nodes.\n *\n * @arg nodes An iterable of arbitrary things\n * @arg nodesThatNeed {function} Take a node and returns an Array of nodes\n *     that depend on it\n */\nfunction toposort(nodes, nodesThatNeed) {\n    const ret = [];\n    const todo = new Set(nodes);\n    const inProgress = new Set();\n\n    function visit(node) {\n        if (inProgress.has(node)) {\n            throw new CycleError('The graph has a cycle.');\n        }\n        if (todo.has(node)) {\n            inProgress.add(node);\n            for (let needer of nodesThatNeed(node)) {\n                visit(needer);\n            }\n            inProgress.delete(node);\n            todo.delete(node);\n            ret.push(node);\n        }\n    }\n\n    while (todo.size > 0) {\n        visit(first(todo));\n    }\n    return ret;\n}\n\n/**\n * A Set with the additional methods it ought to have had\n */\nclass NiceSet extends Set {\n    /**\n     * Remove and return an arbitrary item. Throw an Error if I am empty.\n     */\n    pop() {\n        for (let v of this.values()) {\n            this.delete(v);\n            return v;\n        }\n        throw new Error('Tried to pop from an empty NiceSet.');\n    }\n\n    /**\n     * Union another set or other iterable into myself.\n     *\n     * @return myself, for chaining\n     */\n    extend(otherSet) {\n        for (let item of otherSet) {\n            this.add(item);\n        }\n        return this;\n    }\n\n    /**\n     * Subtract another set from a copy of me.\n     *\n     * @return a copy of myself excluding the elements in ``otherSet``.\n     */\n    minus(otherSet) {\n        const ret = new NiceSet(this);\n        for (const item of otherSet) {\n            ret.delete(item);\n        }\n        return ret;\n    }\n\n    /**\n     * Actually show the items in me.\n     */\n    toString() {\n        return '{' + Array.from(this).join(', ') + '}';\n    }\n}\n\n/**\n * Return the first item of an iterable.\n */\nfunction first(iterable) {\n    for (let i of iterable) {\n        return i;\n    }\n}\n\n/**\n * Given any node in a DOM tree, return the root element of the tree, generally\n * an HTML element.\n */\nfunction rootElement(element) {\n    return element.ownerDocument.documentElement;\n}\n\n/**\n * Return the number of times a regex occurs within the string `haystack`.\n *\n * Caller must make sure `regex` has the 'g' option set.\n */\nfunction numberOfMatches(regex, haystack) {\n    return (haystack.match(regex) || []).length;\n}\n\n/**\n * Wrap a scoring callback, and set its element to the page root iff a score is\n * returned.\n *\n * This is used to build rulesets which classify entire pages rather than\n * picking out specific elements.\n *\n * For example, these rules might classify a page as a \"login page\", influenced\n * by whether they have login buttons or username fields:\n *\n * ``rule(type('loginPage'), score(page(pageContainsLoginButton))),``\n * ``rule(type('loginPage'), score(page(pageContainsUsernameField)))``\n */\nfunction page(scoringFunction) {\n    function wrapper(fnode) {\n        const scoreAndTypeAndNote = scoringFunction(fnode);\n        if (scoreAndTypeAndNote.score !== undefined) {\n            scoreAndTypeAndNote.element = rootElement(fnode.element);\n        }\n        return scoreAndTypeAndNote;\n    }\n    return wrapper;\n}\n\n/**\n * Sort the elements by their position in the DOM.\n *\n * @arg fnodes {iterable} fnodes to sort\n * @return {Array} sorted fnodes\n */\nfunction domSort(fnodes) {\n    function compare(a, b) {\n        const element = a.element;\n        const position = element.compareDocumentPosition(b.element);\n        if (position & element.DOCUMENT_POSITION_FOLLOWING) {\n            return -1;\n        } else if (position & element.DOCUMENT_POSITION_PRECEDING) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    return Array.from(fnodes).sort(compare);\n}\n\n/* istanbul ignore next */\n/**\n * Return the DOM element contained in a passed-in fnode. Return passed-in DOM\n * elements verbatim.\n *\n * @arg fnodeOrElement {Node|Fnode}\n */\nfunction toDomElement(fnodeOrElement) {\n    return isDomElement(fnodeOrElement) ? fnodeOrElement : fnodeOrElement.element;\n}\n\n/**\n * Checks whether any of the element's attribute values satisfy some condition.\n *\n * Example::\n *\n *     rule(type('foo'),\n *          score(attributesMatch(element,\n *                                attr => attr.includes('good'),\n *                                ['id', 'alt']) ? 2 : 1))\n *\n * @arg element {Node} Element whose attributes you want to search\n * @arg predicate {function} A condition to check. Take a string and\n *     return a boolean. If an attribute has multiple values (e.g. the class\n *     attribute), attributesMatch will check each one.\n * @arg attrs {string[]} An Array of attributes you want to search. If none are\n *     provided, search all.\n * @return Whether any of the attribute values satisfy the predicate function\n */\nfunction attributesMatch(element, predicate, attrs = []) {\n    const attributes = attrs.length === 0 ? Array.from(element.attributes).map((a) => a.name) : attrs;\n    for (let i = 0; i < attributes.length; i++) {\n        const attr = element.getAttribute(attributes[i]);\n        // If the attribute is an array, apply the scoring function to each element\n        if (attr && ((Array.isArray(attr) && attr.some(predicate)) || predicate(attr))) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/* istanbul ignore next */\n/**\n * Yield an element and each of its ancestors.\n */\nfunction* ancestors(element) {\n    yield element;\n    let parent;\n    while ((parent = element.parentNode) !== null && parent.nodeType === parent.ELEMENT_NODE) {\n        yield parent;\n        element = parent;\n    }\n}\n\n/**\n * Return the sigmoid of the argument: 1 / (1 + exp(-x)). This is useful for\n * crunching a feature value that may have a wide range into the range (0, 1)\n * without a hard ceiling: the sigmoid of even a very large number will be a\n * little larger than that of a slightly smaller one.\n *\n * @arg x {Number} a number to be compressed into the range (0, 1)\n */\nfunction sigmoid(x) {\n    return 1 / (1 + Math.exp(-x));\n}\n\n/* istanbul ignore next */\n/**\n * Return whether an element is practically visible, considering things like 0\n * size or opacity, ``visibility: hidden`` and ``overflow: hidden``.\n *\n * Merely being scrolled off the page in either horizontally or vertically\n * doesn't count as invisible; the result of this function is meant to be\n * independent of viewport size.\n *\n * @throws {NoWindowError} The element (or perhaps one of its ancestors) is not\n *     in a window, so we can't find the `getComputedStyle()` routine to call.\n *     That routine is the source of most of the information we use, so you\n *     should pick a different strategy for non-window contexts.\n */\nfunction isVisible(fnodeOrElement) {\n    // This could be 5x more efficient if https://github.com/w3c/csswg-drafts/issues/4122 happens.\n    const element = toDomElement(fnodeOrElement);\n    const elementWindow = windowForElement(element);\n    const elementRect = element.getBoundingClientRect();\n    const elementStyle = elementWindow.getComputedStyle(element);\n    // Alternative to reading ``display: none`` due to Bug 1381071.\n    if (elementRect.width === 0 && elementRect.height === 0 && elementStyle.overflow !== 'hidden') {\n        return false;\n    }\n    if (elementStyle.visibility === 'hidden') {\n        return false;\n    }\n    // Check if the element is irrevocably off-screen:\n    if (elementRect.x + elementRect.width < 0 || elementRect.y + elementRect.height < 0) {\n        return false;\n    }\n    for (const ancestor of ancestors(element)) {\n        const isElement = ancestor === element;\n        const style = isElement ? elementStyle : elementWindow.getComputedStyle(ancestor);\n        if (style.opacity === '0') {\n            return false;\n        }\n        if (style.display === 'contents') {\n            // ``display: contents`` elements have no box themselves, but children are\n            // still rendered.\n            continue;\n        }\n        const rect = isElement ? elementRect : ancestor.getBoundingClientRect();\n        if ((rect.width === 0 || rect.height === 0) && elementStyle.overflow === 'hidden') {\n            // Zero-sized ancestors don’t make descendants hidden unless the descendant\n            // has ``overflow: hidden``.\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Return the extracted [r, g, b, a] values from a string like \"rgba(0, 5, 255, 0.8)\",\n * and scale them to 0..1. If no alpha is specified, return undefined for it.\n */\nfunction rgbaFromString(str) {\n    const m = str.match(/^rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i);\n    if (m) {\n        return [m[1] / 255, m[2] / 255, m[3] / 255, m[4] === undefined ? undefined : parseFloat(m[4])];\n    } else {\n        throw new Error('Color ' + str + ' did not match pattern rgb[a](r, g, b[, a]).');\n    }\n}\n\n/**\n * Return the saturation 0..1 of a color defined by RGB values 0..1.\n */\nfunction saturation(r, g, b) {\n    const cMax = Math.max(r, g, b);\n    const cMin = Math.min(r, g, b);\n    const delta = cMax - cMin;\n    const lightness = (cMax + cMin) / 2;\n    const denom = 1 - Math.abs(2 * lightness - 1);\n    // Return 0 if it's black (R, G, and B all 0).\n    return denom === 0 ? 0 : delta / denom;\n}\n\n/**\n * Scale a number to the range [0, 1] using a linear slope.\n *\n * For a rising line, the result is 0 until the input reaches zeroAt, then\n * increases linearly until oneAt, at which it becomes 1. To make a falling\n * line, where the result is 1 to the left and 0 to the right, use a zeroAt\n * greater than oneAt.\n */\nfunction linearScale(number, zeroAt, oneAt) {\n    const isRising = zeroAt < oneAt;\n    if (isRising) {\n        if (number <= zeroAt) {\n            return 0;\n        } else if (number >= oneAt) {\n            return 1;\n        }\n    } else {\n        if (number >= zeroAt) {\n            return 0;\n        } else if (number <= oneAt) {\n            return 1;\n        }\n    }\n    const slope = 1 / (oneAt - zeroAt);\n    return slope * (number - zeroAt);\n}\n\n// -------- Routines below this point are private to the framework. --------\n\n/**\n * Flatten out an iterable of iterables into a single iterable of non-\n * iterables. Does not consider strings to be iterable.\n */\nfunction* flatten(iterable) {\n    for (const i of iterable) {\n        if (typeof i !== 'string' && !(i instanceof Element) && isIterable(i)) {\n            yield* flatten(i);\n        } else {\n            yield i;\n        }\n    }\n}\n\n/**\n * A lazy, top-level ``Array.map()`` workalike that works on anything iterable\n */\nfunction* map(fn, iterable) {\n    for (const i of iterable) {\n        yield fn(i);\n    }\n}\n\n/**\n * A lazy, top-level ``Array.forEach()`` workalike that works on anything\n * iterable\n */\nfunction forEach(fn, iterable) {\n    for (const i of iterable) {\n        fn(i);\n    }\n}\n\n/* istanbul ignore next */\n/**\n * @return whether a thing appears to be a DOM element.\n */\nfunction isDomElement(thing) {\n    return thing.nodeName !== undefined;\n}\n\nfunction isIterable(thing) {\n    return thing && typeof thing[Symbol.iterator] === 'function';\n}\n\n/**\n * Return an backward iterator over an Array without reversing it in place.\n */\nfunction* reversed(array) {\n    for (let i = array.length - 1; i >= 0; i--) {\n        yield array[i];\n    }\n}\n\n/* istanbul ignore next */\n/*\n * Return the window an element is in.\n *\n * @throws {NoWindowError} There isn't such a window.\n */\nfunction windowForElement(element) {\n    let doc = element.ownerDocument;\n    if (doc === null) {\n        // The element itself was a document.\n        doc = element;\n    }\n    const win = doc.defaultView;\n    if (win === null) {\n        throw new NoWindowError();\n    }\n    return win;\n}\n\nvar utilsForFrontend = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    identity: identity,\n    best: best,\n    max: max,\n    maxes: maxes,\n    min: min,\n    sum: sum,\n    length: length,\n    walk: walk,\n    isBlock: isBlock,\n    inlineTexts: inlineTexts,\n    inlineTextLength: inlineTextLength,\n    collapseWhitespace: collapseWhitespace,\n    linkDensity: linkDensity,\n    isWhitespace: isWhitespace,\n    setDefault: setDefault,\n    getDefault: getDefault,\n    toposort: toposort,\n    NiceSet: NiceSet,\n    first: first,\n    rootElement: rootElement,\n    numberOfMatches: numberOfMatches,\n    page: page,\n    domSort: domSort,\n    toDomElement: toDomElement,\n    attributesMatch: attributesMatch,\n    ancestors: ancestors,\n    sigmoid: sigmoid,\n    isVisible: isVisible,\n    rgbaFromString: rgbaFromString,\n    saturation: saturation,\n    linearScale: linearScale,\n    flatten: flatten,\n    map: map,\n    forEach: forEach,\n    isDomElement: isDomElement,\n    reversed: reversed,\n    windowForElement: windowForElement,\n});\n\n/**\n * Return the number of stride nodes between 2 DOM nodes *at the same\n * level of the tree*, without going up or down the tree.\n *\n * ``left`` xor ``right`` may also be undefined.\n */\nfunction numStrides(left, right) {\n    let num = 0;\n\n    // Walk right from left node until we hit the right node or run out:\n    let sibling = left;\n    let shouldContinue = sibling && sibling !== right;\n    while (shouldContinue) {\n        sibling = sibling.nextSibling;\n        if ((shouldContinue = sibling && sibling !== right) && !isWhitespace(sibling)) {\n            num += 1;\n        }\n    }\n    if (sibling !== right) {\n        // Don't double-punish if left and right are siblings.\n        // Walk left from right node:\n        sibling = right;\n        while (sibling) {\n            sibling = sibling.previousSibling;\n            if (sibling && !isWhitespace(sibling)) {\n                num += 1;\n            }\n        }\n    }\n    return num;\n}\n\n/**\n * Return a topological distance between 2 DOM nodes or :term:`fnodes<fnode>`\n * weighted according to the similarity of their ancestry in the DOM. For\n * instance, if one node is situated inside ``<div><span><b><theNode>`` and the\n * other node is at ``<differentDiv><span><b><otherNode>``, they are considered\n * close to each other for clustering purposes. This is useful for picking out\n * nodes which have similar purposes.\n *\n * Return ``Number.MAX_VALUE`` if one of the nodes contains the other.\n *\n * This is largely an implementation detail of :func:`clusters`, but you can\n * call it yourself if you wish to implement your own clustering. Takes O(n log\n * n) time.\n *\n * Note that the default costs may change; pass them in explicitly if they are\n * important to you.\n *\n * @arg fnodeA {Node|Fnode}\n * @arg fnodeB {Node|Fnode}\n * @arg differentDepthCost {number} Cost for each level deeper one node is than\n *    the other below their common ancestor\n * @arg differentTagCost {number} Cost for a level below the common ancestor\n *    where tagNames differ\n * @arg sameTagCost {number} Cost for a level below the common ancestor where\n *    tagNames are the same\n * @arg strideCost {number} Cost for each stride node between A and B. Stride\n *     nodes are siblings or siblings-of-ancestors that lie between the 2\n *     nodes. These interposed nodes make it less likely that the 2 nodes\n *     should be together in a cluster.\n * @arg additionalCost {function} Return an additional cost, given 2 fnodes or\n *    nodes.\n *\n */\nfunction distance(\n    fnodeA,\n    fnodeB,\n    {\n        differentDepthCost = 2,\n        differentTagCost = 2,\n        sameTagCost = 1,\n        strideCost = 1,\n        additionalCost = (fnodeA, fnodeB) => 0,\n    } = {}\n) {\n    // I was thinking of something that adds little cost for siblings. Up\n    // should probably be more expensive than down (see middle example in the\n    // Nokia paper).\n\n    // TODO: Test and tune default costs. They're off the cuff at the moment.\n\n    if (fnodeA === fnodeB) {\n        return 0;\n    }\n\n    const elementA = isDomElement(fnodeA) ? fnodeA : fnodeA.element;\n    const elementB = isDomElement(fnodeB) ? fnodeB : fnodeB.element;\n\n    // Stacks that go from the common ancestor all the way to A and B:\n    const aAncestors = [elementA];\n    const bAncestors = [elementB];\n\n    let aAncestor = elementA;\n    let bAncestor = elementB;\n\n    // Ascend to common parent, stacking them up for later reference:\n    while (!aAncestor.contains(elementB)) {\n        // Note: an element does contain() itself.\n        aAncestor = aAncestor.parentNode;\n        aAncestors.push(aAncestor); //aAncestors = [a, b]. aAncestor = b // if a is outer: no loop here; aAncestors = [a]. aAncestor = a.\n    }\n\n    // In compareDocumentPosition()'s opinion, inside implies after. Basically,\n    // before and after pertain to opening tags.\n    const comparison = elementA.compareDocumentPosition(elementB);\n\n    // If either contains the other, abort. We'd either return a misleading\n    // number or else walk upward right out of the document while trying to\n    // make the ancestor stack.\n    if (comparison & (elementA.DOCUMENT_POSITION_CONTAINS | elementA.DOCUMENT_POSITION_CONTAINED_BY)) {\n        return Number.MAX_VALUE;\n    }\n    // Make an ancestor stack for the right node too so we can walk\n    // efficiently down to it:\n    do {\n        bAncestor = bAncestor.parentNode; // Assumes we've early-returned above if A === B. This walks upward from the outer node and up out of the tree. It STARTS OUT with aAncestor === bAncestor!\n        bAncestors.push(bAncestor);\n    } while (bAncestor !== aAncestor);\n\n    // Figure out which node is left and which is right, so we can follow\n    // sibling links in the appropriate directions when looking for stride\n    // nodes:\n    let left = aAncestors;\n    let right = bAncestors;\n    let cost = 0;\n    if (comparison & elementA.DOCUMENT_POSITION_FOLLOWING) {\n        // A is before, so it could contain the other node. What did I mean to do if one contained the other?\n        left = aAncestors;\n        right = bAncestors;\n    } else if (comparison & elementA.DOCUMENT_POSITION_PRECEDING) {\n        // A is after, so it might be contained by the other node.\n        left = bAncestors;\n        right = aAncestors;\n    }\n\n    // Descend to both nodes in parallel, discounting the traversal\n    // cost iff the nodes we hit look similar, implying the nodes dwell\n    // within similar structures.\n    while (left.length || right.length) {\n        const l = left.pop();\n        const r = right.pop();\n        if (l === undefined || r === undefined) {\n            // Punishment for being at different depths: same as ordinary\n            // dissimilarity punishment for now\n            cost += differentDepthCost;\n        } else {\n            // TODO: Consider similarity of classList.\n            cost += l.tagName === r.tagName ? sameTagCost : differentTagCost;\n        }\n        // Optimization: strides might be a good dimension to eliminate.\n        if (strideCost !== 0) {\n            cost += numStrides(l, r) * strideCost;\n        }\n    }\n\n    return cost + additionalCost(fnodeA, fnodeB);\n}\n\n/**\n * Return the spatial distance between 2 fnodes or elements, assuming a\n * rendered page.\n *\n * Specifically, return the distance in pixels between the centers of\n * ``fnodeA.element.getBoundingClientRect()`` and\n * ``fnodeB.element.getBoundingClientRect()``.\n */\nfunction euclidean(fnodeA, fnodeB) {\n    /**\n     * Return the horizontal distance from the left edge of the viewport to the\n     * center of an element, given a DOMRect object for it. It doesn't matter\n     * that the distance is affected by the page's scroll offset, since the 2\n     * elements have the same offset.\n     */\n    function xCenter(domRect) {\n        return domRect.left + domRect.width / 2;\n    }\n    function yCenter(domRect) {\n        return domRect.top + domRect.height / 2;\n    }\n\n    const elementA = toDomElement(fnodeA);\n    const elementB = toDomElement(fnodeB);\n    const aRect = elementA.getBoundingClientRect();\n    const bRect = elementB.getBoundingClientRect();\n    return Math.sqrt((xCenter(aRect) - xCenter(bRect)) ** 2 + (yCenter(aRect) - yCenter(bRect)) ** 2);\n}\n\n/** A lower-triangular matrix of inter-cluster distances */\nclass DistanceMatrix {\n    /**\n     * @arg distance {function} Some notion of distance between 2 given nodes\n     */\n    constructor(elements, distance) {\n        // A sparse adjacency matrix:\n        // {A => {},\n        //  B => {A => 4},\n        //  C => {A => 4, B => 4},\n        //  D => {A => 4, B => 4, C => 4}\n        //  E => {A => 4, B => 4, C => 4, D => 4}}\n        //\n        // A, B, etc. are arrays of [arrays of arrays of...] nodes, each\n        // array being a cluster. In this way, they not only accumulate a\n        // cluster but retain the steps along the way.\n        //\n        // This is an efficient data structure in terms of CPU and memory, in\n        // that we don't have to slide a lot of memory around when we delete a\n        // row or column from the middle of the matrix while merging. Of\n        // course, we lose some practical efficiency by using hash tables, and\n        // maps in particular are slow in their early implementations.\n        this._matrix = new Map();\n\n        // Convert elements to clusters:\n        const clusters = elements.map((el) => [el]);\n\n        // Init matrix:\n        for (let outerCluster of clusters) {\n            const innerMap = new Map();\n            for (let innerCluster of this._matrix.keys()) {\n                innerMap.set(innerCluster, distance(outerCluster[0], innerCluster[0]));\n            }\n            this._matrix.set(outerCluster, innerMap);\n        }\n        this._numClusters = clusters.length;\n    }\n\n    // Return (distance, a: clusterA, b: clusterB) of closest-together clusters.\n    // Replace this to change linkage criterion.\n    closest() {\n        const self = this;\n\n        if (this._numClusters < 2) {\n            throw new Error('There must be at least 2 clusters in order to return the closest() ones.');\n        }\n\n        // Return the distances between every pair of clusters.\n        function clustersAndDistances() {\n            const ret = [];\n            for (let [outerKey, row] of self._matrix.entries()) {\n                for (let [innerKey, storedDistance] of row.entries()) {\n                    ret.push({ a: outerKey, b: innerKey, distance: storedDistance });\n                }\n            }\n            return ret;\n        }\n        // Optimizing this by inlining the loop and writing it less\n        // functionally doesn't help:\n        return min(clustersAndDistances(), (x) => x.distance);\n    }\n\n    // Look up the distance between 2 clusters in me. Try the lookup in the\n    // other direction if the first one falls in the nonexistent half of the\n    // triangle.\n    _cachedDistance(clusterA, clusterB) {\n        let ret = this._matrix.get(clusterA).get(clusterB);\n        if (ret === undefined) {\n            ret = this._matrix.get(clusterB).get(clusterA);\n        }\n        return ret;\n    }\n\n    // Merge two clusters.\n    merge(clusterA, clusterB) {\n        // An example showing how rows merge:\n        //  A: {}\n        //  B: {A: 1}\n        //  C: {A: 4, B: 4},\n        //  D: {A: 4, B: 4, C: 4}\n        //  E: {A: 4, B: 4, C: 2, D: 4}}\n        //\n        // Step 2:\n        //  C: {}\n        //  D: {C: 4}\n        //  E: {C: 2, D: 4}}\n        //  AB: {C: 4, D: 4, E: 4}\n        //\n        // Step 3:\n        //  D:  {}\n        //  AB: {D: 4}\n        //  CE: {D: 4, AB: 4}\n\n        // Construct new row, finding min distances from either subcluster of\n        // the new cluster to old clusters.\n        //\n        // There will be no repetition in the matrix because, after all,\n        // nothing pointed to this new cluster before it existed.\n        const newRow = new Map();\n        for (let outerKey of this._matrix.keys()) {\n            if (outerKey !== clusterA && outerKey !== clusterB) {\n                newRow.set(\n                    outerKey,\n                    Math.min(this._cachedDistance(clusterA, outerKey), this._cachedDistance(clusterB, outerKey))\n                );\n            }\n        }\n\n        // Delete the rows of the clusters we're merging.\n        this._matrix.delete(clusterA);\n        this._matrix.delete(clusterB);\n\n        // Remove inner refs to the clusters we're merging.\n        for (let inner of this._matrix.values()) {\n            inner.delete(clusterA);\n            inner.delete(clusterB);\n        }\n\n        // Attach new row.\n        this._matrix.set([clusterA, clusterB], newRow);\n\n        // There is a net decrease of 1 cluster:\n        this._numClusters -= 1;\n    }\n\n    numClusters() {\n        return this._numClusters;\n    }\n\n    // Return an Array of nodes for each cluster in me.\n    clusters() {\n        // TODO: Can't get map to work here. Don't know why.\n        return Array.from(this._matrix.keys()).map((e) => Array.from(flatten(e)));\n    }\n}\n\n/**\n * Partition the given nodes into one or more clusters by position in the DOM\n * tree.\n *\n * This implements an agglomerative clustering. It uses single linkage, since\n * we're talking about adjacency here more than Euclidean proximity: the\n * clusters we're talking about in the DOM will tend to be adjacent, not\n * overlapping. We haven't tried other linkage criteria yet.\n *\n * In a later release, we may consider score or notes.\n *\n * @arg {Fnode[]|Node[]} fnodes :term:`fnodes<fnode>` or DOM nodes to group\n *     into clusters\n * @arg {number} splittingDistance The closest-nodes :func:`distance` beyond\n *     which we will not attempt to unify 2 clusters. Make this larger to make\n *     larger clusters.\n * @arg getDistance {function} A function that returns some notion of numerical\n *    distance between 2 nodes. Default: :func:`distance`\n * @return {Array} An Array of Arrays, with each Array containing all the\n *     nodes in one cluster. Note that neither the clusters nor the nodes are\n *     in any particular order. You may find :func:`domSort` helpful to remedy\n *     the latter.\n */\nfunction clusters(fnodes, splittingDistance, getDistance = distance) {\n    const matrix = new DistanceMatrix(fnodes, getDistance);\n    let closest;\n\n    while (matrix.numClusters() > 1 && (closest = matrix.closest()).distance < splittingDistance) {\n        matrix.merge(closest.a, closest.b);\n    }\n\n    return matrix.clusters();\n}\n\nvar clusters$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    distance: distance,\n    euclidean: euclidean,\n    clusters: clusters,\n});\n\n// The left-hand side of a rule\n\n/**\n * Take nodes that match a given DOM selector. Example:\n * ``dom('meta[property=\"og:title\"]')``\n *\n * Every ruleset has at least one ``dom`` or :func:`element` rule, as that is\n * where nodes begin to flow into the system. If run against a subtree of a\n * document, the root of the subtree is not considered as a possible match.\n */\nfunction dom(selector) {\n    return new DomLhs(selector);\n}\n\n/**\n * Take a single given node if it matches a given DOM selector, without looking\n * through its descendents or ancestors. Otherwise, take no nodes. Example:\n * ``element('input')``\n *\n * This is useful for applications in which you want Fathom to classify an\n * element the user has selected, rather than scanning the whole page for\n * candidates.\n */\nfunction element(selector) {\n    return new ElementLhs(selector);\n}\n\n/**\n * PROTON EXTENSION\n * Allows running a custom function when selecting\n * DOM elements in a fathom LHS rule.\n */\nfunction domQuery(query) {\n    return new DomQueryLhs(query);\n}\n\n/**\n * Rules and the LHSs and RHSs that comprise them have no mutable state. This\n * lets us make BoundRulesets from Rulesets without duplicating the rules. It\n * also lets us share a common cache among rules: multiple ones might care\n * about a cached type(), for instance; there isn't a one-to-one relationship\n * of storing with caring. There would also, because of the interdependencies\n * of rules in a ruleset, be little use in segmenting the caches: if you do\n * something that causes one to need to be cleared, you'll need to clear many\n * more as well.\n *\n * Lhses are responsible for maintaining ruleset.maxCache.\n *\n * Lhs and its subclasses are private to the Fathom framework.\n */\nclass Lhs {\n    constructor() {\n        this._predicate = () => true;\n    }\n\n    /** Return a new Lhs of the appropriate kind, given its first call. */\n    static fromFirstCall(firstCall) {\n        // firstCall is never 'dom', because dom() directly returns a DomLhs.\n        if (firstCall.method === 'type') {\n            return new TypeLhs(...firstCall.args);\n        } else if (firstCall.method === 'and') {\n            return new AndLhs(firstCall.args);\n        } else if (firstCall.method === 'nearest') {\n            return new NearestLhs(firstCall.args);\n        } else {\n            throw new Error('The left-hand side of a rule() must start with dom(), type(), and(), or nearest().');\n        }\n    }\n\n    /**\n     * Prune nodes from consideration early in run execution, before scoring is\n     * done.\n     *\n     * Reserve this for where you are sure it is always correct or when\n     * performance demands it. It is generally preferable to use :func:`score`\n     * and let the :doc:`trainer<training>` determine the relative significance\n     * of each rule. Human intuition as to what is important is often wrong:\n     * for example, one might assume that a music player website would include\n     * the word \"play\", but this does not hold once you include sites in other\n     * languages.\n     *\n     * Can be chained after :func:`type` or :func:`dom`.\n     *\n     * Example: ``dom('p').when(isVisible)``\n     *\n     * @arg {function} predicate Accepts a fnode and returns a boolean\n     */\n    when(predicate) {\n        let lhs = this.clone();\n        lhs._predicate = predicate;\n        return lhs;\n    }\n\n    /**\n     * Of all the dom nodes selected by type() or dom(), return only\n     * the fnodes that satisfy all the predicates imposed by calls to\n     * when()\n     */\n    fnodesSatisfyingWhen(fnodes) {\n        return Array.from(fnodes).filter(this._predicate);\n    }\n\n    /**\n     * Return an iterable of output fnodes selected by this left-hand-side\n     * expression.\n     *\n     * Pre: The rules I depend on have already been run, and their results are\n     * in ruleset.typeCache.\n     *\n     * @arg ruleset {BoundRuleset}\n     */\n    // fnodes (ruleset) {}\n\n    /**\n     * Check that a RHS-emitted fact is legal for this kind of LHS, and throw\n     * an error if it isn't.\n     */\n    checkFact(fact) {}\n\n    /**\n     * Return the single type the output of the LHS is guaranteed to have.\n     * Return undefined if there is no such single type we can ascertain.\n     */\n    guaranteedType() {}\n\n    /**\n     * Return the type I aggregate if I am an aggregate LHS; return undefined\n     * otherwise.\n     */\n    aggregatedType() {}\n\n    /**\n     * Return each combination of types my selected nodes could be locally (that\n     * is, by this rule only) constrained to have.\n     *\n     * For example, type(A) would return [A]. and(A, or(B, C)) would return\n     * [AB, AC, ABC]. More examples:\n     *\n     * or(A, B) → typeIn(A, B, C)  # Finalizes A, B.   combos A, B, AB: finalizes AB. Optimization: there's no point in returning the last combo in ors. Compilation into 2 rules with identical RHSs will inherently implement this optimization.\n     * or(A, B) → typeIn(A, B)  # Finalizes A, B\n     * or(A, B) → A  # Finalizes B\n     * and(A) -> A  # Finalizes nothing\n     * and(A, B) -> A  # Finalizes nothing.   AB: Ø\n     * and(A) -> typeIn(A, B)  # Finalizes A.   A\n     * and(A, B) -> typeIn(A, B)  # Finalizes nothing.   AB\n     * and(A, B) -> typeIn(A, B, C)  # Finalizes A, B.   AB\n     * and(A, or(B, C)) -> D  # Finalizes A, B, C.   AB, AC, ABC: ABC\n     * and(A, or(B, C)) -> B  # Finalizes A, C.   AB, AC, ABC: AC\n     * type(A).not(and(A, B)) ->\n     *\n     * @return {NiceSet[]}\n     */\n    // possibleTypeCombinations() {}\n\n    /**\n     * Types mentioned in this LHS.\n     *\n     * In other words, the types I need to know the assignment status of before\n     * I can make my selections\n     *\n     * @return NiceSet of strings\n     */\n    // typesMentioned() {}\n}\n\nclass DomLhs extends Lhs {\n    constructor(selector) {\n        super();\n        if (selector === undefined) {\n            throw new Error(\n                'A querySelector()-style selector is required as the argument to ' + this._callName() + '().'\n            );\n        }\n        this.selector = selector;\n    }\n\n    /**\n     * Return the name of this kind of LHS, for use in error messages.\n     */\n    _callName() {\n        return 'dom';\n    }\n\n    clone() {\n        return new this.constructor(this.selector);\n    }\n\n    fnodes(ruleset) {\n        return this._domNodesToFilteredFnodes(ruleset, ruleset.doc.querySelectorAll(this.selector));\n    }\n\n    /**\n     * Turn a NodeList of DOM nodes into an array of fnodes, and filter out\n     * those that don't match the :func:`when()` clause.\n     */\n    _domNodesToFilteredFnodes(ruleset, domNodes) {\n        let ret = [];\n        for (let i = 0; i < domNodes.length; i++) {\n            ret.push(ruleset.fnodeForElement(domNodes[i]));\n        }\n        return this.fnodesSatisfyingWhen(ret);\n    }\n\n    checkFact(fact) {\n        if (fact.type === undefined) {\n            throw new Error(\n                `The right-hand side of a ${this._callName()}() rule failed to specify a type. This means there is no way for its output to be used by later rules. All it specified was ${fact}.`\n            );\n        }\n    }\n\n    asLhs() {\n        return this;\n    }\n\n    possibleTypeCombinations() {\n        return [];\n    }\n\n    typesMentioned() {\n        return new NiceSet();\n    }\n}\n\nclass ElementLhs extends DomLhs {\n    _callName() {\n        return 'element';\n    }\n\n    fnodes(ruleset) {\n        return this._domNodesToFilteredFnodes(ruleset, ruleset.doc.matches(this.selector) ? [ruleset.doc] : []);\n    }\n}\n\n/**\n * PROTON EXTENSION\n * Extends DomLhs rule but instead of passing\n * a single string selector, allows passing a\n * custom selector function that will be run\n * against the document\n */\nclass DomQueryLhs extends DomLhs {\n    constructor(query) {\n        /**\n         * mock selector to avoid parent DomLhs\n         * throwing in constructor call\n         */\n        super('');\n        this.query = query;\n    }\n\n    _callName() {\n        return 'domQuery';\n    }\n\n    clone() {\n        return new DomQueryLhs(this.query);\n    }\n\n    fnodes(ruleset) {\n        return this._domNodesToFilteredFnodes(ruleset, this.query(ruleset.doc));\n    }\n}\n\n/** Internal representation of a LHS constrained by type but not by max() */\nclass TypeLhs extends Lhs {\n    constructor(type) {\n        super();\n        if (type === undefined) {\n            throw new Error('A type name is required when calling type().');\n        }\n        this._type = type; // the input type\n    }\n\n    clone() {\n        return new this.constructor(this._type);\n    }\n\n    fnodes(ruleset) {\n        const cached = getDefault(ruleset.typeCache, this._type, () => []);\n        return this.fnodesSatisfyingWhen(cached);\n    }\n\n    /** Override the type previously specified by this constraint. */\n    type(inputType) {\n        // Preserve the class in case this is a TypeMaxLhs.\n        return new this.constructor(inputType);\n    }\n\n    /**\n     * Of the nodes selected by a ``type`` call to the left, constrain the LHS\n     * to return only the max-scoring one. If there is a tie, more than 1 node\n     * will be returned. Example: ``type('titley').max()``\n     */\n    max() {\n        return new TypeMaxLhs(this._type);\n    }\n\n    /**\n     * Take the nodes selected by a ``type`` call to the left, group them into\n     * clusters, and return the nodes in the cluster that has the highest total\n     * score (on the relevant type).\n     *\n     * Nodes come out in arbitrary order, so, if you plan to emit them,\n     * consider using ``.out('whatever').allThrough(domSort)``. See\n     * :func:`domSort`.\n     *\n     * If multiple clusters have equally high scores, return an arbitrary one,\n     * because Fathom has no way to represent arrays of arrays in rulesets.\n     *\n     * @arg options {Object} The same depth costs taken by :func:`distance`,\n     *     plus ``splittingDistance``, which is the distance beyond which 2\n     *     clusters will be considered separate. ``splittingDistance``, if\n     *     omitted, defaults to 3.\n     */\n    bestCluster(options) {\n        return new BestClusterLhs(this._type, options);\n    }\n\n    // Other clustering calls could be called biggestCluster() (having the most\n    // nodes) and bestAverageCluster() (having the highest average score).\n\n    guaranteedType() {\n        return this._type;\n    }\n\n    possibleTypeCombinations() {\n        return [this.typesMentioned()];\n    }\n\n    typesMentioned() {\n        return new NiceSet([this._type]);\n    }\n}\n\n/**\n * Abstract LHS that is an aggregate function taken across all fnodes of a type\n *\n * The main point here is that any aggregate function over a (typed) set of\n * nodes depends on first computing all the rules that could emit those nodes\n * (nodes of that type).\n */\nclass AggregateTypeLhs extends TypeLhs {\n    aggregatedType() {\n        return this._type;\n    }\n}\n\n/**\n * Internal representation of a LHS that has both type and max([NUMBER])\n * constraints. max(NUMBER != 1) support is not yet implemented.\n */\nclass TypeMaxLhs extends AggregateTypeLhs {\n    /**\n     * Return the max-scoring node (or nodes if there is a tie) of the given\n     * type.\n     */\n    fnodes(ruleset) {\n        // TODO: Optimize better. Walk the dependency tree, and run only the\n        // rules that could possibly lead to a max result. As part of this,\n        // make RHSs expose their max potential scores.\n        const self = this;\n        // Work around V8 bug:\n        // https://stackoverflow.com/questions/32943776/using-super-within-an-\n        // arrow-function-within-an-arrow-function-within-a-method\n        const getSuperFnodes = () => super.fnodes(ruleset);\n        return setDefault(ruleset.maxCache, this._type, function maxFnodesOfType() {\n            return maxes(getSuperFnodes(), (fnode) => ruleset.weightedScore(fnode.scoresSoFarFor(self._type)));\n        });\n    }\n}\n\nclass BestClusterLhs extends AggregateTypeLhs {\n    constructor(type, options) {\n        super(type);\n        this._options = options || { splittingDistance: 3 };\n    }\n\n    /**\n     * Group the nodes of my type into clusters, and return the cluster with\n     * the highest total score for that type.\n     */\n    fnodes(ruleset) {\n        // Get the nodes of the type:\n        const fnodesOfType = Array.from(super.fnodes(ruleset));\n        if (fnodesOfType.length === 0) {\n            return [];\n        }\n        // Cluster them:\n        const clusts = clusters(fnodesOfType, this._options.splittingDistance, (a, b) => distance(a, b, this._options));\n        // Tag each cluster with the total of its nodes' scores:\n        const clustsAndSums = clusts.map((clust) => [clust, sum(clust.map((fnode) => fnode.scoreFor(this._type)))]);\n        // Return the highest-scoring cluster:\n        return max(clustsAndSums, (clustAndSum) => clustAndSum[1])[0];\n    }\n}\n\nclass AndLhs extends Lhs {\n    constructor(lhss) {\n        super();\n\n        // For the moment, we accept only type()s as args. TODO: Generalize to\n        // type().max() and such later.\n        this._args = lhss.map(sideToTypeLhs);\n    }\n\n    *fnodes(ruleset) {\n        // Take an arbitrary one for starters. Optimization: we could always\n        // choose the pickiest one to start with.\n        const fnodes = this._args[0].fnodes(ruleset);\n        // Then keep only the fnodes that have the type of every other arg:\n        fnodeLoop: for (let fnode of fnodes) {\n            for (let otherLhs of this._args.slice(1)) {\n                // Optimization: could use a .hasTypeSoFar() below\n                if (!fnode.hasType(otherLhs.guaranteedType())) {\n                    // TODO: This is n^2. Why is there no set intersection in JS?!\n                    continue fnodeLoop;\n                }\n            }\n            yield fnode;\n        }\n    }\n\n    possibleTypeCombinations() {\n        return [this.typesMentioned()];\n    }\n\n    typesMentioned() {\n        return new NiceSet(this._args.map((arg) => arg.guaranteedType()));\n    }\n}\n\nfunction sideToTypeLhs(side) {\n    const lhs = side.asLhs();\n    if (!(lhs.constructor === TypeLhs)) {\n        throw new Error('and() and nearest() support only simple type() calls as arguments for now.');\n        // TODO: Though we could solve this with a compilation step: and(type(A), type(B).max()) is equivalent to type(B).max() -> type(Bmax); and(type(A), type(Bmax)).\n        // In fact, we should be able to compile most (any?) arbitrary and()s, including nested ands and and(type(...).max(), ...) constructions into several and(type(A), type(B), ...) rules.\n    }\n    return lhs;\n}\n\nclass NearestLhs extends Lhs {\n    constructor([a, b, distance]) {\n        super();\n        this._a = sideToTypeLhs(a);\n        this._b = sideToTypeLhs(b);\n        this._distance = distance;\n    }\n\n    /**\n     * Return an iterable of {fnodes, transformer} pairs.\n     */\n    *fnodes(ruleset) {\n        // Go through all the left arg's nodes. For each one, find the closest\n        // right-arg's node. O(a * b). Once a right-arg's node is used, we\n        // don't eliminate it from consideration, because then order of left-\n        // args' nodes would matter.\n\n        // TODO: Still not sure how to get the distance to factor into the\n        // score unless we hard-code nearest() to do that. It's a\n        // matter of not being able to bind on the RHS to the output of the\n        // distance function on the LHS. Perhaps we could at least make\n        // distance part of the note and read it in a props() callback.\n\n        // We're assuming here that simple type() calls return just plain\n        // fnodes, not {fnode, rhsTransformer} pairs:\n        const as_ = this._a.fnodes(ruleset);\n        const bs = Array.from(this._b.fnodes(ruleset));\n        if (bs.length > 0) {\n            // If bs is empty, there can be no nearest nodes, so don't emit any.\n            for (const a of as_) {\n                const nearest = min(bs, (b) => this._distance(a, b));\n                yield {\n                    fnode: a,\n                    rhsTransformer: function setNoteIfEmpty(fact) {\n                        // If note is explicitly set by the RHS, let it take\n                        // precedence, even though that makes this entire LHS\n                        // pointless.\n                        if (fact.note === undefined) {\n                            fact.note = nearest; // TODO: Wrap this in an object to make room to return distance later.\n                        }\n                        return fact;\n                    },\n                };\n            }\n        }\n    }\n\n    checkFact(fact) {\n        // Barf if the fact doesn't set a type at least. It should be a *new* type or at least one that doesn't result in cycles, but we can't deduce that.\n    }\n\n    possibleTypeCombinations() {\n        return [new NiceSet([this._a.guaranteedType()])];\n    }\n\n    typesMentioned() {\n        return new NiceSet([this._a.guaranteedType(), this._b.guaranteedType()]);\n    }\n\n    guaranteedType() {\n        return this._a.guaranteedType();\n    }\n}\n\n// The right-hand side of a rule\n\nconst TYPE = 1;\nconst NOTE = 2;\nconst SCORE = 4;\nconst ELEMENT = 8;\nconst SUBFACTS = {\n    type: TYPE,\n    note: NOTE,\n    score: SCORE,\n    element: ELEMENT,\n};\n\n/**\n * Expose the output of this rule's LHS as a \"final result\" to the surrounding\n * program. It will be available by calling :func:`~BoundRuleset.get` on the\n * ruleset and passing the key. You can run each node through a callback\n * function first by adding :func:`through()`, or you can run the entire set of\n * nodes through a callback function by adding :func:`allThrough()`.\n */\nfunction out(key) {\n    return new OutwardRhs(key);\n}\n\nclass InwardRhs {\n    constructor(calls = [], max = Infinity, types) {\n        this._calls = calls.slice();\n        this._max = max; // max score\n        this._types = new NiceSet(types); // empty set if unconstrained\n    }\n\n    /**\n     * Declare that the maximum returned subscore is such and such,\n     * which helps the optimizer plan efficiently. This doesn't force it to be\n     * true; it merely throws an error at runtime if it isn't. To lift an\n     * ``atMost`` constraint, call ``atMost()`` (with no args). The reason\n     * ``atMost`` and ``typeIn`` apply until explicitly cleared is so that, if\n     * someone used them for safety reasons on a lexically distant rule you are\n     * extending, you won't stomp on their constraint and break their\n     * invariants accidentally.\n     */\n    atMost(score) {\n        return new this.constructor(this._calls, score, this._types);\n    }\n\n    _checkAtMost(fact) {\n        if (fact.score !== undefined && fact.score > this._max) {\n            throw new Error(`Score of ${fact.score} exceeds the declared atMost(${this._max}).`);\n        }\n    }\n\n    /**\n     * Determine any of type, note, score, and element using a callback. This\n     * overrides any previous call to `props` and, depending on what\n     * properties of the callback's return value are filled out, may override\n     * the effects of other previous calls as well.\n     *\n     * The callback should return...\n     *\n     * * An optional :term:`subscore`\n     * * A type (required on ``dom(...)`` rules, defaulting to the input one on\n     *   ``type(...)`` rules)\n     * * Optional notes\n     * * An element, defaulting to the input one. Overriding the default\n     *   enables a callback to walk around the tree and say things about nodes\n     *   other than the input one.\n     */\n    props(callback) {\n        function getSubfacts(fnode) {\n            const subfacts = callback(fnode);\n            // Filter the raw result down to okayed properties so callbacks\n            // can't insert arbitrary keys (like conserveScore, which might\n            // mess up the optimizer).\n            for (let subfact in subfacts) {\n                if (!SUBFACTS.hasOwnProperty(subfact) || !(SUBFACTS[subfact] & getSubfacts.possibleSubfacts)) {\n                    // The ES5.1 spec says in 12.6.4 that it's fine to delete\n                    // as we iterate.\n                    delete subfacts[subfact];\n                }\n            }\n            return subfacts;\n        }\n        // Thse are the subfacts this call could affect:\n        getSubfacts.possibleSubfacts = TYPE | NOTE | SCORE | ELEMENT;\n        getSubfacts.kind = 'props';\n        return new this.constructor(this._calls.concat(getSubfacts), this._max, this._types);\n    }\n\n    /**\n     * Set the type applied to fnodes processed by this RHS.\n     */\n    type(theType) {\n        // In the future, we might also support providing a callback that receives\n        // the fnode and returns a type. We couldn't reason based on these, but the\n        // use would be rather a consise way to to override part of what a previous\n        // .props() call provides.\n\n        // Actually emit a given type.\n        function getSubfacts() {\n            return { type: theType };\n        }\n        getSubfacts.possibleSubfacts = TYPE;\n        getSubfacts.type = theType;\n        getSubfacts.kind = 'type';\n        return new this.constructor(this._calls.concat(getSubfacts), this._max, this._types);\n    }\n\n    /**\n     * Constrain this rule to emit 1 of a set of given types. Pass no args to lift\n     * a previous ``typeIn`` constraint, as you might do when basing a LHS on a\n     * common value to factor out repetition.\n     *\n     * ``typeIn`` is mostly a hint for the query planner when you're emitting types\n     * dynamically from ``props`` calls—in fact, an error will be raised if\n     * ``props`` is used without a ``typeIn`` or ``type`` to constrain it—but it\n     * also checks conformance at runtime to ensure validity.\n     */\n    typeIn(...types) {\n        // Rationale: If we used the spelling \"type('a', 'b', ...)\" instead of\n        // this, one might expect type('a', 'b').type(fn) to have the latter\n        // call override, while expecting type(fn).type('a', 'b') to keep both\n        // in effect. Then different calls to type() don't consistently\n        // override each other, and the rules get complicated. Plus you can't\n        // inherit a type constraint and then sub in another type-returning\n        // function that still gets the constraint applied.\n        return new this.constructor(this._calls, this._max, types);\n    }\n\n    /**\n     * Check a fact for conformance with any typeIn() call.\n     *\n     * @arg leftType the type of the LHS, which becomes my emitted type if the\n     *    fact doesn't specify one\n     */\n    _checkTypeIn(result, leftType) {\n        if (this._types.size > 0) {\n            if (result.type === undefined) {\n                if (!this._types.has(leftType)) {\n                    throw new Error(\n                        `A right-hand side claimed, via typeIn(...) to emit one of the types ${this._types} but actually inherited ${leftType} from the left-hand side.`\n                    );\n                }\n            } else if (!this._types.has(result.type)) {\n                throw new Error(\n                    `A right-hand side claimed, via typeIn(...) to emit one of the types ${this._types} but actually emitted ${result.type}.`\n                );\n            }\n        }\n    }\n\n    /**\n     * Whatever the callback returns (even ``undefined``) becomes the note of\n     * the fact. This overrides any previous call to ``note``.\n     */\n    note(callback) {\n        function getSubfacts(fnode) {\n            return { note: callback(fnode) };\n        }\n        getSubfacts.possibleSubfacts = NOTE;\n        getSubfacts.kind = 'note';\n        return new this.constructor(this._calls.concat(getSubfacts), this._max, this._types);\n    }\n\n    /**\n     * Affect the confidence with which the input node should be considered a\n     * member of a type.\n     *\n     * The parameter is generally between 0 and 1 (inclusive), with 0 meaning\n     * the node does not have the \"smell\" this rule checks for and 1 meaning it\n     * does. The range between 0 and 1 is available to represent \"fuzzy\"\n     * confidences. If you have an unbounded range to compress down to [0, 1],\n     * consider using :func:`sigmoid` or a scaling thereof.\n     *\n     * Since every node can have multiple, independent scores (one for each\n     * type), this applies to the type explicitly set by the RHS or, if none,\n     * to the type named by the ``type`` call on the LHS. If the LHS has none\n     * because it's a ``dom(...)`` LHS, an error is raised.\n     *\n     * @arg {number|function} scoreOrCallback Can either be a static number,\n     *     generally 0 to 1 inclusive, or else a callback which takes the fnode\n     *     and returns such a number. If the callback returns a boolean, it is\n     *     cast to a number.\n     */\n    score(scoreOrCallback) {\n        let getSubfacts;\n\n        function getSubfactsFromNumber(fnode) {\n            return { score: scoreOrCallback };\n        }\n\n        function getSubfactsFromFunction(fnode) {\n            let result = scoreOrCallback(fnode);\n            if (typeof result === 'boolean') {\n                // Case bools to numbers for convenience. Boolean features are\n                // common. Don't cast other things, as it frustrates ruleset\n                // debugging.\n                result = Number(result);\n            }\n            return { score: result };\n        }\n\n        if (typeof scoreOrCallback === 'number') {\n            getSubfacts = getSubfactsFromNumber;\n        } else {\n            getSubfacts = getSubfactsFromFunction;\n        }\n        getSubfacts.possibleSubfacts = SCORE;\n        getSubfacts.kind = 'score';\n\n        return new this.constructor(this._calls.concat(getSubfacts), this._max, this._types);\n    }\n\n    // Future: why not have an .element() method for completeness?\n\n    // -------- Methods below this point are private to the framework. --------\n\n    /**\n     * Run all my props().type().note().score() stuff across a given fnode,\n     * enforce my max() stuff, and return a fact ({element, type, score,\n     * notes}) for incorporation into that fnode (or a different one, if\n     * element is specified). Any of the 4 fact properties can be missing;\n     * filling in defaults is a job for the caller.\n     *\n     * @arg leftType The type the LHS takes in\n     */\n    fact(fnode, leftType) {\n        const doneKinds = new Set();\n        const result = {};\n        let haveSubfacts = 0;\n        for (let call of reversed(this._calls)) {\n            // If we've already called a call of this kind, then forget it.\n            if (!doneKinds.has(call.kind)) {\n                doneKinds.add(call.kind);\n\n                if (~haveSubfacts & call.possibleSubfacts) {\n                    // This call might provide a subfact we are missing.\n                    const newSubfacts = call(fnode);\n\n                    // We start with an empty object, so we're okay here.\n                    // eslint-disable-next-line guard-for-in\n                    for (let subfact in newSubfacts) {\n                        // A props() callback could insert arbitrary keys into\n                        // the result, but it shouldn't matter, because nothing\n                        // pays any attention to them.\n                        if (!result.hasOwnProperty(subfact)) {\n                            result[subfact] = newSubfacts[subfact];\n                        }\n                        haveSubfacts |= SUBFACTS[subfact];\n                    }\n                }\n            }\n        }\n        this._checkAtMost(result);\n        this._checkTypeIn(result, leftType);\n        return result;\n    }\n\n    /**\n     * Return a record describing the types I might emit (which means either to\n     * add a type to a fnode or to output a fnode that already has that type).\n     * {couldChangeType: whether I might add a type to the fnode,\n     *  possibleTypes: If couldChangeType, the types I might emit; empty set if\n     *      we cannot infer it. If not couldChangeType, undefined.}\n     */\n    possibleEmissions() {\n        // If there is a typeIn() constraint or there is a type() call to the\n        // right of all props() calls, we have a constraint. We hunt for the\n        // tightest constraint we can find, favoring a type() call because it\n        // gives us a single type but then falling back to a typeIn().\n        let couldChangeType = false;\n        for (let call of reversed(this._calls)) {\n            if (call.kind === 'props') {\n                couldChangeType = true;\n                break;\n            } else if (call.kind === 'type') {\n                return { couldChangeType: true, possibleTypes: new Set([call.type]) };\n            }\n        }\n        return { couldChangeType, possibleTypes: this._types };\n    }\n}\n\nclass OutwardRhs {\n    constructor(key, through = (x) => x, allThrough = (x) => x) {\n        this.key = key;\n        this.callback = through;\n        this.allCallback = allThrough;\n    }\n\n    /**\n     * Append ``.through`` to :func:`out` to run each :term:`fnode` emitted\n     * from the LHS through an arbitrary function before returning it to the\n     * containing program. Example::\n     *\n     *     out('titleLengths').through(fnode => fnode.noteFor('title').length)\n     */\n    through(callback) {\n        return new this.constructor(this.key, callback, this.allCallback);\n    }\n\n    /**\n     * Append ``.allThrough`` to :func:`out` to run the entire iterable of\n     * emitted :term:`fnodes<fnode>` through an arbitrary function before\n     * returning them to the containing program. Example::\n     *\n     *     out('sortedTitles').allThrough(domSort)\n     */\n    allThrough(callback) {\n        return new this.constructor(this.key, this.callback, callback);\n    }\n\n    asRhs() {\n        return this;\n    }\n}\n\nfunction props(callback) {\n    return new Side({ method: 'props', args: [callback] });\n}\n\n/** Constrain to an input type on the LHS, or apply a type on the RHS. */\nfunction type(theType) {\n    return new Side({ method: 'type', args: [theType] });\n}\n\nfunction note(callback) {\n    return new Side({ method: 'note', args: [callback] });\n}\n\nfunction score(scoreOrCallback) {\n    return new Side({ method: 'score', args: [scoreOrCallback] });\n}\n\nfunction atMost(score) {\n    return new Side({ method: 'atMost', args: [score] });\n}\n\nfunction typeIn(...types) {\n    return new Side({ method: 'typeIn', args: types });\n}\n\n/**\n * Pull nodes that conform to multiple conditions at once.\n *\n * For example: ``and(type('title'), type('english'))``\n *\n * Caveats: ``and`` supports only simple ``type`` calls as arguments for now,\n * and it may fire off more rules as prerequisites than strictly necessary.\n * ``not`` and ``or`` don't exist yet, but you can express ``or`` the long way\n * around by having 2 rules with identical RHSs.\n */\nfunction and(...lhss) {\n    return new Side({ method: 'and', args: lhss });\n}\n\n/**\n * Experimental. For each :term:`fnode` from ``typeCallA``, find the closest\n * node from ``typeCallB``, and attach it as a note. The note is attached to\n * the type specified by the RHS, defaulting to the type of ``typeCallA``. If\n * no nodes are emitted from ``typeCallB``, do nothing.\n *\n * For example... ::\n *\n *     nearest(type('image'), type('price'))\n *\n * The score of the ``typeCallA`` can be added to the new type's score by using\n * :func:`conserveScore` (though this routine has since been removed)::\n *\n *     rule(nearest(type('image'), type('price')),\n *          type('imageWithPrice').score(2).conserveScore())\n *\n * Caveats: ``nearest`` supports only simple ``type`` calls as arguments ``a``\n * and ``b`` for now.\n *\n * @arg distance {function} A function that takes 2 fnodes and returns a\n *     numerical distance between them. Included options are :func:`distance`,\n *     which is a weighted topological distance, and :func:`euclidean`, which\n *     is a spatial distance.\n */\nfunction nearest(typeCallA, typeCallB, distance = euclidean) {\n    return new Side({\n        method: 'nearest',\n        args: [typeCallA, typeCallB, distance],\n    });\n}\n\n/**\n * A chain of calls that can be compiled into a Rhs or Lhs, depending on its\n * position in a Rule. This lets us use type() as a leading call for both RHSs\n * and LHSs. I would prefer to do this dynamically, but that wouldn't compile\n * down to old versions of ES.\n */\nclass Side {\n    constructor(...calls) {\n        // A \"call\" is like {method: 'dom', args: ['p.smoo']}.\n        this._calls = calls;\n    }\n\n    max() {\n        return this._and('max');\n    }\n\n    bestCluster(options) {\n        return this._and('bestCluster', options);\n    }\n\n    props(callback) {\n        return this._and('props', callback);\n    }\n\n    type(...types) {\n        return this._and('type', ...types);\n    }\n\n    note(callback) {\n        return this._and('note', callback);\n    }\n\n    score(scoreOrCallback) {\n        return this._and('score', scoreOrCallback);\n    }\n\n    atMost(score) {\n        return this._and('atMost', score);\n    }\n\n    typeIn(...types) {\n        return this._and('typeIn', ...types);\n    }\n\n    and(...lhss) {\n        return this._and('and', lhss);\n    }\n\n    _and(method, ...args) {\n        return new this.constructor(...this._calls.concat({ method, args }));\n    }\n\n    asLhs() {\n        return this._asSide(Lhs.fromFirstCall(this._calls[0]), this._calls.slice(1));\n    }\n\n    asRhs() {\n        return this._asSide(new InwardRhs(), this._calls);\n    }\n\n    _asSide(side, calls) {\n        for (let call of calls) {\n            side = side[call.method](...call.args);\n        }\n        return side;\n    }\n\n    when(pred) {\n        return this._and('when', pred);\n    }\n}\n\n/**\n * A wrapper around a DOM node, storing :term:`types<type>`,\n * :term:`scores<score>`, and :term:`notes<note>` that apply to it\n */\nclass Fnode {\n    /**\n     * @arg element The DOM element described by the fnode.\n     * @arg ruleset The ruleset which created the fnode.\n     */\n    constructor(element, ruleset) {\n        if (element === undefined) {\n            throw new Error(\"Someone tried to make a fnode without specifying the element they're talking about.\");\n        }\n        /**\n         * The raw DOM element this fnode describes\n         */\n        this.element = element;\n        this._ruleset = ruleset;\n\n        // A map of type => {score: number, note: anything}. `score` is always\n        // present and defaults to 1. A note is set iff `note` is present and\n        // not undefined.\n        this._types = new Map();\n\n        // Note: conserveScore() is temporarily absent in 3.0.\n        //\n        // By default, a fnode has an independent score for each of its types.\n        // However, a RHS can opt to conserve the score of an upstream type,\n        // carrying it forward into another type. To avoid runaway scores in\n        // the case that multiple rules choose to do this, we limit the\n        // contribution of an upstream type's score to being multiplied in a\n        // single time. In this set, we keep track of which upstream types'\n        // scores have already been multiplied into each type. LHS fnode => Set\n        // of types whose score for that node have been multiplied into this\n        // node's score.\n        this._conservedScores = new Map();\n    }\n\n    /**\n     * Return whether the given type is one of the ones attached to the wrapped\n     * HTML node.\n     */\n    hasType(type) {\n        // Run type(theType) against the ruleset to make sure this doesn't\n        // return false just because we haven't lazily run certain rules yet.\n        this._computeType(type);\n        return this._types.has(type);\n    }\n\n    /**\n     * Return the confidence, in the range (0, 1), that the fnode belongs to the\n     * given type, 0 by default.\n     */\n    scoreFor(type) {\n        this._computeType(type);\n        return sigmoid(\n            this._ruleset.weightedScore(this.scoresSoFarFor(type)) + getDefault(this._ruleset.biases, type, () => 0)\n        );\n    }\n\n    /**\n     * Return the fnode's note for the given type, ``undefined`` if none.\n     */\n    noteFor(type) {\n        this._computeType(type);\n        return this._noteSoFarFor(type);\n    }\n\n    /**\n     * Return whether this fnode has a note for the given type.\n     *\n     * ``undefined`` is not considered a note and may be overwritten with\n     * impunity.\n     */\n    hasNoteFor(type) {\n        this._computeType(type);\n        return this._hasNoteSoFarFor(type);\n    }\n\n    // -------- Methods below this point are private to the framework. --------\n\n    /**\n     * Return an iterable of the types tagged onto me by rules that have\n     * already executed.\n     */\n    typesSoFar() {\n        return this._types.keys();\n    }\n\n    _noteSoFarFor(type) {\n        return this._typeRecordForGetting(type).note;\n    }\n\n    _hasNoteSoFarFor(type) {\n        return this._noteSoFarFor(type) !== undefined;\n    }\n\n    /**\n     * Return the score thus far computed on me for a certain type. Doesn't\n     * implicitly run any rules. If no score has yet been determined for the\n     * given type, return undefined.\n     */\n    scoresSoFarFor(type) {\n        return this._typeRecordForGetting(type).score;\n    }\n\n    /**\n     * Add a given number to one of our per-type scores. Implicitly assign us\n     * the given type. Keep track of which rule it resulted from so we can\n     * later mess with the coeffs.\n     */\n    addScoreFor(type, score, ruleName) {\n        this._typeRecordForSetting(type).score.set(ruleName, score);\n    }\n\n    /**\n     * Set the note attached to one of our types. Implicitly assign us that\n     * type if we don't have it already.\n     */\n    setNoteFor(type, note) {\n        if (this._hasNoteSoFarFor(type)) {\n            if (note !== undefined) {\n                throw new Error(\n                    `Someone (likely the right-hand side of a rule) tried to add a note of type ${type} to an element, but one of that type already exists. Overwriting notes is not allowed, since it would make the order of rules matter.`\n                );\n            }\n            // else the incoming note is undefined and we already have the\n            // type, so it's a no-op\n        } else {\n            // Apply either a type and note or just a type (which means a note\n            // that is undefined):\n            this._typeRecordForSetting(type).note = note;\n        }\n    }\n\n    /**\n     * Return a score/note record for a type, creating it if it doesn't exist.\n     */\n    _typeRecordForSetting(type) {\n        return setDefault(this._types, type, () => ({ score: new Map() }));\n    }\n\n    /**\n     * Manifest a temporary type record for reading, working around the lack of\n     * a .? operator in JS.\n     */\n    _typeRecordForGetting(type) {\n        return getDefault(this._types, type, () => ({ score: new Map() }));\n    }\n\n    /**\n     * Make sure any scores, notes, and type-tagging for the given type are\n     * computed for my element.\n     */\n    _computeType(theType) {\n        if (!this._types.has(theType)) {\n            // Prevent infinite recursion when an A->A rule looks at A's note in a callback.\n            this._ruleset.get(type(theType));\n        }\n    }\n}\n\n/**\n * Construct and return the proper type of rule class based on the\n * inwardness/outwardness of the RHS.\n *\n * @arg lhs {Lhs} The left-hand side of the rule\n * @arg rhs {Rhs} The right-hand side of the rule\n * @arg options {object} Other, optional information about the rule.\n *     Currently, the only recognized option is ``name``, which points to a\n *     string that uniquely identifies this rule in a ruleset. The name\n *     correlates this rule with one of the coefficients passed into\n *     :func:`ruleset`. If no name is given, an identifier is assigned based on\n *     the index of this rule in the ruleset, but that is, of course, brittle.\n */\nfunction rule(lhs, rhs, options) {\n    // Since out() is a valid call only on the RHS (unlike type()), we can take\n    // a shortcut here: any outward RHS will already be an OutwardRhs; we don't\n    // need to sidetrack it through being a Side. And OutwardRhs has an asRhs()\n    // that just returns itself.\n    if (typeof rhs === 'string') {\n        rhs = out(rhs);\n    }\n    return new (rhs instanceof OutwardRhs ? OutwardRule : InwardRule)(lhs, rhs, options);\n}\n\nlet nextRuleNumber = 0;\nfunction newInternalRuleName() {\n    return '_' + nextRuleNumber++;\n}\n\n/**\n * We place the in/out distinction in Rules because it determines whether the\n * RHS result is cached, and Rules are responsible for maintaining the rulewise\n * cache ruleset.ruleCache.\n */\nclass Rule {\n    // abstract\n    constructor(lhs, rhs, options) {\n        this.lhs = lhs.asLhs();\n        this.rhs = rhs.asRhs();\n        // TODO: Make auto-generated rule names be based on the out types of\n        // the rules, e.g. _priceish_4. That way, adding rules for one type\n        // won't make the coeffs misalign for another.\n        this.name = (options ? options.name : undefined) || newInternalRuleName();\n    }\n\n    /**\n     * Return a NiceSet of the rules that this one shallowly depends on in the\n     * given ruleset. In a BoundRuleset, this may include rules that have\n     * already been executed.\n     *\n     * Depend on emitters of any LHS type this rule finalizes. (See\n     * _typesFinalized for a definition.) Depend on adders of any other LHS\n     * types (because, after all, we need to know what nodes have that type in\n     * order to find the set of LHS nodes). This works for simple rules and\n     * complex ones like and().\n     *\n     * Specific examples (where A is a type):\n     * * A.max->* depends on anything emitting A.\n     * * Even A.max->A depends on A emitters, because we have to have all the\n     *   scores factored in first. For example, what if we did\n     *   max(A)->score(.5)?\n     * * A->A depends on anything adding A.\n     * * A->(something other than A) depends on anything emitting A. (For\n     *   example, we need the A score finalized before we could transfer it to\n     *   B using conserveScore().)\n     * * A->out() also depends on anything emitting A. Fnode methods aren't\n     *   smart enough to lazily run emitter rules as needed. We could make them\n     *   so if it was shown to be an advantage.\n     */\n    prerequisites(ruleset) {\n        // Optimization: we could cache the result of this when in a compiled (immutable) ruleset.\n\n        // Extend prereqs with rules derived from each of the given types. If\n        // no rules are found, raise an exception, as that indicates a\n        // malformed ruleset.\n        function extendOrThrow(prereqs, types, ruleGetter, verb) {\n            for (let type of types) {\n                const rules = ruleGetter(type);\n                if (rules.length > 0) {\n                    prereqs.extend(rules);\n                } else {\n                    throw new Error(`No rule ${verb} the \"${type}\" type, but another rule needs it as input.`);\n                }\n            }\n        }\n\n        const prereqs = new NiceSet();\n\n        // Add finalized types:\n        extendOrThrow(prereqs, this._typesFinalized(), (type) => ruleset.inwardRulesThatCouldEmit(type), 'emits');\n\n        // Add mentioned types:\n        // We could say this.lhs.typesMentioned().minus(typesFinalized) as an\n        // optimization. But since types mentioned are a superset of types\n        // finalized and rules adding are a subset of rules emitting, we get\n        // the same result without.\n        extendOrThrow(prereqs, this.lhs.typesMentioned(), (type) => ruleset.inwardRulesThatCouldAdd(type), 'adds');\n\n        return prereqs;\n    }\n\n    /**\n     * Return the types that this rule finalizes.\n     *\n     * To \"finalize\" a type means to make sure we're finished running all\n     * possible rules that might change a node's score or notes w.r.t. a given\n     * type. This is generally done because we're about to use those data for\n     * something, like computing a new type's score or or an aggregate\n     * function. Exhaustively, we're about to...\n     * * change the type of the nodes or\n     * * aggregate all nodes of a type\n     *\n     * This base-class implementation just returns what aggregate functions\n     * need, since that need spans inward and outward rules.\n     *\n     * @return Set of types\n     */\n    _typesFinalized() {\n        // Get the types that are fed to aggregate functions. Aggregate\n        // functions are more demanding than a simple type() LHS. A type() LHS\n        // itself does not finalize its nodes because the things it could do to\n        // them without changing their type (adding notes, adding to score)\n        // are immutable or commutative (respectively). Thus, we require a RHS\n        // type change in order to require finalization of a simple type()\n        // mention. A max(B), OTOH, is not commutative with other B->B rules\n        // (imagine type(B).max()->score(.5)), so it must depend on B emitters\n        // and thus finalize B. (This will have to be relaxed or rethought when\n        // we do the max()/atMost() optimization. Perhaps we can delegate to\n        // aggregate functions up in Rule.prerequisites() to ask what their\n        // prereqs are. If they implement such an optimization, they can reply.\n        // Otherwise, we can assume they are all the nodes of their type.)\n        //\n        // TODO: Could arbitrary predicates (once we implement those) matter\n        // too? Maybe it's not just aggregations.\n        const type = this.lhs.aggregatedType();\n        return type === undefined ? new NiceSet() : new NiceSet([type]);\n    }\n}\n\n/**\n * A normal rule, whose results head back into the Fathom knowledgebase, to be\n * operated on by further rules.\n */\nclass InwardRule extends Rule {\n    // TODO: On construct, complain about useless rules, like a dom() rule that\n    // doesn't assign a type.\n\n    /**\n     * Return an iterable of the fnodes emitted by the RHS of this rule.\n     * Side effect: update ruleset's store of fnodes, its accounting of which\n     * rules are done executing, and its cache of results per type.\n     */\n    results(ruleset) {\n        if (ruleset.doneRules.has(this)) {\n            // shouldn't happen\n            throw new Error(\n                'A bug in Fathom caused results() to be called on an inward rule twice. That could cause redundant score contributions, etc.'\n            );\n        }\n        const self = this;\n        // For now, we consider most of what a LHS computes to be cheap, aside\n        // from type() and type().max(), which are cached by their specialized\n        // LHS subclasses.\n        const leftResults = this.lhs.fnodes(ruleset);\n        // Avoid returning a single fnode more than once. LHSs uniquify\n        // themselves, but the RHS can change the element it's talking\n        // about and thus end up with dupes.\n        const returnedFnodes = new Set();\n\n        // Merge facts into fnodes:\n        forEach(\n            // leftResult can be either a fnode or a {fnode, rhsTransformer} pair.\n            function updateFnode(leftResult) {\n                const leftType = self.lhs.guaranteedType();\n                // Get a fnode and a RHS transformer, whether a plain fnode is\n                // returned or a {fnode, rhsTransformer} pair:\n                const { fnode: leftFnode = leftResult, rhsTransformer = identity } = leftResult;\n                // Grab the fact from the RHS, and run the LHS's optional\n                // transformer over it to pick up anything special it wants to\n                // do:\n                const fact = rhsTransformer(self.rhs.fact(leftFnode, leftType));\n                self.lhs.checkFact(fact);\n                const rightFnode = ruleset.fnodeForElement(fact.element || leftFnode.element);\n                // If the RHS doesn't specify a type, default to the\n                // type of the LHS, if any:\n                const rightType = fact.type || self.lhs.guaranteedType();\n                if (fact.score !== undefined) {\n                    if (rightType !== undefined) {\n                        rightFnode.addScoreFor(rightType, fact.score, self.name);\n                    } else {\n                        throw new Error(\n                            `The right-hand side of a rule specified a score (${fact.score}) with neither an explicit type nor one we could infer from the left-hand side.`\n                        );\n                    }\n                }\n                if (fact.type !== undefined || fact.note !== undefined) {\n                    // There's a reason to call setNoteFor.\n                    if (rightType === undefined) {\n                        throw new Error(\n                            `The right-hand side of a rule specified a note (${fact.note}) with neither an explicit type nor one we could infer from the left-hand side. Notes are per-type, per-node, so that's a problem.`\n                        );\n                    } else {\n                        rightFnode.setNoteFor(rightType, fact.note);\n                    }\n                }\n                returnedFnodes.add(rightFnode);\n            },\n            leftResults\n        );\n\n        // Update ruleset lookup tables.\n        // First, mark this rule as done:\n        ruleset.doneRules.add(this);\n        // Then, stick each fnode in typeCache under all applicable types.\n        // Optimization: we really only need to loop over the types\n        // this rule can possibly add.\n        for (let fnode of returnedFnodes) {\n            for (let type of fnode.typesSoFar()) {\n                setDefault(ruleset.typeCache, type, () => new Set()).add(fnode);\n            }\n        }\n        return returnedFnodes.values();\n    }\n\n    /**\n     * Return a Set of the types that could be emitted back into the system.\n     * To emit a type means to either to add it to a fnode emitted from the RHS\n     * or to leave it on such a fnode where it already exists.\n     */\n    typesItCouldEmit() {\n        const rhs = this.rhs.possibleEmissions();\n        if (!rhs.couldChangeType && this.lhs.guaranteedType() !== undefined) {\n            // It's a b -> b rule.\n            return new Set([this.lhs.guaranteedType()]);\n        } else if (rhs.possibleTypes.size > 0) {\n            // We can prove the type emission from the RHS alone.\n            return rhs.possibleTypes;\n        } else {\n            throw new Error(\n                'Could not determine the emitted type of a rule because its right-hand side calls props() without calling typeIn().'\n            );\n        }\n    }\n\n    /**\n     * Return a Set of types I could add to fnodes I output (where the fnodes\n     * did not already have them).\n     */\n    typesItCouldAdd() {\n        const ret = new Set(this.typesItCouldEmit());\n        ret.delete(this.lhs.guaranteedType());\n        return ret;\n    }\n\n    /**\n     * Add the types we could change to the superclass's result.\n     */\n    _typesFinalized() {\n        const self = this;\n        function typesThatCouldChange() {\n            const ret = new NiceSet();\n\n            // Get types that could change:\n            const emissions = self.rhs.possibleEmissions();\n            if (emissions.couldChangeType) {\n                // Get the possible guaranteed combinations of types on the LHS\n                // (taking just this LHS into account). For each combo, if the RHS\n                // adds a type that's not in the combo, the types in the combo get\n                // unioned into ret.\n                for (let combo of self.lhs.possibleTypeCombinations()) {\n                    for (let rhsType of emissions.possibleTypes) {\n                        if (!combo.has(rhsType)) {\n                            ret.extend(combo);\n                            break;\n                        }\n                    }\n                }\n            }\n            // Optimization: the possible combos could be later expanded to be\n            // informed by earlier rules which add the types mentioned in the LHS.\n            // If the only way for something to get B is to have Q first, then we\n            // can add Q to each combo and end up with fewer types finalized. Would\n            // this imply the existence of a Q->B->Q cycle and thus be impossible?\n            // Think about it. If we do this, we can centralize that logic here,\n            // rather than repeating it in all the Lhs subclasses).\n            return ret;\n        }\n\n        return typesThatCouldChange().extend(super._typesFinalized());\n    }\n}\n\n/**\n * A rule whose RHS is an out(). This represents a final goal of a ruleset.\n * Its results go out into the world, not inward back into the Fathom\n * knowledgebase.\n */\nclass OutwardRule extends Rule {\n    /**\n     * Compute the whole thing, including any .through() and .allThrough().\n     * Do not mark me done in ruleset.doneRules; out rules are never marked as\n     * done so they can be requested many times without having to cache their\n     * (potentially big, since they aren't necessarily fnodes?) results. (We\n     * can add caching later if it proves beneficial.)\n     */\n    results(ruleset) {\n        /**\n         * From a LHS's ``{fnode, rhsTransform}`` object or plain fnode, pick off just\n         * the fnode and return it.\n         */\n        function justFnode(fnodeOrStruct) {\n            return fnodeOrStruct instanceof Fnode ? fnodeOrStruct : fnodeOrStruct.fnode;\n        }\n\n        return this.rhs.allCallback(map(this.rhs.callback, map(justFnode, this.lhs.fnodes(ruleset))));\n    }\n\n    /**\n     * @return the key under which the output of this rule will be available\n     */\n    key() {\n        return this.rhs.key;\n    }\n\n    /**\n     * OutwardRules finalize all types mentioned.\n     */\n    _typesFinalized() {\n        return this.lhs.typesMentioned().extend(super._typesFinalized());\n    }\n}\n\n/**\n * A shortcut for creating a new :class:`Ruleset`, for symmetry with\n * :func:`rule`\n */\nfunction ruleset(rules, coeffs = [], biases = []) {\n    return new Ruleset(rules, coeffs, biases);\n}\n\n/**\n * An unbound ruleset. When you bind it by calling :func:`~Ruleset.against()`,\n * the resulting :class:`BoundRuleset` will be immutable.\n */\nclass Ruleset {\n    /**\n     * @arg rules {Array} Rules returned from :func:`rule`\n     * @arg coeffs {Map} A map of rule names to numerical weights, typically\n     *     returned by the :doc:`trainer<training>`. Example:\n     *     ``[['someRuleName', 5.04], ...]``. If not given, coefficients\n     *     default to 1.\n     * @arg biases {object} A map of type names to neural-net biases. These\n     *      enable accurate confidence estimates. Example: ``[['someType',\n     *      -2.08], ...]``. If absent, biases default to 0.\n     */\n    constructor(rules, coeffs = [], biases = []) {\n        this._inRules = [];\n        this._outRules = new Map(); // key -> rule\n        this._rulesThatCouldEmit = new Map(); // type -> [rules]\n        this._rulesThatCouldAdd = new Map(); // type -> [rules]\n        // Private to the framework:\n        this._coeffs = new Map(coeffs); // rule name => coefficient\n        this.biases = new Map(biases); // type name => bias\n\n        // Separate rules into out ones and in ones, and sock them away. We do\n        // this here so mistakes raise errors early.\n        for (let rule of rules) {\n            if (rule instanceof InwardRule) {\n                this._inRules.push(rule);\n\n                // Keep track of what inward rules can emit or add:\n                // TODO: Combine these hashes for space efficiency:\n                const emittedTypes = rule.typesItCouldEmit();\n                for (let type of emittedTypes) {\n                    setDefault(this._rulesThatCouldEmit, type, () => []).push(rule);\n                }\n                for (let type of rule.typesItCouldAdd()) {\n                    setDefault(this._rulesThatCouldAdd, type, () => []).push(rule);\n                }\n            } else if (rule instanceof OutwardRule) {\n                this._outRules.set(rule.key(), rule);\n            } else {\n                throw new Error(`This element of ruleset()'s first param wasn't a rule: ${rule}`);\n            }\n        }\n    }\n\n    /**\n     * Commit this ruleset to running against a specific DOM tree or subtree.\n     *\n     * When run against a subtree, the root of the subtree is not considered as\n     * a possible match.\n     *\n     * This doesn't actually modify the Ruleset but rather returns a fresh\n     * :class:`BoundRuleset`, which contains caches and other stateful, per-DOM\n     * bric-a-brac.\n     */\n    against(doc) {\n        return new BoundRuleset(\n            doc,\n            this._inRules,\n            this._outRules,\n            this._rulesThatCouldEmit,\n            this._rulesThatCouldAdd,\n            this._coeffs,\n            this.biases\n        );\n    }\n\n    /**\n     * Return all the rules (both inward and outward) that make up this ruleset.\n     *\n     * From this, you can construct another ruleset like this one but with your\n     * own rules added.\n     */\n    rules() {\n        return Array.from([...this._inRules, ...this._outRules.values()]);\n    }\n}\n\n/**\n * A ruleset that is earmarked to analyze a certain DOM\n *\n * Carries a cache of rule results on that DOM. Typically comes from\n * :meth:`~Ruleset.against`.\n */\nclass BoundRuleset {\n    /**\n     * @arg inRules {Array} Non-out() rules\n     * @arg outRules {Map} Output key -> out() rule\n     */\n    constructor(doc, inRules, outRules, rulesThatCouldEmit, rulesThatCouldAdd, coeffs, biases) {\n        this.doc = doc;\n        this._inRules = inRules;\n        this._outRules = outRules;\n        this._rulesThatCouldEmit = rulesThatCouldEmit;\n        this._rulesThatCouldAdd = rulesThatCouldAdd;\n        this._coeffs = coeffs;\n\n        // Private, for the use of only helper classes:\n        this.biases = biases;\n        this._clearCaches();\n        this.elementCache = new WeakMap(); // DOM element => fnode about it\n        this.doneRules = new Set(); // InwardRules that have been executed. OutwardRules can be executed more than once because they don't change any fnodes and are thus idempotent.\n    }\n\n    /**\n     * Change my coefficients and biases after construction.\n     *\n     * @arg coeffs See the :class:`Ruleset` constructor.\n     * @arg biases See the :class:`Ruleset` constructor.\n     */\n    setCoeffsAndBiases(coeffs, biases = []) {\n        // Destructuring assignment doesn't make it through rollup properly\n        // (https://github.com/rollup/rollup-plugin-commonjs/issues/358):\n        this._coeffs = new Map(coeffs);\n        this.biases = new Map(biases);\n        this._clearCaches();\n    }\n\n    /**\n     * Clear the typeCache and maxCache, usually in the wake of changing\n     * ``this._coeffs``, because both of thise depend on weighted scores.\n     */\n    _clearCaches() {\n        this.maxCache = new Map(); // type => Array of max fnode (or fnodes, if tied) of this type\n        this.typeCache = new Map(); // type => Set of all fnodes of this type found so far. (The dependency resolution during execution ensures that individual types will be comprehensive just in time.)\n    }\n\n    /**\n     * Return an array of zero or more fnodes.\n     * @arg thing {string|Lhs|Node} Can be\n     *\n     *       (1) A string which matches up with an \"out\" rule in the ruleset.\n     *           If the out rule uses through(), the results of through's\n     *           callback (which might not be fnodes) will be returned.\n     *       (2) An arbitrary LHS which we calculate and return the results of.\n     *       (3) A DOM node, for which we will return the corresponding fnode.\n     *\n     *     Results are cached for cases (1) and (3).\n     */\n    get(thing) {\n        if (typeof thing === 'string') {\n            if (this._outRules.has(thing)) {\n                return Array.from(this._execute(this._outRules.get(thing)));\n            } else {\n                throw new Error(`There is no out() rule with key \"${thing}\".`);\n            }\n        } else if (isDomElement(thing)) {\n            // Return the fnode and let it run type(foo) on demand, as people\n            // ask it things like scoreFor(foo).\n            return this.fnodeForElement(thing);\n        } else if (thing.asLhs !== undefined) {\n            // Make a temporary out rule, and run it. This may add things to\n            // the ruleset's cache, but that's fine: it doesn't change any\n            // future results; it just might make them faster. For example, if\n            // you ask for .get(type('smoo')) twice, the second time will be a\n            // cache hit.\n            const outRule = rule(thing, out(Symbol('outKey')));\n            return Array.from(this._execute(outRule));\n        } else {\n            throw new Error(\n                'ruleset.get() expects a string, an expression like on the left-hand side of a rule, or a DOM node.'\n            );\n        }\n    }\n\n    /**\n     * Return the weighted sum of the per-rule, per-type scores from a fnode.\n     *\n     * @arg mapOfScores a Map of rule name to the [0, 1] score it computed for\n     *      the type in question\n     */\n    weightedScore(mapOfScores) {\n        let total = 0;\n        for (const [name, score] of mapOfScores) {\n            total += score * getDefault(this._coeffs, name, () => 1);\n        }\n        return total;\n    }\n\n    // Provide an opaque context object to be made available to all ranker\n    // functions.\n    // context (object) {\n    //     self.context = object;\n    // }\n\n    // -------- Methods below this point are private to the framework. --------\n\n    /**\n     * Return all the thus-far-unexecuted rules that will have to run to run\n     * the requested rule, in the form of Map(prereq: [rulesItIsNeededBy]).\n     */\n    _prerequisitesTo(rule, undonePrereqs = new Map()) {\n        for (let prereq of rule.prerequisites(this)) {\n            if (!this.doneRules.has(prereq)) {\n                // prereq is not already run. (If it were, we wouldn't care\n                // about adding it to the graph.)\n                const alreadyAdded = undonePrereqs.has(prereq);\n                setDefault(undonePrereqs, prereq, () => []).push(rule);\n\n                // alreadyAdded means we've already computed the prereqs of\n                // this prereq and added them to undonePrereqs. So, now\n                // that we've hooked up the rule to this prereq in the\n                // graph, we can stop. But, if we haven't, then...\n                if (!alreadyAdded) {\n                    this._prerequisitesTo(prereq, undonePrereqs);\n                }\n            }\n        }\n        return undonePrereqs;\n    }\n\n    /**\n     * Run the given rule (and its dependencies, in the proper order), and\n     * return its results.\n     *\n     * The caller is responsible for ensuring that _execute() is not called\n     * more than once for a given InwardRule, lest non-idempotent\n     * transformations, like score contributions, be applied to fnodes more\n     * than once.\n     *\n     * The basic idea is to sort rules in topological order (according to input\n     * and output types) and then run them. On top of that, we do some\n     * optimizations. We keep a cache of results by type (whether partial or\n     * comprehensive--either way, the topology ensures that any\n     * non-comprehensive typeCache entry is made comprehensive before another\n     * rule needs it). And we prune our search for prerequisite rules at the\n     * first encountered already-executed rule.\n     */\n    _execute(rule) {\n        const prereqs = this._prerequisitesTo(rule);\n        let sorted;\n        try {\n            sorted = [rule].concat(toposort(prereqs.keys(), (prereq) => prereqs.get(prereq)));\n        } catch (exc) {\n            if (exc instanceof CycleError) {\n                throw new CycleError('There is a cyclic dependency in the ruleset.');\n            } else {\n                throw exc;\n            }\n        }\n        let fnodes;\n        for (let eachRule of reversed(sorted)) {\n            // Sock each set of results away in this.typeCache:\n            fnodes = eachRule.results(this);\n        }\n        return Array.from(fnodes);\n    }\n\n    /** @return {Rule[]} */\n    inwardRulesThatCouldEmit(type) {\n        return getDefault(this._rulesThatCouldEmit, type, () => []);\n    }\n\n    /** @return {Rule[]} */\n    inwardRulesThatCouldAdd(type) {\n        return getDefault(this._rulesThatCouldAdd, type, () => []);\n    }\n\n    /**\n     * @return the Fathom node that describes the given DOM element. This does\n     *     not trigger any execution, so the result may be incomplete.\n     */\n    fnodeForElement(element) {\n        return setDefault(this.elementCache, element, () => new Fnode(element, this));\n    }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nconst version = '3.7.3';\n\nexport {\n    Fnode,\n    and,\n    atMost,\n    clusters$1 as clusters,\n    dom,\n    domQuery,\n    element,\n    exceptions,\n    nearest,\n    note,\n    out,\n    props,\n    rule,\n    ruleset,\n    score,\n    type,\n    typeIn,\n    utilsForFrontend as utils,\n    version,\n};\n","import { clusters as clusters$1, dom, out, rule, ruleset, score, type, utils } from './fathom.js';\nimport * as fathomWeb from './fathom.js';\n\nexport { fathomWeb as fathom };\n\nconst MAX_FORM_FIELD_WALK_UP = 3;\n\nconst MAX_FORM_HEADING_WALK_UP = 3;\n\nconst MAX_HEADING_HORIZONTAL_DIST = 75;\n\nconst MAX_HEADING_VERTICAL_DIST = 150;\n\nconst MIN_AREA_SUBMIT_BTN = 3500;\n\nconst MIN_FIELD_HEIGHT = 15;\n\nconst MIN_FIELD_WIDTH = 30;\n\nconst MAX_INPUTS_PER_FORM = 40;\n\nconst MAX_FIELDS_PER_FORM = 60;\n\nconst MAX_HIDDEN_FIELD_VALUE_LENGTH = 320;\n\nconst HIDDEN_FIELD_IGNORE_VALUES = ['0', '1', 'true', 'false'];\n\nconst OTP_PATTERNS = [\n    [1, 'd*'],\n    [6, 'd{6}'],\n    [1, '[0-9]*'],\n    [6, '[0-9]{6}'],\n    [5, '([0-9a-fA-F]{5}-?[0-9a-fA-F]{5})'],\n];\n\nconst VALID_INPUT_TYPES = ['text', 'email', 'number', 'tel', 'password', 'hidden', 'search'];\n\nconst sanitizeString = (str) =>\n    str\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-zA-Z0-9\\d\\[\\]]/g, '');\n\nconst LOGIN_RE =\n    /(?:(?:n(?:ouvelleses|uevase|ewses)s|iniciarses|connex)io|anmeldedate|sign[io])n|in(?:iciarsessao|troduce)|a(?:uthenticate|nmeld(?:ung|en))|authentifier|s(?:econnect|identifi)er|novasessao|(?:introduci|conecta|entr[ae])r|prihlasit|connect|acceder|login/i;\n\nconst REGISTER_RE =\n    /kontoerstellen|cr(?:ea(?:teaccount|rcuenta)|iarconta)|(?:nouveaucompt|creeruncompt|s?inscrir|unirs)e|re(?:gist(?:r(?:ieren|arse|ar)|er)|joindre)|nuevacuenta|neueskonto|getstarted|newaccount|novaconta|(?:com(?:mence|eca)|(?:empez|junt)a)r|signup|join/i;\n\nconst RECOVERY_RE =\n    /(?:wiederherstell|zurucksetz)en|re(?:(?:initialis|stablec)er|(?:defini|staur[ae])r|c(?:uper[ae]|ove)r|set)|problem|(?:troubl|restor|aid)e|a[jy]uda|h(?:ilfe|elp)/i;\n\nconst MULTI_STEP_RE = /p(?:rogres(?:s(?:ion|o)|o)|aso)|fortschritt|progress|s(?:chritt|t(?:age|ep))|etap[ae]|phase/i;\n\nconst TROUBLE_RE =\n    /schwierigkeit|(?:difficult|troubl|oubli|hilf)e|i(?:nciden(?:cia|t)|ssue)|vergessen|esquecido|olvidado|needhelp|questao|problem|forgot|ayuda/i;\n\nconst PASSWORD_RE =\n    /p(?:hrasesecrete|ass(?:(?:phras|cod)e|wor[dt]))|(?:c(?:havesecret|lavesecret|ontrasen)|deseguranc)a|(?:(?:zugangs|secret)cod|clesecret)e|codesecret|motdepasse|geheimnis|secret|heslo|senha|key/i;\n\nconst PASSWORD_OUTLIER_RE = /socialsecurity|nationalid/i;\n\nconst USERNAME_RE =\n    /identi(?:fiant|ty)|u(?:tilisateur|s(?:ername|uario))|(?:identifi|benutz)er|(?:screen|nick)name|nutzername|(?:anmeld|handl)e|pseudo/i;\n\nconst USERNAME_ATTR_RE = /identifyemail|(?:custom|us)erid|loginname|a(?:cc(?:ountid|t)|ppleid)|loginid/i;\n\nconst USERNAME_OUTLIER_RE =\n    /(?:nom(?:defamill|br)|tit[lr])e|(?:primeiro|sobre)nome|(?:company|middle|nach|vor)name|firstname|apellido|lastname|prenom/i;\n\nconst EMAIL_RE = /co(?:urriel|rrei?o)|email/i;\n\nconst EMAIL_ATTR_RE = /usermail/i;\n\nconst CREATE_ACTION_RE = /erstellen|n(?:o(?:uveau|vo)|uevo|e[uw])|cr(?:e(?:a(?:te|r)|er)|iar)|set/i;\n\nconst CREATE_ACTION_ATTR_END_RE = /\\b.*(?:fst|1)$/i;\n\nconst RESET_ACTION_RE =\n    /(?:a(?:ktualisiere|nder)|zurucksetze)n|(?:re(?:initialise|stablece|defini)|mettreajou)r|a(?:ctualiz|tualiz|lter)ar|c(?:ambiar|hange)|update|reset/i;\n\nconst CONFIRM_ACTION_RE =\n    /digitarnovamente|v(?:olveraescribi|erifi(?:ca|e))r|saisiranouveau|(?:erneuteingeb|wiederhol|bestatig)en|verif(?:izieren|y)|re(?:pe(?:t[ei]r|at)|type)|confirm|again/i;\n\nconst CONFIRM_ACTION_ATTR_END_RE = /\\b.*(?:snd|bis|2)$/i;\n\nconst STEP_ACTION_RE =\n    /(?:f(?:ertigstell|ortfahr)|abschlie)en|getstarted|siguiente|(?:preceden|suivan|accep)t|(?:finaliza|termin[ae]|anterio|weite)r|co(?:mplet(?:ar|e)|ntinu(?:ar|e))|pro(?:c(?:hain|eed)|ximo)|finish|zuruck|back|next/i;\n\nconst REMEMBER_ACTION_RE =\n    /angemeldetbleiben|lembrardemim|micherinnern|sesouvenirde|re(?:cordarme|member|ster)|manterme|mantener|stay|keep/i;\n\nconst SEARCH_ACTION_RE = /recherche|buscar|s(?:earch|uche)|query/i;\n\nconst CURRENT_VALUE_RE =\n    /(?:be(?:stehend|for)|vorherig|aktuell)e|exist(?:ente|ing)|pre(?:cedent|vious)|a(?:n(?:t(?:erior|igo)|cien)|ctu[ae]l|tual)|existant|dernier|current|(?:ultim|viej)o|(?:letz|al)te|last|old/i;\n\nconst HIDDEN_ATTR_RE = /s(?:creenreade)?ronly|(?:move)?offscreen|(?:displaynon|a11yhid)e|hidden/i;\n\nconst OAUTH_ATTR_RE = /facebook|twitch|google|apple/i;\n\nconst TOS_RE =\n    /(?:datenschutzrichtlini|politicadeprivacidad|confidentialit|a(?:cknowledg|gre))e|nutzungsbedingungen|(?:consentimi?ent|ac(?:ue|o)rd)o|(?:einwillig|zustimm)ung|consentement|condi(?:cione|tion)s|term(?:osdeuso|inos|sof)|(?:privacida|understan)d|guideline|consent|p(?:riva|oli)cy|accord/i;\n\nconst MFA_ACTION_RE = /enter(?:auth)?code|confirm|verify/i;\n\nconst MFA_RE =\n    /(?:authentifizierung|doisfatore|doispasso)s|(?:auth(?:entication)?cod|(?:securityc|codig)od|doubleetap|coded)e|(?:authentication|generator)app|(?:(?:authentifica|doublefac)teu|(?:(?:authentifika|doblefac|zweifak|twofac)t|aut(?:henticat|enticad))o)r|verifica(?:c(?:ion|ao)|tion)|multifa(?:ct(?:eu|o)|k?to)r|zweischritte|generadora|doblepaso|2(?:s(?:chritte|tep)|(?:etap[ae]|paso)s|fa)|twostep/i;\n\nconst MFA_ATTR_RE =\n    /phoneverification|(?:approvals|login)code|c(?:odeinput|hallenge)|two(?:factor|step)|twofa|tfa|[2m]fa/i;\n\nconst OTP_ATTR_RE = /totp(?:pin)?|o(?:netime|t[cp])|1time/i;\n\nconst OTP_OUTLIER_RE =\n    /n(?:(?:ue|o)vocodigo|ouveaucode|e(?:usenden|(?:uer|w)code))|re(?:enviar|send)|envoyer|senden|enviar|send/i;\n\nconst OTP_OUTLIER_ATTR_RE = /(?:phone(?:verification)?|email|tel)pin|email|sms/i;\n\nconst NEWSLETTER_RE = /newsletter|b(?:ul|o)letin|mailing/i;\n\nconst NEWSLETTER_ATTR_RE = /subscription|mailinglist|newsletter|emailform/i;\n\nconst EMAIL_VALUE_RE = /^[\\w\\-\\.]+@([\\w-]+\\.)+[\\w-]{2,5}$/;\n\nconst TEL_VALUE_RE = /^[\\d()+-]{6,25}$/;\n\nconst USERNAME_VALUE_RE = /^[\\w\\-\\.]{7,30}$/;\n\nconst reSanityCheck = (cb, options) => (str) => {\n    if (options.maxLength && str.length > options.maxLength) return false;\n    if (options.minLength && str.length < options.minLength) return false;\n    return cb(str);\n};\n\nconst notRe = (reg, options) => (str) => !test(reg, options)(str);\n\nconst andRe = (reg, options) => and(reg.map((re) => test(re, options)));\n\nconst orRe = (reg, options) => or(reg.map((re) => test(re, options)));\n\nconst test = (re, options) =>\n    reSanityCheck(\n        (str) => re.test(str),\n        options !== null && options !== void 0\n            ? options\n            : {\n                  maxLength: 5e3,\n                  minLength: 2,\n              }\n    );\n\nconst and = (tests) => (str) => tests.every((test) => test(str));\n\nconst or = (tests) => (str) => tests.some((test) => test(str));\n\nconst any = (test) => (strs) => strs.some(test);\n\nconst matchLogin = test(LOGIN_RE);\n\nconst matchRegister = test(REGISTER_RE);\n\nconst matchUsername = test(USERNAME_RE);\n\nconst matchUsernameAttr = orRe([USERNAME_ATTR_RE, USERNAME_RE]);\n\nconst matchUsernameValue = test(USERNAME_VALUE_RE);\n\nconst matchUsernameOutlier = test(USERNAME_OUTLIER_RE);\n\nconst matchEmailAttr = orRe([EMAIL_ATTR_RE, EMAIL_RE]);\n\nconst matchEmailValue = test(EMAIL_VALUE_RE, {\n    maxLength: 230,\n    minLength: 5,\n});\n\nconst matchEmail = or([test(EMAIL_RE), matchEmailValue]);\n\nconst matchTelValue = test(TEL_VALUE_RE, {\n    maxLength: 25,\n    minLength: 6,\n});\n\nconst matchRememberMe = test(REMEMBER_ACTION_RE);\n\nconst matchTOS = test(TOS_RE);\n\nconst matchTrouble = test(TROUBLE_RE);\n\nconst matchRecovery = orRe([RECOVERY_RE, TROUBLE_RE]);\n\nconst matchMultiStep = test(MULTI_STEP_RE);\n\nconst matchStepAction = orRe([STEP_ACTION_RE, MULTI_STEP_RE]);\n\nconst matchOAuth = test(OAUTH_ATTR_RE);\n\nconst matchSearchAction = test(SEARCH_ACTION_RE);\n\nconst matchPasswordReset = and([andRe([PASSWORD_RE, RESET_ACTION_RE]), notRe(CONFIRM_ACTION_RE)]);\n\nconst matchPasswordResetAttr = and([matchPasswordReset, notRe(CONFIRM_ACTION_ATTR_END_RE)]);\n\nconst matchPasswordCreate = and([andRe([PASSWORD_RE, CREATE_ACTION_RE]), notRe(CONFIRM_ACTION_RE)]);\n\nconst matchPasswordCreateAttr = and([matchPasswordCreate, notRe(CONFIRM_ACTION_ATTR_END_RE)]);\n\nconst matchPasswordConfirm = andRe([PASSWORD_RE, CONFIRM_ACTION_RE]);\n\nconst matchPasswordConfirmAttr = and([andRe([PASSWORD_RE, CONFIRM_ACTION_RE]), notRe(CREATE_ACTION_ATTR_END_RE)]);\n\nconst matchPasswordCurrent = and([andRe([PASSWORD_RE, CURRENT_VALUE_RE]), notRe(CONFIRM_ACTION_RE)]);\n\nconst matchPasswordCurrentAttr = and([matchPasswordCurrent, notRe(CONFIRM_ACTION_ATTR_END_RE)]);\n\nconst matchPasswordOutlier = test(PASSWORD_OUTLIER_RE);\n\nconst matchHidden = test(HIDDEN_ATTR_RE);\n\nconst matchMfaAction = test(MFA_ACTION_RE);\n\nconst matchMfa = test(MFA_RE);\n\nconst matchMfaAttr = test(MFA_ATTR_RE);\n\nconst matchOtpAttr = test(OTP_ATTR_RE);\n\nconst matchOtpOutlier = orRe([OTP_OUTLIER_ATTR_RE, OTP_OUTLIER_RE]);\n\nconst matchNewsletter = test(NEWSLETTER_RE);\n\norRe([NEWSLETTER_RE, NEWSLETTER_ATTR_RE]);\n\nconst FORM_CLUSTER_ATTR = 'data-protonpass-form';\n\nconst kFieldSelector = 'input, select, textarea';\n\nconst kEmailSelector = 'input[name=\"email\"], input[id=\"email\"]';\n\nconst kPasswordSelector = 'input[type=\"password\"], input[type=\"text\"][id=\"password\"]';\n\nconst kCaptchaSelector = `[class*=\"captcha\"], [id*=\"captcha\"], [name*=\"captcha\"]`;\n\nconst kSocialSelector = `[class*=social], [aria-label*=with]`;\n\nconst kEditorSelector = 'div[class*=\"editor\" i], div[id*=\"editor\" i], div[class*=\"composer\" i], div[id*=\"composer\" i]';\n\nconst kDomGroupSelector = `[role=\"dialog\"], [role=\"tabpanel\"], [role=\"group\"], [role=\"form\"], [id*=\"modal\"], [class*=\"modal\"], header, section, nav, footer, aside`;\n\nconst kUsernameSelector = [\n    'input[type=\"login\"]',\n    'input[type=\"username\"]',\n    'input[type=\"search\"][name=\"loginName\"]',\n    'input[type=\"password\"][name=\"userID\"]',\n    'input[type=\"password\"][name=\"USERNAME\"]',\n    'input[name=\"account\"]',\n    'input[name=\"quickconnect-id\"]',\n].join(',');\n\nconst kHiddenUsernameSelector = [\n    '[name*=\"user\" i]',\n    '[id*=\"user\" i]',\n    '[name*=\"login\" i]',\n    '[id*=\"login\" i]',\n    '[name*=\"email\" i]',\n    '[id*=\"email\" i]',\n    '[name*=\"identifier\" i]',\n    '[id*=\"identifier\" i]',\n].join(',');\n\nconst kHeadingSelector = [\n    ...[1, 2, 3, 4, 5].flatMap((level) => [`h${level}, [aria-level=\"${level}\"]`]),\n    '[role=\"heading\"]',\n    '[class*=\"title\"]',\n    '[class*=\"header\"]',\n    '[name=\"title\"]',\n    'div[style*=\"font-size: 2\"]',\n    'div[style*=\"font-size: 3\"]',\n].join(',');\n\nconst kButtonSubmitSelector = [\n    'input[type=\"submit\"]',\n    'button[id*=\"password\" i]',\n    'button[type=\"submit\"]',\n    'button[type=\"button\"]',\n    'button[name=\"submit\"]',\n    'a[role=\"submit\"]',\n    'div[role=\"button\"]',\n    'div[role=\"submit\"]',\n].join(',');\n\nconst kLayoutSelector = `div, section, aside, main, nav`;\n\nconst kAnchorLinkSelector = `a, span[role=\"button\"]`;\n\nconst formCandidateSelector = `form, [${FORM_CLUSTER_ATTR}]`;\n\nconst inputCandidateSelector =\n    'input:not([type=\"hidden\"]):not([type=\"submit\"]):not([type=\"button\"]):not([type=\"image\"]):not([type=\"checkbox\"])';\n\nconst buttonSelector = `button:not([type]), a[role=\"button\"], ${kButtonSubmitSelector}`;\n\nconst otpSelector = '[type=\"tel\"], [type=\"number\"], [type=\"text\"], input:not([type])';\n\nconst cacheContext = {};\n\nconst getVisibilityCache = (key) => {\n    var _a;\n    return (cacheContext[key] = (_a = cacheContext[key]) !== null && _a !== void 0 ? _a : new WeakMap());\n};\n\nconst clearVisibilityCache = () => Object.keys(cacheContext).forEach((key) => delete cacheContext[key]);\n\nconst withCache = (cacheMap) => (els, visible) => {\n    els.forEach((el) => cacheMap.set(el, visible));\n    return visible;\n};\n\nconst isVisible = (fnodeOrElement, options) => {\n    const element = utils.toDomElement(fnodeOrElement);\n    const seen = [element];\n    const cache = getVisibilityCache(JSON.stringify(options));\n    if (cache.has(element)) return cache.get(element);\n    const check = () => {\n        const elementWindow = utils.windowForElement(element);\n        const elementRect = element.getBoundingClientRect();\n        const elementStyle = elementWindow.getComputedStyle(element);\n        if (elementRect.width === 0 && elementRect.height === 0 && elementStyle.overflow !== 'hidden') return false;\n        if (elementStyle.visibility === 'hidden') return false;\n        if (elementRect.x + elementRect.width < 0 || elementRect.y + elementRect.height < 0) return false;\n        for (const ancestor of utils.ancestors(element)) {\n            if (ancestor === elementWindow.document.documentElement) continue;\n            if (cache === null || cache === void 0 ? void 0 : cache.has(ancestor)) {\n                const cachedVisible = cache.get(ancestor);\n                if (!cachedVisible) return false;\n                else continue;\n            }\n            const isElement = ancestor === element;\n            if (!isElement) seen.push(ancestor);\n            const style = isElement ? elementStyle : elementWindow.getComputedStyle(ancestor);\n            if (style.opacity === '0' && options.opacity) return false;\n            if (style.display === 'contents') continue;\n            const rect = isElement ? elementRect : ancestor.getBoundingClientRect();\n            if ((rect.width <= 1 || rect.height <= 1) && style.overflow === 'hidden') return false;\n            if (\n                style.position === 'fixed' &&\n                (rect.x >= elementWindow.innerWidth || rect.y >= elementWindow.innerHeight)\n            )\n                return false;\n        }\n        return true;\n    };\n    const visible = check();\n    return withCache(cache)(seen, visible);\n};\n\nconst quickVisibilityCheck = (el, options) => {\n    const cache = getVisibilityCache(JSON.stringify(options));\n    if (cache.has(el)) return cache.get(el);\n    const check = () => {\n        const rect = el.getClientRects();\n        if (rect.length === 0) return false;\n        const classList = Array.from(el.classList).map(sanitizeString);\n        if (any(matchHidden)(classList)) return false;\n        const { visibility, display, maxHeight } = getComputedStyle(el);\n        if (visibility === 'hidden' || display === 'none' || maxHeight === '0px') return false;\n        if (el.offsetHeight === 0 || el.offsetWidth === 0) return false;\n        if (el.offsetHeight < options.minHeight || el.offsetWidth < options.minWidth) return false;\n        return true;\n    };\n    return withCache(cache)([el], check());\n};\n\nconst isVisibleEl = (el) =>\n    quickVisibilityCheck(el, {\n        minHeight: 0,\n        minWidth: 0,\n    });\n\nconst isVisibleForm = (form) => {\n    if (\n        form.tagName !== 'FORM' &&\n        !isVisible(form, {\n            opacity: true,\n        })\n    )\n        return false;\n    const inputs = Array.from(form.querySelectorAll(inputCandidateSelector)).filter((field) => !field.disabled);\n    return (\n        inputs.length > 0 &&\n        inputs.some((input) =>\n            isVisible(input, {\n                opacity: false,\n            })\n        )\n    );\n};\n\nconst isVisibleField = (field) => {\n    if (field instanceof HTMLInputElement) {\n        const { type, disabled, readOnly } = field;\n        if (type === 'hidden' || disabled || readOnly || field.getAttribute('aria-hidden') === 'true') return false;\n    }\n    return quickVisibilityCheck(field, {\n        minHeight: MIN_FIELD_HEIGHT,\n        minWidth: MIN_FIELD_WIDTH,\n    });\n};\n\nconst closest = (start, match) => {\n    const parent = start.parentElement;\n    if (!parent) return null;\n    return match(parent) ? parent : closest(parent, match);\n};\n\nconst walkUpWhile = (start, maxIterations) => (check) => {\n    const parent = start.parentElement;\n    if (maxIterations === 0 || parent === null) return start;\n    return check(parent, start) ? walkUpWhile(parent, maxIterations - 1)(check) : start;\n};\n\nconst getNthParent = (el) => (n) => {\n    const parent = el.parentElement;\n    return parent === null || n === 0 ? el : getNthParent(parent)(n - 1);\n};\n\nconst uniqueNodes = (...nodes) => Array.from(new Set(nodes.flat()));\n\nconst getNodeRect = (el) => {\n    const { height, width, top, bottom } = el.getBoundingClientRect();\n    const area = height * width;\n    return {\n        height,\n        width,\n        top,\n        bottom,\n        area,\n    };\n};\n\nconst getSiblingWith = (el, match) => {\n    const prevEl = el.previousElementSibling;\n    if (prevEl === null) return null;\n    if (match(prevEl)) return prevEl;\n    return getSiblingWith(prevEl, match);\n};\n\nconst getLabelFor = (el) => {\n    var _a;\n    const forId = (_a = el.getAttribute('id')) !== null && _a !== void 0 ? _a : el.getAttribute('name');\n    const label = document.querySelector(`label[for=\"${forId}\"]`);\n    if (label) return label;\n    const closest = el.closest('label');\n    if (closest) return closest;\n    const siblingLabel = getSiblingWith(el, (sibling) => sibling.tagName === 'LABEL');\n    if (siblingLabel) return siblingLabel;\n    const parent = getNthParent(el)(2);\n    const parentLabels = parent.querySelectorAll('label');\n    if (parentLabels.length === 1) return parentLabels[0];\n    const textNodeAbove = getSiblingWith(el, (el) => el instanceof HTMLElement && el.innerText.trim().length > 0);\n    if (textNodeAbove) return textNodeAbove;\n    return null;\n};\n\nconst getRectCenter = (rect) => ({\n    x: rect.left + rect.width / 2,\n    y: rect.top + rect.height / 2,\n});\n\nconst getRectMinDistance = (rectA, rectB) => {\n    const centerA = getRectCenter(rectA);\n    const centerB = getRectCenter(rectB);\n    const dx = Math.abs(centerA.x - centerB.x) - (rectA.width + rectB.width) / 2;\n    const dy = Math.abs(centerA.y - centerB.y) - (rectA.height + rectB.height) / 2;\n    return {\n        dx,\n        dy,\n    };\n};\n\nconst pruneNested = (els) =>\n    els.reduce((acc, el) => {\n        for (let i = 0; i <= acc.length - 1; i++) {\n            if (acc[i] === el) continue;\n            if (acc[i].contains(el)) return acc;\n            if (el.contains(acc[i])) {\n                acc[i] = el;\n                return acc;\n            }\n        }\n        acc.push(el);\n        return acc;\n    }, []);\n\nconst getCommonAncestor = (elementA, elementB) => {\n    if (elementA === elementB) return elementA;\n    return elementA.contains(elementB)\n        ? elementA\n        : elementA.parentElement\n        ? getCommonAncestor(elementA.parentElement, elementB)\n        : elementA;\n};\n\nconst findStackedParent = (el, cache = [], maxIterations) => {\n    if (cache.some((group) => group.contains(el))) return null;\n    const parent = el.parentElement;\n    if (maxIterations === 0 || !parent) return null;\n    const computedStyle = getComputedStyle(parent);\n    const position = computedStyle.getPropertyValue('position');\n    if (position === 'fixed' || position === 'absolute') {\n        cache.push(parent);\n        return parent;\n    }\n    return findStackedParent(parent, cache, maxIterations - 1);\n};\n\nconst findStackedParents = (els, maxIterations) => {\n    const cache = [];\n    return els.map((input) => findStackedParent(input, cache, maxIterations)).filter((el) => Boolean(el));\n};\n\nconst isCluster = (el) => el.getAttribute(FORM_CLUSTER_ATTR) !== null;\n\nconst flagCluster = (el) => el.setAttribute(FORM_CLUSTER_ATTR, '');\n\nconst isIgnored = (el) => el.__PP_SKIP__ === true;\n\nconst getIgnoredParent = (el) => (el ? closest(el, isIgnored) : null);\n\nconst flagAsIgnored = (el) => (el.__PP_SKIP__ = true);\n\nconst removeIgnoredFlag = (el) => delete el.__PP_SKIP__;\n\nconst flagSubtreeAsIgnored = (el) => {\n    flagAsIgnored(el);\n    el.querySelectorAll(kFieldSelector).forEach(flagAsIgnored);\n};\n\nconst isProcessed = (el) => el.__PP_SEEN__ === true;\n\nconst flagAsProcessed = (el) => (el.__PP_SEEN__ = true);\n\nconst removeProcessedFlag = (el) => delete el.__PP_SEEN__;\n\nconst isPrediction = (el) => el.__PP_TYPE__ !== undefined;\n\nconst removePredictionFlag = (el) => delete el.__PP_TYPE__;\n\nconst getParentFormPrediction = (el) => (el ? closest(el, isPrediction) : null);\n\nconst setPrediction = (_el, type) => {\n    const el = _el;\n    const currentType = el.__PP_TYPE__;\n    el.__PP_TYPE__ = currentType ? Array.from(new Set(currentType.split(',').concat(type))).join(',') : type;\n};\n\nconst isPredictedType = (type) => (fnode) => {\n    const types = fnode.element.__PP_TYPE__;\n    return types ? types.split(',').includes(type) : false;\n};\n\nconst isClassifiable = (form) => !(isPrediction(form) || isIgnored(form));\n\nconst removeClassifierFlags = (el) => {\n    removeProcessedFlag(el);\n    removePredictionFlag(el);\n    removeIgnoredFlag(el);\n    el.querySelectorAll(kFieldSelector).forEach(removeClassifierFlags);\n};\n\nvar FormType;\n\n(function (FormType) {\n    FormType['LOGIN'] = 'login';\n    FormType['REGISTER'] = 'register';\n    FormType['PASSWORD_CHANGE'] = 'password-change';\n    FormType['RECOVERY'] = 'recovery';\n    FormType['MFA'] = 'mfa';\n    FormType['NOOP'] = 'noop';\n})(FormType || (FormType = {}));\n\nvar FieldType;\n\n(function (FieldType) {\n    FieldType['EMAIL'] = 'email';\n    FieldType['USERNAME'] = 'username';\n    FieldType['USERNAME_HIDDEN'] = 'username-hidden';\n    FieldType['PASSWORD_CURRENT'] = 'password';\n    FieldType['PASSWORD_NEW'] = 'new-password';\n    FieldType['OTP'] = 'otp';\n})(FieldType || (FieldType = {}));\n\nconst formTypes = Object.values(FormType);\n\nconst fieldTypes = Object.values(FieldType);\n\nconst TOLERANCE_LEVEL = 0.5;\n\nconst boolInt = (val) => Number(val);\n\nconst safeInt = (val, fallback = 0) => (Number.isFinite(val) ? val : fallback);\n\nconst throughEffect = (effect) => (fnode) => {\n    effect(fnode);\n    return fnode;\n};\n\nconst typeEffect = (type) =>\n    throughEffect((fnode) => {\n        flagAsProcessed(fnode.element);\n        setPrediction(fnode.element, type);\n    });\n\nconst processFormEffect = throughEffect((fnode) => flagAsProcessed(fnode.element));\n\nconst processFieldEffect = throughEffect((fnode) => {\n    const { visible, type } = fnode.noteFor('field');\n    if (visible || type === 'hidden') flagAsProcessed(fnode.element);\n});\n\nconst featureScore = (noteFor, key) =>\n    score((fnode) => {\n        const features = fnode.noteFor(noteFor);\n        if (Array.isArray(key)) return key.map((k) => features[k]).reduce((a, b) => a * b);\n        return features[key];\n    });\n\nconst getParentFormFnode = (fieldFnode) => {\n    const field = fieldFnode.element;\n    const ruleset = fieldFnode._ruleset;\n    const parentForms = ruleset.get(type('form'));\n    const form = parentForms.find(({ element }) => element.contains(field));\n    if (form) return form;\n    const preDetectedForm = getParentFormPrediction(field);\n    if (preDetectedForm) return ruleset.get(preDetectedForm);\n    return null;\n};\n\nconst belongsToType = (type) => (fnode) => fnode.scoreFor(type) > TOLERANCE_LEVEL;\n\nconst getFormTypeScore = (formFnode, type) => {\n    if (!formFnode) return 0;\n    if (isPredictedType(type)(formFnode)) return 1;\n    return formFnode === null || formFnode === void 0 ? void 0 : formFnode.scoreFor(type);\n};\n\nconst outRuleWithCache = (typeIn, typeOut) => [\n    rule(type(typeIn).when(isPredictedType(typeOut)), type(`${typeOut}-cache`), {}),\n    rule(type(`${typeOut}-cache`), type('cache'), {}),\n    rule(type(typeOut).when(belongsToType(typeOut)), type(`${typeOut}-result`), {}),\n    rule(type(`${typeOut}-cache`), type(`${typeOut}-result`), {}),\n    rule(type(`${typeOut}-result`), out(typeOut).through(typeEffect(typeOut)), {}),\n];\n\nconst combineFeatures = (arr1, arr2) => arr1.flatMap((item1) => arr2.map((item2) => [item1, item2]));\n\nconst withFnodeEl = (fn) => (fnode) => fn(fnode.element);\n\nconst getFormClassification = (formFnode) => {\n    const login = getFormTypeScore(formFnode, FormType.LOGIN) > 0.5;\n    const register = getFormTypeScore(formFnode, FormType.REGISTER) > 0.5;\n    const pwChange = getFormTypeScore(formFnode, FormType.PASSWORD_CHANGE) > 0.5;\n    const recovery = getFormTypeScore(formFnode, FormType.RECOVERY) > 0.5;\n    const mfa = getFormTypeScore(formFnode, FormType.MFA) > 0.5;\n    const detectionResults = [login, register, pwChange, recovery, mfa];\n    const noop = detectionResults.every((detected) => !detected);\n    return {\n        login,\n        register,\n        pwChange,\n        recovery,\n        mfa,\n        noop,\n    };\n};\n\nconst isNoopForm = (formFnode) => getFormClassification(formFnode).noop;\n\nconst getFormParent = (form) =>\n    walkUpWhile(form, MAX_FORM_FIELD_WALK_UP)((el) => el.querySelectorAll(formCandidateSelector).length <= 1);\n\nconst createInputIterator = (form) => {\n    const formEls = Array.from(form.querySelectorAll(inputCandidateSelector)).filter(isVisibleField);\n    return {\n        prev(input) {\n            var _a;\n            const idx = formEls.indexOf(input);\n            return idx === -1\n                ? null\n                : (_a = formEls === null || formEls === void 0 ? void 0 : formEls[idx - 1]) !== null && _a !== void 0\n                ? _a\n                : null;\n        },\n        next(input) {\n            var _a;\n            const idx = formEls.indexOf(input);\n            return idx === -1\n                ? null\n                : (_a = formEls === null || formEls === void 0 ? void 0 : formEls[idx + 1]) !== null && _a !== void 0\n                ? _a\n                : null;\n        },\n    };\n};\n\nconst selectFormCandidates = (root = document) => {\n    const candidates = Array.from(root.querySelectorAll(formCandidateSelector));\n    return candidates.filter((form) => !isIgnored(form));\n};\n\nconst TEXT_ATTRIBUTES = [\n    'title',\n    'aria-label',\n    'aria-labelledby',\n    'aria-describedby',\n    'placeholder',\n    'autocomplete',\n    'legend',\n];\n\nconst EL_ATTRIBUTES = [\n    'id',\n    'class',\n    'role',\n    'jsaction',\n    'ng-controller',\n    'data-bind',\n    'ng-model',\n    'v-model',\n    'v-bind',\n    'data-testid',\n    'href',\n];\n\nconst FORM_ATTRIBUTES = [EL_ATTRIBUTES, 'name', 'action'].flat();\n\nconst FIELD_ATTRIBUTES = [EL_ATTRIBUTES, 'name', 'inputmode'].flat();\n\nconst getAttributes = (attributes) => (el) =>\n    attributes\n        .filter((key) => key !== 'data-fathom')\n        .map((attr) => el.getAttribute(attr))\n        .filter(Boolean)\n        .map(sanitizeString);\n\nconst getBaseAttributes = getAttributes(EL_ATTRIBUTES);\n\nconst getTextAttributes = getAttributes(TEXT_ATTRIBUTES);\n\nconst getFieldAttributes = getAttributes(FIELD_ATTRIBUTES);\n\nconst getFormAttributes = getAttributes(FORM_ATTRIBUTES);\n\nconst getPageDescriptionText = (doc) => {\n    var _a;\n    const pageTitle = doc.title;\n    const metaDescription = doc.querySelector('meta[name=\"description\"]');\n    const descriptionContent =\n        (_a =\n            metaDescription === null || metaDescription === void 0\n                ? void 0\n                : metaDescription.getAttribute('content')) !== null && _a !== void 0\n            ? _a\n            : '';\n    return sanitizeString(`${pageTitle} ${descriptionContent}`);\n};\n\nconst getNodeText = (node) => {\n    const textAttrs = getTextAttributes(node).join('');\n    return sanitizeString(`${node.innerText}${textAttrs}`);\n};\n\nconst getNodeAttributes = (node) => sanitizeString(getBaseAttributes(node).join(''));\n\nconst getAllNodeHaystacks = (node) => [getNodeText(node), getNodeAttributes(node)];\n\nconst getFormText = (form) => {\n    const textAttrs = getTextAttributes(form).join('');\n    const fieldsets = Array.from(form.querySelectorAll('fieldset'));\n    return sanitizeString(\n        `${textAttrs}${fieldsets.reduce((text, fieldset) => text.concat(getTextAttributes(fieldset).join('')), '')}`\n    );\n};\n\nconst getFieldLabelText = (field) => {\n    const label = getLabelFor(field);\n    return label ? getNodeText(label) : '';\n};\n\nconst getFieldHaystacks = (field) => {\n    const isHiddenInput = field instanceof HTMLInputElement && field.type === 'hidden';\n    const checkLabel = field instanceof HTMLInputElement && ['text', 'email', 'tel', 'password'].includes(field.type);\n    const fieldAttrs = getFieldAttributes(field);\n    const fieldText = isHiddenInput ? '' : getNodeText(field);\n    const labelText = checkLabel && !isHiddenInput ? getFieldLabelText(field) : '';\n    return {\n        fieldAttrs,\n        fieldText,\n        labelText,\n    };\n};\n\nconst getAllFieldHaystacks = (field) => {\n    const { fieldAttrs, fieldText, labelText } = getFieldHaystacks(field);\n    return [fieldText, labelText, ...fieldAttrs];\n};\n\nconst getNearestHeadingsText = (el) => {\n    var _a, _b;\n    const originRect = el.getBoundingClientRect();\n    const parent = walkUpWhile(\n        el,\n        MAX_FORM_HEADING_WALK_UP\n    )((parentEl, candidate) => {\n        if (parentEl === document.body) return false;\n        if (candidate.matches(kDomGroupSelector)) return false;\n        return true;\n    });\n    const headings = Array.from(parent.querySelectorAll(kHeadingSelector)).filter((heading) => {\n        if (el.contains(heading)) return true;\n        const headingRect = heading.getBoundingClientRect();\n        const { dx, dy } = getRectMinDistance(originRect, headingRect);\n        return dx < MAX_HEADING_HORIZONTAL_DIST && dy < MAX_HEADING_VERTICAL_DIST;\n    });\n    const textAbove =\n        (_b =\n            (_a =\n                headings.length === 0\n                    ? getSiblingWith(el, (el) => el instanceof HTMLElement && el.innerText.trim().length > 0)\n                    : null) === null || _a === void 0\n                ? void 0\n                : _a.innerText) !== null && _b !== void 0\n            ? _b\n            : '';\n    return sanitizeString(textAbove + headings.map((el) => el.innerText).join(''));\n};\n\nconst isActiveFieldFNode = (fnode) => {\n    const { visible, readonly, disabled } = fnode.noteFor('field');\n    return visible && !readonly && !disabled;\n};\n\nconst splitFieldsByVisibility = (els) =>\n    els.reduce(\n        (acc, el) => {\n            if (isVisibleField(el)) acc[0].push(el);\n            else acc[1].push(el);\n            return acc;\n        },\n        [[], []]\n    );\n\nconst fType = (fnode, types) => types.includes(fnode.element.type);\n\nconst fMatch = (fnode, selector) => fnode.element.matches(selector);\n\nconst fMode = (fnode, inputMode) => fnode.element.inputMode === inputMode;\n\nconst fActive = (fn) => (fnode) => fn(fnode) && isActiveFieldFNode(fnode);\n\nconst maybeEmail = fActive((fnode) => fType(fnode, ['email', 'text']) || fMode(fnode, 'email'));\n\nconst maybePassword = fActive((fnode) => fMatch(fnode, kPasswordSelector));\n\nconst maybeOTP = fActive((fnode) => fMatch(fnode, otpSelector));\n\nconst maybeUsername = fActive(\n    (fnode) => (!fMode(fnode, 'email') && fType(fnode, ['text', 'tel'])) || fMatch(fnode, kUsernameSelector)\n);\n\nconst maybeHiddenUsername = (fnode) => fType(fnode, ['email', 'text', 'hidden']) && !isActiveFieldFNode(fnode);\n\nconst isUsernameCandidate = (el) => !el.matches('input[type=\"email\"]') && any(matchUsername)(getAllFieldHaystacks(el));\n\nconst isEmailCandidate = (el) => el.matches('input[type=\"email\"]') || any(matchEmail)(getAllFieldHaystacks(el));\n\nconst isOAuthCandidate = (el) => any(matchOAuth)(getAllFieldHaystacks(el));\n\nconst isSubmitBtnCandidate = (btn) => {\n    if (btn.getAttribute('type') === 'submit') return true;\n    if (btn.innerText.trim().length <= 1) return false;\n    const height = btn.offsetHeight;\n    const width = btn.offsetWidth;\n    return height * width > MIN_AREA_SUBMIT_BTN;\n};\n\nconst isProcessableField = (input) =>\n    !isProcessed(input) &&\n    isVisibleField(input) &&\n    isVisible(input, {\n        opacity: false,\n    });\n\nconst isClassifiableField = (fnode) => isClassifiable(fnode.element) && getParentFormFnode(fnode) !== null;\n\nconst selectInputCandidates = (target = document) =>\n    Array.from(target.querySelectorAll(inputCandidateSelector)).filter(isClassifiable);\n\nconst { linearScale: linearScale$1 } = utils;\n\nconst getFormFeatures = (fnode) => {\n    const form = fnode.element;\n    const parent = getFormParent(form);\n    const fields = Array.from(form.querySelectorAll(kFieldSelector));\n    const visibleFields = fields.filter(isVisibleField);\n    const doc = form.ownerDocument;\n    const inputs = fields.filter((el) => el.matches('input:not([type=\"submit\"])'));\n    const visibleInputs = visibleFields.filter((el) => el.matches('input:not([type=\"submit\"])'));\n    const fieldsets = form.querySelectorAll('fieldset');\n    const textareas = visibleFields.filter((el) => el.matches('textarea'));\n    const selects = visibleFields.filter((el, idx, fields) => {\n        var _a;\n        return (\n            el.matches('select') &&\n            ((_a = fields === null || fields === void 0 ? void 0 : fields[idx + 1]) === null || _a === void 0\n                ? void 0\n                : _a.type) !== 'tel'\n        );\n    });\n    const optionsCount = selects.reduce((total, el) => total + el.querySelectorAll('option').length, 0);\n    const submits = visibleFields.filter((el) => el.matches('[type=\"submit\"]'));\n    const hidden = inputs.filter((el) => el.matches('[type=\"hidden\"]'));\n    const texts = visibleInputs.filter((el) => el.matches('[type=\"text\"]'));\n    const usernames = inputs.filter(isUsernameCandidate);\n    const emails = inputs.filter(isEmailCandidate);\n    const tels = inputs.filter((el) => el.matches('[type=\"tel\"]'));\n    const pws = inputs.filter((el) => el.matches(kPasswordSelector));\n    const [identifiers, hiddenIdentifiers] = splitFieldsByVisibility(uniqueNodes(usernames, emails, tels));\n    const [passwords, hiddenPasswords] = splitFieldsByVisibility(pws);\n    const radios = visibleInputs.filter((el) => el.matches('[type=\"radio\"]'));\n    const checkboxes = visibleInputs.filter((el) => el.matches('[type=\"checkbox\"]'));\n    const numbers = visibleInputs.filter((el) => el.matches('[type=\"number\"]'));\n    const dates = visibleInputs.filter((el) => el.matches('[type=\"date\"]'));\n    const files = visibleInputs.filter((el) => el.matches('[type=\"file\"]'));\n    const mfas = tels.concat(numbers).concat(texts);\n    const required = visibleInputs.filter((el) => el.matches('[required]'));\n    const patterns = visibleInputs.filter((el) => el.matches('[pattern]'));\n    const minMaxLengths = visibleInputs.filter((el) => el.matches('[minLength], [maxLength]'));\n    const autofocused = visibleInputs.find((el) => el.matches('input[autofocus]:first-of-type'));\n    const captchas = parent.querySelectorAll(kCaptchaSelector);\n    const socialEls = Array.from(parent.querySelectorAll(kSocialSelector));\n    const btns = Array.from(form.querySelectorAll(buttonSelector));\n    const submitBtns = btns.filter(isSubmitBtnCandidate);\n    const btnCandidates = submits.concat(submitBtns);\n    const anchors = Array.from(form.querySelectorAll(kAnchorLinkSelector)).filter(isVisibleEl);\n    const oauths = socialEls.concat(submitBtns).filter(isOAuthCandidate);\n    const layouts = Array.from(form.querySelectorAll(kLayoutSelector));\n    const autofocusedIsIdentifier = Boolean(autofocused && identifiers.includes(autofocused));\n    const autofocusedIsPassword = Boolean(autofocused && passwords.includes(autofocused));\n    const pageDescriptionText = getPageDescriptionText(doc);\n    const nearestHeadingsText = getNearestHeadingsText(form);\n    const formTextAttrText = getFormText(form);\n    const formAttributes = getFormAttributes(form);\n    const pwHaystack = pws.flatMap(getAllFieldHaystacks);\n    const identifierHaystack = identifiers.flatMap(getAllFieldHaystacks);\n    const submitBtnHaystack = btnCandidates.flatMap(getAllFieldHaystacks);\n    const checkboxesHaystack = checkboxes.flatMap(getAllFieldHaystacks);\n    const anchorsHaystack = anchors.flatMap(getAllNodeHaystacks);\n    const mfaInputsHaystack = mfas.flatMap(getAllFieldHaystacks);\n    const layoutHaystack = layouts.map(getNodeAttributes);\n    const outlierHaystack = [formTextAttrText, formTextAttrText, nearestHeadingsText];\n    const pageLogin = matchLogin(pageDescriptionText);\n    const formTextLogin = matchLogin(formTextAttrText);\n    const formAttrsLogin = any(matchLogin)(formAttributes);\n    const headingsLogin = matchLogin(nearestHeadingsText);\n    const layoutLogin = any(matchLogin)(layoutHaystack);\n    const rememberMeCheckbox = any(matchRememberMe)(checkboxesHaystack);\n    const submitLogin = any(matchLogin)(submitBtnHaystack);\n    const troubleLink = any(matchTrouble)(anchorsHaystack);\n    const pageRegister = matchRegister(pageDescriptionText);\n    const formTextRegister = matchRegister(formTextAttrText);\n    const formAttrsRegister = any(matchRegister)(formAttributes);\n    const headingsRegister = matchRegister(nearestHeadingsText);\n    const layoutRegister = any(matchRegister)(layoutHaystack);\n    const TOSRef = any(matchTOS)(checkboxesHaystack.concat(anchorsHaystack));\n    const submitRegister = any(matchRegister)(submitBtnHaystack);\n    const pwNewRegister = any(matchPasswordCreateAttr)(pwHaystack);\n    const pwConfirmRegister = any(matchPasswordConfirmAttr)(pwHaystack);\n    const pagePwReset = matchPasswordReset(pageDescriptionText);\n    const formTextPwReset = matchPasswordReset(formTextAttrText);\n    const formAttrsPwReset = any(matchPasswordResetAttr)(formAttributes);\n    const headingsPwReset = matchPasswordReset(nearestHeadingsText);\n    const layoutPwReset = any(matchPasswordResetAttr)(layoutHaystack);\n    const pageRecovery = matchRecovery(pageDescriptionText);\n    const formTextRecovery = matchRecovery(formTextAttrText);\n    const formAttrsRecovery = any(matchRecovery)(formAttributes);\n    const headingsRecovery = matchRecovery(nearestHeadingsText);\n    const layoutRecovery = any(matchRecovery)(layoutHaystack);\n    const submitRecovery = any(matchRecovery)(submitBtnHaystack);\n    const identifierRecovery = any(matchRecovery)(identifierHaystack);\n    const formTextMFA = matchMfa(formTextAttrText);\n    const formAttrsMFA = any(matchMfaAttr)(formAttributes);\n    const headingsMFA = matchMfa(nearestHeadingsText);\n    const layoutMFA = any(matchMfa)(layoutHaystack);\n    const buttonVerify = any(matchMfaAction)(submitBtnHaystack);\n    const inputsMFA = any(matchMfaAttr)(mfaInputsHaystack);\n    const inputsOTP = any(matchOtpAttr)(mfaInputsHaystack);\n    const linkOTPOutlier = any(matchOtpOutlier)(anchorsHaystack.concat(submitBtnHaystack));\n    const newsletterForm = any(matchNewsletter)(outlierHaystack);\n    const searchForm = any(matchSearchAction)(outlierHaystack);\n    const buttonMultiStep = any(matchStepAction)(submitBtnHaystack);\n    const headingsMultiStep = matchMultiStep(nearestHeadingsText);\n    return {\n        fieldsCount: linearScale$1(visibleFields.length, 1, 5),\n        inputCount: linearScale$1(visibleInputs.length, 1, 5),\n        fieldsetCount: linearScale$1(fieldsets.length, 1, 5),\n        textCount: linearScale$1(texts.length, 0, 3),\n        textareaCount: linearScale$1(textareas.length, 0, 2),\n        selectCount: linearScale$1(selects.length, 0, 2),\n        optionsCount: linearScale$1(optionsCount, 0, 5),\n        checkboxCount: linearScale$1(checkboxes.length, 0, 2),\n        radioCount: linearScale$1(radios.length, 0, 5),\n        identifierCount: linearScale$1(identifiers.length, 0, 2),\n        hiddenIdentifierCount: linearScale$1(hiddenIdentifiers.length, 0, 2),\n        hiddenCount: linearScale$1(hidden.length, 0, 5),\n        passwordCount: linearScale$1(passwords.length, 0, 2),\n        hiddenPasswordCount: linearScale$1(hiddenPasswords.length, 0, 2),\n        usernameCount: linearScale$1(usernames.length, 0, 2),\n        emailCount: linearScale$1(emails.length, 0, 2),\n        submitCount: linearScale$1(submits.length, 0, 2),\n        hasTels: boolInt(tels.length > 0),\n        hasOAuth: boolInt(oauths.length > 0),\n        hasCaptchas: boolInt(captchas.length > 0),\n        hasFiles: boolInt(files.length > 0),\n        hasDate: boolInt(dates.length > 0),\n        hasNumber: boolInt(numbers.length > 0),\n        oneVisibleField: boolInt(visibleInputs.length === 1),\n        twoVisibleFields: boolInt(visibleInputs.length === 2),\n        threeOrMoreVisibleFields: boolInt(visibleInputs.length >= 3),\n        noPasswords: boolInt(passwords.length === 0),\n        onePassword: boolInt(passwords.length === 1),\n        twoPasswords: boolInt(passwords.length === 2),\n        threeOrMorePasswords: boolInt(passwords.length >= 3),\n        noIdentifiers: boolInt(identifiers.length === 0),\n        oneIdentifier: boolInt(identifiers.length === 1),\n        twoIdentifiers: boolInt(identifiers.length === 2),\n        threeOrMoreIdentifiers: boolInt(identifiers.length >= 3),\n        autofocusedIsIdentifier: boolInt(autofocusedIsIdentifier),\n        autofocusedIsPassword: boolInt(autofocusedIsPassword),\n        inputRatio: safeInt(inputs.length / fields.length),\n        hiddenRatio: safeInt(hidden.length / fields.length),\n        visibleRatio: safeInt(visibleInputs.length / fields.length),\n        identifierRatio: safeInt(identifiers.length / visibleFields.length),\n        emailRatio: safeInt(emails.length / visibleFields.length),\n        usernameRatio: safeInt(usernames.length / visibleFields.length),\n        passwordRatio: safeInt(passwords.length / visibleFields.length),\n        checkboxRatio: safeInt(checkboxes.length / visibleFields.length),\n        requiredRatio: safeInt(required.length / visibleFields.length),\n        patternRatio: safeInt(patterns.length / visibleFields.length),\n        minMaxLengthRatio: safeInt(minMaxLengths.length / visibleFields.length),\n        pageLogin: boolInt(pageLogin),\n        formTextLogin: boolInt(formTextLogin),\n        formAttrsLogin: boolInt(formAttrsLogin),\n        headingsLogin: boolInt(headingsLogin),\n        layoutLogin: boolInt(layoutLogin),\n        rememberMeCheckbox: boolInt(rememberMeCheckbox),\n        troubleLink: boolInt(troubleLink),\n        submitLogin: boolInt(submitLogin),\n        pageRegister: boolInt(pageRegister),\n        formTextRegister: boolInt(formTextRegister),\n        formAttrsRegister: boolInt(formAttrsRegister),\n        headingsRegister: boolInt(headingsRegister),\n        layoutRegister: boolInt(layoutRegister),\n        pwNewRegister: boolInt(pwNewRegister),\n        pwConfirmRegister: boolInt(pwConfirmRegister),\n        submitRegister: boolInt(submitRegister),\n        TOSRef: boolInt(TOSRef),\n        pagePwReset: boolInt(pagePwReset),\n        formTextPwReset: boolInt(formTextPwReset),\n        formAttrsPwReset: boolInt(formAttrsPwReset),\n        headingsPwReset: boolInt(headingsPwReset),\n        layoutPwReset: boolInt(layoutPwReset),\n        pageRecovery: boolInt(pageRecovery),\n        formTextRecovery: boolInt(formTextRecovery),\n        formAttrsRecovery: boolInt(formAttrsRecovery),\n        headingsRecovery: boolInt(headingsRecovery),\n        layoutRecovery: boolInt(layoutRecovery),\n        identifierRecovery: boolInt(identifierRecovery),\n        submitRecovery: boolInt(submitRecovery),\n        formTextMFA: boolInt(formTextMFA),\n        formAttrsMFA: boolInt(formAttrsMFA),\n        headingsMFA: boolInt(headingsMFA),\n        layoutMFA: boolInt(layoutMFA),\n        buttonVerify: boolInt(buttonVerify),\n        inputsMFA: boolInt(inputsMFA),\n        inputsOTP: boolInt(inputsOTP),\n        linkOTPOutlier: boolInt(linkOTPOutlier),\n        newsletterForm: boolInt(newsletterForm),\n        searchForm: boolInt(searchForm),\n        multiStepForm: boolInt(buttonMultiStep || headingsMultiStep),\n        multiAuthForm: boolInt(submitRegister && submitLogin),\n        formInputIterator: createInputIterator(form),\n    };\n};\n\nconst FORM_FEATURES = [\n    'fieldsCount',\n    'inputCount',\n    'fieldsetCount',\n    'textCount',\n    'textareaCount',\n    'selectCount',\n    'optionsCount',\n    'radioCount',\n    'identifierCount',\n    'hiddenIdentifierCount',\n    'usernameCount',\n    'emailCount',\n    'hiddenCount',\n    'hiddenPasswordCount',\n    'submitCount',\n    'hasTels',\n    'hasOAuth',\n    'hasCaptchas',\n    'hasFiles',\n    'hasDate',\n    'hasNumber',\n    'oneVisibleField',\n    'twoVisibleFields',\n    'threeOrMoreVisibleFields',\n    'noPasswords',\n    'onePassword',\n    'twoPasswords',\n    'threeOrMorePasswords',\n    'noIdentifiers',\n    'oneIdentifier',\n    'twoIdentifiers',\n    'threeOrMoreIdentifiers',\n    'autofocusedIsIdentifier',\n    'autofocusedIsPassword',\n    'visibleRatio',\n    'inputRatio',\n    'hiddenRatio',\n    'identifierRatio',\n    'emailRatio',\n    'usernameRatio',\n    'passwordRatio',\n    'requiredRatio',\n    'checkboxRatio',\n    'pageLogin',\n    'formTextLogin',\n    'formAttrsLogin',\n    'headingsLogin',\n    'layoutLogin',\n    'rememberMeCheckbox',\n    'troubleLink',\n    'submitLogin',\n    'pageRegister',\n    'formTextRegister',\n    'formAttrsRegister',\n    'headingsRegister',\n    'layoutRegister',\n    'pwNewRegister',\n    'pwConfirmRegister',\n    'submitRegister',\n    'TOSRef',\n    'pagePwReset',\n    'formTextPwReset',\n    'formAttrsPwReset',\n    'headingsPwReset',\n    'layoutPwReset',\n    'pageRecovery',\n    'formTextRecovery',\n    'formAttrsRecovery',\n    'headingsRecovery',\n    'layoutRecovery',\n    'identifierRecovery',\n    'submitRecovery',\n    'formTextMFA',\n    'formAttrsMFA',\n    'headingsMFA',\n    'layoutMFA',\n    'buttonVerify',\n    'inputsMFA',\n    'inputsOTP',\n    'linkOTPOutlier',\n    'newsletterForm',\n    'searchForm',\n    'multiStepForm',\n    'multiAuthForm',\n];\n\nconst results$a = {\n    coeffs: [\n        ['login-fieldsCount', 9.260546684265137],\n        ['login-inputCount', 3.3868980407714844],\n        ['login-fieldsetCount', -10.234439849853516],\n        ['login-textCount', 1.1708984375],\n        ['login-textareaCount', -6.201153755187988],\n        ['login-selectCount', -6.244014263153076],\n        ['login-optionsCount', -6.176764011383057],\n        ['login-radioCount', -5.9987874031066895],\n        ['login-identifierCount', -2.961151123046875],\n        ['login-hiddenIdentifierCount', 10.851139068603516],\n        ['login-usernameCount', 9.447742462158203],\n        ['login-emailCount', -8.629166603088379],\n        ['login-hiddenCount', 16.093061447143555],\n        ['login-hiddenPasswordCount', 18.617231369018555],\n        ['login-submitCount', -3.068704843521118],\n        ['login-hasTels', -5.7915825843811035],\n        ['login-hasOAuth', 5.8498687744140625],\n        ['login-hasCaptchas', -2.090794801712036],\n        ['login-hasFiles', -6.0167555809021],\n        ['login-hasDate', -10.732929229736328],\n        ['login-hasNumber', -5.980225563049316],\n        ['login-oneVisibleField', 9.622528076171875],\n        ['login-twoVisibleFields', 5.231987476348877],\n        ['login-threeOrMoreVisibleFields', -10.353397369384766],\n        ['login-noPasswords', -18.85025978088379],\n        ['login-onePassword', 12.314238548278809],\n        ['login-twoPasswords', -14.515039443969727],\n        ['login-threeOrMorePasswords', -6.0650835037231445],\n        ['login-noIdentifiers', -12.99234390258789],\n        ['login-oneIdentifier', -2.68302583694458],\n        ['login-twoIdentifiers', -1.3880155086517334],\n        ['login-threeOrMoreIdentifiers', -7.5584797859191895],\n        ['login-autofocusedIsIdentifier', 11.91942024230957],\n        ['login-autofocusedIsPassword', 37.33961486816406],\n        ['login-visibleRatio', 2.911050796508789],\n        ['login-inputRatio', 3.799626588821411],\n        ['login-hiddenRatio', -24.132291793823242],\n        ['login-identifierRatio', 15.340856552124023],\n        ['login-emailRatio', -2.0597195625305176],\n        ['login-usernameRatio', -21.554241180419922],\n        ['login-passwordRatio', -6.707980632781982],\n        ['login-requiredRatio', 2.429833173751831],\n        ['login-checkboxRatio', 34.79150390625],\n        ['login-pageLogin', 14.611160278320312],\n        ['login-formTextLogin', 8.536316871643066],\n        ['login-formAttrsLogin', 4.859513759613037],\n        ['login-headingsLogin', 16.488920211791992],\n        ['login-layoutLogin', 4.245265483856201],\n        ['login-rememberMeCheckbox', 8.000603675842285],\n        ['login-troubleLink', 20.40095329284668],\n        ['login-submitLogin', 11.593767166137695],\n        ['login-pageRegister', -12.783998489379883],\n        ['login-formTextRegister', 0.052930302917957306],\n        ['login-formAttrsRegister', -15.765278816223145],\n        ['login-headingsRegister', -13.759665489196777],\n        ['login-layoutRegister', -2.7408759593963623],\n        ['login-pwNewRegister', -24.914588928222656],\n        ['login-pwConfirmRegister', -19.122373580932617],\n        ['login-submitRegister', -17.61235809326172],\n        ['login-TOSRef', 2.7695138454437256],\n        ['login-pagePwReset', -6.1394853591918945],\n        ['login-formTextPwReset', -6.047491550445557],\n        ['login-formAttrsPwReset', -7.93905782699585],\n        ['login-headingsPwReset', -11.728208541870117],\n        ['login-layoutPwReset', 1.9481669664382935],\n        ['login-pageRecovery', -2.3499460220336914],\n        ['login-formTextRecovery', -0.05300094932317734],\n        ['login-formAttrsRecovery', -40.93749237060547],\n        ['login-headingsRecovery', -4.877048015594482],\n        ['login-layoutRecovery', -0.7296434044837952],\n        ['login-identifierRecovery', 0.871780276298523],\n        ['login-submitRecovery', -8.45190715789795],\n        ['login-formTextMFA', -0.018208570778369904],\n        ['login-formAttrsMFA', -28.500751495361328],\n        ['login-headingsMFA', -18.91704559326172],\n        ['login-layoutMFA', -4.592078685760498],\n        ['login-buttonVerify', -6.714724540710449],\n        ['login-inputsMFA', -20.373138427734375],\n        ['login-inputsOTP', -30.870197296142578],\n        ['login-linkOTPOutlier', -4.563948631286621],\n        ['login-newsletterForm', -8.15023422241211],\n        ['login-searchForm', -7.200606346130371],\n        ['login-multiStepForm', 3.7781412601470947],\n        ['login-multiAuthForm', 13.921825408935547],\n        ['login-visibleRatio,fieldsCount', -5.210275173187256],\n        ['login-visibleRatio,identifierCount', -15.320694923400879],\n        ['login-visibleRatio,passwordCount', 10.74003791809082],\n        ['login-visibleRatio,hiddenIdentifierCount', -15.647726058959961],\n        ['login-visibleRatio,hiddenPasswordCount', 36.91423034667969],\n        ['login-identifierRatio,fieldsCount', -27.68492889404297],\n        ['login-identifierRatio,identifierCount', 15.424700736999512],\n        ['login-identifierRatio,passwordCount', -13.829729080200195],\n        ['login-identifierRatio,hiddenIdentifierCount', 4.846118927001953],\n        ['login-identifierRatio,hiddenPasswordCount', -10.7938871383667],\n        ['login-passwordRatio,fieldsCount', 9.243396759033203],\n        ['login-passwordRatio,identifierCount', -13.610177040100098],\n        ['login-passwordRatio,passwordCount', -9.334450721740723],\n        ['login-passwordRatio,hiddenIdentifierCount', 32.88718795776367],\n        ['login-passwordRatio,hiddenPasswordCount', 1.4116586446762085],\n        ['login-requiredRatio,fieldsCount', 12.827005386352539],\n        ['login-requiredRatio,identifierCount', -20.5583438873291],\n        ['login-requiredRatio,passwordCount', 16.311241149902344],\n        ['login-requiredRatio,hiddenIdentifierCount', -29.923545837402344],\n        ['login-requiredRatio,hiddenPasswordCount', 18.124889373779297],\n    ],\n    bias: -6.3730974197387695,\n    cutoff: 0.48,\n};\n\nconst FORM_COMBINED_FEATURES = [\n    ...FORM_FEATURES,\n    ...combineFeatures(\n        ['visibleRatio', 'identifierRatio', 'passwordRatio', 'requiredRatio'],\n        ['fieldsCount', 'identifierCount', 'passwordCount', 'hiddenIdentifierCount', 'hiddenPasswordCount']\n    ),\n];\n\nconst login = {\n    name: FormType.LOGIN,\n    coeffs: FORM_COMBINED_FEATURES.map((feat) => {\n        var _a, _b;\n        return [\n            `login-${feat}`,\n            (_b =\n                (_a = results$a.coeffs.find(([feature]) => feature === `login-${feat}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$a.bias,\n    cutoff: results$a.cutoff,\n    getRules: () => [\n        rule(type('form'), type(FormType.LOGIN), {}),\n        ...FORM_COMBINED_FEATURES.map((feat) =>\n            rule(type(FormType.LOGIN), featureScore('form', feat), {\n                name: `login-${feat}`,\n            })\n        ),\n        ...outRuleWithCache('form-candidate', FormType.LOGIN),\n    ],\n};\n\nconst results$9 = {\n    coeffs: [\n        ['pw-change-fieldsCount', -2.849605083465576],\n        ['pw-change-inputCount', -2.549915075302124],\n        ['pw-change-fieldsetCount', -6.059319972991943],\n        ['pw-change-textCount', -6.019736289978027],\n        ['pw-change-textareaCount', -6.081956386566162],\n        ['pw-change-selectCount', -6.053798198699951],\n        ['pw-change-optionsCount', -6.029593467712402],\n        ['pw-change-radioCount', -6.043890476226807],\n        ['pw-change-identifierCount', -5.4684624671936035],\n        ['pw-change-hiddenIdentifierCount', -3.339617967605591],\n        ['pw-change-usernameCount', -6.082462787628174],\n        ['pw-change-emailCount', -4.619750022888184],\n        ['pw-change-hiddenCount', -4.060936450958252],\n        ['pw-change-hiddenPasswordCount', -6.034674167633057],\n        ['pw-change-submitCount', -3.7810566425323486],\n        ['pw-change-hasTels', -6.03959846496582],\n        ['pw-change-hasOAuth', -6.034022331237793],\n        ['pw-change-hasCaptchas', -6.09065580368042],\n        ['pw-change-hasFiles', -6.076785087585449],\n        ['pw-change-hasDate', -5.976832866668701],\n        ['pw-change-hasNumber', -5.990964889526367],\n        ['pw-change-oneVisibleField', -6.082982540130615],\n        ['pw-change-twoVisibleFields', -3.199659824371338],\n        ['pw-change-threeOrMoreVisibleFields', -0.9176915287971497],\n        ['pw-change-noPasswords', -6.018117427825928],\n        ['pw-change-onePassword', -6.01702880859375],\n        ['pw-change-twoPasswords', 9.116572380065918],\n        ['pw-change-threeOrMorePasswords', 22.571439743041992],\n        ['pw-change-noIdentifiers', -1.1158397197723389],\n        ['pw-change-oneIdentifier', -6.076854705810547],\n        ['pw-change-twoIdentifiers', -6.0351338386535645],\n        ['pw-change-threeOrMoreIdentifiers', 4.4391937255859375],\n        ['pw-change-autofocusedIsIdentifier', -6.042590141296387],\n        ['pw-change-autofocusedIsPassword', 19.56791877746582],\n        ['pw-change-visibleRatio', -3.86659574508667],\n        ['pw-change-inputRatio', -3.968968629837036],\n        ['pw-change-hiddenRatio', -4.739645957946777],\n        ['pw-change-identifierRatio', -5.768206596374512],\n        ['pw-change-emailRatio', -5.145118236541748],\n        ['pw-change-usernameRatio', -5.927550792694092],\n        ['pw-change-passwordRatio', 2.23026967048645],\n        ['pw-change-requiredRatio', -4.440613269805908],\n        ['pw-change-checkboxRatio', -5.908611297607422],\n        ['pw-change-pageLogin', -6.451207637786865],\n        ['pw-change-formTextLogin', -5.944624900817871],\n        ['pw-change-formAttrsLogin', -6.078995704650879],\n        ['pw-change-headingsLogin', -6.092985153198242],\n        ['pw-change-layoutLogin', -6.022044658660889],\n        ['pw-change-rememberMeCheckbox', -5.911662578582764],\n        ['pw-change-troubleLink', -3.6543996334075928],\n        ['pw-change-submitLogin', -5.971057891845703],\n        ['pw-change-pageRegister', -5.91569709777832],\n        ['pw-change-formTextRegister', 0.041428856551647186],\n        ['pw-change-formAttrsRegister', -5.969199180603027],\n        ['pw-change-headingsRegister', -6.03828239440918],\n        ['pw-change-layoutRegister', -5.976802349090576],\n        ['pw-change-pwNewRegister', 11.097345352172852],\n        ['pw-change-pwConfirmRegister', 8.048815727233887],\n        ['pw-change-submitRegister', -7.195167541503906],\n        ['pw-change-TOSRef', -6.861124038696289],\n        ['pw-change-pagePwReset', 15.718603134155273],\n        ['pw-change-formTextPwReset', 23.176179885864258],\n        ['pw-change-formAttrsPwReset', 2.7543129920959473],\n        ['pw-change-headingsPwReset', 17.890968322753906],\n        ['pw-change-layoutPwReset', 17.851831436157227],\n        ['pw-change-pageRecovery', -6.0303263664245605],\n        ['pw-change-formTextRecovery', -0.03785283863544464],\n        ['pw-change-formAttrsRecovery', -6.054781913757324],\n        ['pw-change-headingsRecovery', -5.961613655090332],\n        ['pw-change-layoutRecovery', -3.806657314300537],\n        ['pw-change-identifierRecovery', -6.013106346130371],\n        ['pw-change-submitRecovery', 0.5705376863479614],\n        ['pw-change-formTextMFA', 0.04786650091409683],\n        ['pw-change-formAttrsMFA', -6.017983436584473],\n        ['pw-change-headingsMFA', -6.015376091003418],\n        ['pw-change-layoutMFA', -6.080138206481934],\n        ['pw-change-buttonVerify', -6.1084184646606445],\n        ['pw-change-inputsMFA', -5.995019435882568],\n        ['pw-change-inputsOTP', -5.977421283721924],\n        ['pw-change-linkOTPOutlier', -5.954542636871338],\n        ['pw-change-newsletterForm', -5.9653801918029785],\n        ['pw-change-searchForm', -6.086610317230225],\n        ['pw-change-multiStepForm', -5.942900657653809],\n        ['pw-change-multiAuthForm', -6.06475830078125],\n        ['pw-change-visibleRatio,fieldsCount', -2.5807697772979736],\n        ['pw-change-visibleRatio,identifierCount', -5.702645301818848],\n        ['pw-change-visibleRatio,passwordCount', 2.6345810890197754],\n        ['pw-change-visibleRatio,hiddenIdentifierCount', -2.1961960792541504],\n        ['pw-change-visibleRatio,hiddenPasswordCount', -6.049030303955078],\n        ['pw-change-identifierRatio,fieldsCount', -4.411734104156494],\n        ['pw-change-identifierRatio,identifierCount', -5.406412601470947],\n        ['pw-change-identifierRatio,passwordCount', -4.3397345542907715],\n        ['pw-change-identifierRatio,hiddenIdentifierCount', -6.10110330581665],\n        ['pw-change-identifierRatio,hiddenPasswordCount', -5.99431848526001],\n        ['pw-change-passwordRatio,fieldsCount', 4.848816871643066],\n        ['pw-change-passwordRatio,identifierCount', -4.359196662902832],\n        ['pw-change-passwordRatio,passwordCount', 7.522293567657471],\n        ['pw-change-passwordRatio,hiddenIdentifierCount', 0.12668076157569885],\n        ['pw-change-passwordRatio,hiddenPasswordCount', -6.0297160148620605],\n        ['pw-change-requiredRatio,fieldsCount', -4.642848014831543],\n        ['pw-change-requiredRatio,identifierCount', -5.928743839263916],\n        ['pw-change-requiredRatio,passwordCount', -0.5462040901184082],\n        ['pw-change-requiredRatio,hiddenIdentifierCount', 2.8457155227661133],\n        ['pw-change-requiredRatio,hiddenPasswordCount', -6.076464653015137],\n    ],\n    bias: -4.067059516906738,\n    cutoff: 1,\n};\n\nconst passwordChange = {\n    name: FormType.PASSWORD_CHANGE,\n    coeffs: FORM_COMBINED_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `pw-change-${key}`,\n            (_b =\n                (_a = results$9.coeffs.find(([feature]) => feature === `pw-change-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$9.bias,\n    cutoff: results$9.cutoff,\n    getRules: () => [\n        rule(type('form'), type(FormType.PASSWORD_CHANGE), {}),\n        ...FORM_COMBINED_FEATURES.map((key) =>\n            rule(type(FormType.PASSWORD_CHANGE), featureScore('form', key), {\n                name: `pw-change-${key}`,\n            })\n        ),\n        ...outRuleWithCache('form-candidate', FormType.PASSWORD_CHANGE),\n    ],\n};\n\nconst results$8 = {\n    coeffs: [\n        ['register-fieldsCount', 2.1488468647003174],\n        ['register-inputCount', 3.8953444957733154],\n        ['register-fieldsetCount', 4.369948387145996],\n        ['register-textCount', 4.406470775604248],\n        ['register-textareaCount', -0.5395322442054749],\n        ['register-selectCount', -13.801981925964355],\n        ['register-optionsCount', 8.93043041229248],\n        ['register-radioCount', 8.134862899780273],\n        ['register-identifierCount', 6.878338813781738],\n        ['register-hiddenIdentifierCount', 26.6212100982666],\n        ['register-usernameCount', -8.497008323669434],\n        ['register-emailCount', 0.5601682066917419],\n        ['register-hiddenCount', -16.191883087158203],\n        ['register-hiddenPasswordCount', 13.505952835083008],\n        ['register-submitCount', 3.9190540313720703],\n        ['register-hasTels', -0.054031264036893845],\n        ['register-hasOAuth', 5.235856056213379],\n        ['register-hasCaptchas', 4.430254936218262],\n        ['register-hasFiles', -6.080432891845703],\n        ['register-hasDate', 16.213748931884766],\n        ['register-hasNumber', 17.174604415893555],\n        ['register-oneVisibleField', 0.23812611401081085],\n        ['register-twoVisibleFields', 2.9827115535736084],\n        ['register-threeOrMoreVisibleFields', -0.7077833414077759],\n        ['register-noPasswords', -4.2407379150390625],\n        ['register-onePassword', 1.8425089120864868],\n        ['register-twoPasswords', 16.720924377441406],\n        ['register-threeOrMorePasswords', -13.426392555236816],\n        ['register-noIdentifiers', -9.049647331237793],\n        ['register-oneIdentifier', 1.1870161294937134],\n        ['register-twoIdentifiers', 14.631994247436523],\n        ['register-threeOrMoreIdentifiers', 24.357791900634766],\n        ['register-autofocusedIsIdentifier', 5.220548152923584],\n        ['register-autofocusedIsPassword', 9.6756591796875],\n        ['register-visibleRatio', -3.1590821743011475],\n        ['register-inputRatio', -6.091838359832764],\n        ['register-hiddenRatio', 1.232614517211914],\n        ['register-identifierRatio', 1.6158268451690674],\n        ['register-emailRatio', -2.6694180965423584],\n        ['register-usernameRatio', -4.520468711853027],\n        ['register-passwordRatio', 1.4269945621490479],\n        ['register-requiredRatio', -13.119827270507812],\n        ['register-checkboxRatio', -36.96697235107422],\n        ['register-pageLogin', -7.428308486938477],\n        ['register-formTextLogin', -6.030258655548096],\n        ['register-formAttrsLogin', -6.180969715118408],\n        ['register-headingsLogin', -15.461830139160156],\n        ['register-layoutLogin', 11.504278182983398],\n        ['register-rememberMeCheckbox', -13.274555206298828],\n        ['register-troubleLink', -11.467988014221191],\n        ['register-submitLogin', -9.911770820617676],\n        ['register-pageRegister', 3.26921010017395],\n        ['register-formTextRegister', 0.02179713547229767],\n        ['register-formAttrsRegister', 9.021811485290527],\n        ['register-headingsRegister', 16.266944885253906],\n        ['register-layoutRegister', -10.42892074584961],\n        ['register-pwNewRegister', 11.917451858520508],\n        ['register-pwConfirmRegister', 0.8136529922485352],\n        ['register-submitRegister', 26.98970603942871],\n        ['register-TOSRef', 14.791913986206055],\n        ['register-pagePwReset', -7.5938544273376465],\n        ['register-formTextPwReset', -11.517178535461426],\n        ['register-formAttrsPwReset', -6.282402038574219],\n        ['register-headingsPwReset', -25.74250030517578],\n        ['register-layoutPwReset', -47.1105842590332],\n        ['register-pageRecovery', -8.460634231567383],\n        ['register-formTextRecovery', 0.005665786564350128],\n        ['register-formAttrsRecovery', -8.095630645751953],\n        ['register-headingsRecovery', -16.120214462280273],\n        ['register-layoutRecovery', -2.9045565128326416],\n        ['register-identifierRecovery', -16.254348754882812],\n        ['register-submitRecovery', -32.221370697021484],\n        ['register-formTextMFA', -0.021640509366989136],\n        ['register-formAttrsMFA', -10.20312786102295],\n        ['register-headingsMFA', -13.534029006958008],\n        ['register-layoutMFA', 1.495119571685791],\n        ['register-buttonVerify', -5.0718278884887695],\n        ['register-inputsMFA', -3.943760871887207],\n        ['register-inputsOTP', -23.11526870727539],\n        ['register-linkOTPOutlier', 0.9582937955856323],\n        ['register-newsletterForm', -26.404504776000977],\n        ['register-searchForm', -7.863440036773682],\n        ['register-multiStepForm', 8.490460395812988],\n        ['register-multiAuthForm', -14.590228080749512],\n        ['register-visibleRatio,fieldsCount', -5.730635166168213],\n        ['register-visibleRatio,identifierCount', 4.5280656814575195],\n        ['register-visibleRatio,passwordCount', 12.067358016967773],\n        ['register-visibleRatio,hiddenIdentifierCount', -3.656541109085083],\n        ['register-visibleRatio,hiddenPasswordCount', -31.854700088500977],\n        ['register-identifierRatio,fieldsCount', 4.788910388946533],\n        ['register-identifierRatio,identifierCount', 3.06147837638855],\n        ['register-identifierRatio,passwordCount', -33.6225471496582],\n        ['register-identifierRatio,hiddenIdentifierCount', -41.53782653808594],\n        ['register-identifierRatio,hiddenPasswordCount', 15.620370864868164],\n        ['register-passwordRatio,fieldsCount', -0.6039175987243652],\n        ['register-passwordRatio,identifierCount', -37.281211853027344],\n        ['register-passwordRatio,passwordCount', -6.787042617797852],\n        ['register-passwordRatio,hiddenIdentifierCount', 3.7560617923736572],\n        ['register-passwordRatio,hiddenPasswordCount', -13.99930191040039],\n        ['register-requiredRatio,fieldsCount', -1.0972027778625488],\n        ['register-requiredRatio,identifierCount', -3.273120641708374],\n        ['register-requiredRatio,passwordCount', -9.638973236083984],\n        ['register-requiredRatio,hiddenIdentifierCount', 21.952537536621094],\n        ['register-requiredRatio,hiddenPasswordCount', -9.304187774658203],\n    ],\n    bias: 0.2229500263929367,\n    cutoff: 0.47,\n};\n\nconst register = {\n    name: FormType.REGISTER,\n    coeffs: FORM_COMBINED_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `register-${key}`,\n            (_b =\n                (_a = results$8.coeffs.find(([feature]) => feature === `register-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$8.bias,\n    cutoff: results$8.cutoff,\n    getRules: () => [\n        rule(type('form'), type(FormType.REGISTER), {}),\n        ...FORM_COMBINED_FEATURES.map((key) =>\n            rule(type(FormType.REGISTER), featureScore('form', key), {\n                name: `register-${key}`,\n            })\n        ),\n        ...outRuleWithCache('form-candidate', FormType.REGISTER),\n    ],\n};\n\nconst results$7 = {\n    coeffs: [\n        ['recovery-fieldsCount', 3.1686480045318604],\n        ['recovery-inputCount', 2.2515103816986084],\n        ['recovery-fieldsetCount', -10.534419059753418],\n        ['recovery-textCount', -2.8417246341705322],\n        ['recovery-textareaCount', -18.28977394104004],\n        ['recovery-selectCount', -13.245671272277832],\n        ['recovery-optionsCount', -16.87846565246582],\n        ['recovery-radioCount', -6.032057762145996],\n        ['recovery-identifierCount', 0.9598401784896851],\n        ['recovery-hiddenIdentifierCount', -9.419584274291992],\n        ['recovery-usernameCount', 9.815361022949219],\n        ['recovery-emailCount', 3.164804458618164],\n        ['recovery-hiddenCount', 2.6905319690704346],\n        ['recovery-hiddenPasswordCount', -11.591835975646973],\n        ['recovery-submitCount', 7.926068305969238],\n        ['recovery-hasTels', -15.413702011108398],\n        ['recovery-hasOAuth', -13.806416511535645],\n        ['recovery-hasCaptchas', 0.5163151025772095],\n        ['recovery-hasFiles', -34.650333404541016],\n        ['recovery-hasDate', -5.912387371063232],\n        ['recovery-hasNumber', -5.987368106842041],\n        ['recovery-oneVisibleField', -6.419887542724609],\n        ['recovery-twoVisibleFields', -1.5245790481567383],\n        ['recovery-threeOrMoreVisibleFields', 4.325897693634033],\n        ['recovery-noPasswords', 1.1998769044876099],\n        ['recovery-onePassword', -10.76146411895752],\n        ['recovery-twoPasswords', -6.276216506958008],\n        ['recovery-threeOrMorePasswords', -6.09953498840332],\n        ['recovery-noIdentifiers', -13.318510055541992],\n        ['recovery-oneIdentifier', 1.204313039779663],\n        ['recovery-twoIdentifiers', 2.660702705383301],\n        ['recovery-threeOrMoreIdentifiers', -7.297881126403809],\n        ['recovery-autofocusedIsIdentifier', -1.659160852432251],\n        ['recovery-autofocusedIsPassword', -6.072286605834961],\n        ['recovery-visibleRatio', 0.3868098855018616],\n        ['recovery-inputRatio', -4.502478122711182],\n        ['recovery-hiddenRatio', -0.1950581967830658],\n        ['recovery-identifierRatio', -0.6852729320526123],\n        ['recovery-emailRatio', 0.05073688179254532],\n        ['recovery-usernameRatio', 8.933812141418457],\n        ['recovery-passwordRatio', -9.400286674499512],\n        ['recovery-requiredRatio', 0.041554152965545654],\n        ['recovery-checkboxRatio', -5.961899280548096],\n        ['recovery-pageLogin', -2.07015323638916],\n        ['recovery-formTextLogin', -6.084650993347168],\n        ['recovery-formAttrsLogin', 0.3745183050632477],\n        ['recovery-headingsLogin', 3.899892568588257],\n        ['recovery-layoutLogin', -11.755548477172852],\n        ['recovery-rememberMeCheckbox', -5.9327073097229],\n        ['recovery-troubleLink', 6.62761116027832],\n        ['recovery-submitLogin', -4.9484028816223145],\n        ['recovery-pageRegister', -11.171113967895508],\n        ['recovery-formTextRegister', -0.004259899258613586],\n        ['recovery-formAttrsRegister', -11.08430290222168],\n        ['recovery-headingsRegister', -3.8516147136688232],\n        ['recovery-layoutRegister', -8.445761680603027],\n        ['recovery-pwNewRegister', -6.089382171630859],\n        ['recovery-pwConfirmRegister', -6.038159370422363],\n        ['recovery-submitRegister', -6.921971797943115],\n        ['recovery-TOSRef', -13.569132804870605],\n        ['recovery-pagePwReset', 7.406122207641602],\n        ['recovery-formTextPwReset', -6.428162097930908],\n        ['recovery-formAttrsPwReset', 12.511506080627441],\n        ['recovery-headingsPwReset', 13.299031257629395],\n        ['recovery-layoutPwReset', 7.199288368225098],\n        ['recovery-pageRecovery', 16.694597244262695],\n        ['recovery-formTextRecovery', 0.02617131918668747],\n        ['recovery-formAttrsRecovery', 21.711151123046875],\n        ['recovery-headingsRecovery', 4.40916109085083],\n        ['recovery-layoutRecovery', 1.7731317281723022],\n        ['recovery-identifierRecovery', 16.085918426513672],\n        ['recovery-submitRecovery', 16.651777267456055],\n        ['recovery-formTextMFA', 0.051208652555942535],\n        ['recovery-formAttrsMFA', 10.673234939575195],\n        ['recovery-headingsMFA', -8.235397338867188],\n        ['recovery-layoutMFA', -6.03088903427124],\n        ['recovery-buttonVerify', 0.6126459240913391],\n        ['recovery-inputsMFA', 6.485626697540283],\n        ['recovery-inputsOTP', -0.4770396649837494],\n        ['recovery-linkOTPOutlier', 0.4108854830265045],\n        ['recovery-newsletterForm', -13.8137845993042],\n        ['recovery-searchForm', -12.360559463500977],\n        ['recovery-multiStepForm', 2.2651278972625732],\n        ['recovery-multiAuthForm', -6.300940036773682],\n        ['recovery-visibleRatio,fieldsCount', 3.260298490524292],\n        ['recovery-visibleRatio,identifierCount', 0.21990321576595306],\n        ['recovery-visibleRatio,passwordCount', -8.673775672912598],\n        ['recovery-visibleRatio,hiddenIdentifierCount', -12.881649017333984],\n        ['recovery-visibleRatio,hiddenPasswordCount', -13.354900360107422],\n        ['recovery-identifierRatio,fieldsCount', 6.22084379196167],\n        ['recovery-identifierRatio,identifierCount', 0.7349469065666199],\n        ['recovery-identifierRatio,passwordCount', -10.594644546508789],\n        ['recovery-identifierRatio,hiddenIdentifierCount', -22.928953170776367],\n        ['recovery-identifierRatio,hiddenPasswordCount', -13.94097900390625],\n        ['recovery-passwordRatio,fieldsCount', -9.976916313171387],\n        ['recovery-passwordRatio,identifierCount', -10.677999496459961],\n        ['recovery-passwordRatio,passwordCount', -8.918004035949707],\n        ['recovery-passwordRatio,hiddenIdentifierCount', -6.067085266113281],\n        ['recovery-passwordRatio,hiddenPasswordCount', -6.0812668800354],\n        ['recovery-requiredRatio,fieldsCount', 6.242189884185791],\n        ['recovery-requiredRatio,identifierCount', 0.7846741080284119],\n        ['recovery-requiredRatio,passwordCount', -8.90123176574707],\n        ['recovery-requiredRatio,hiddenIdentifierCount', 8.217477798461914],\n        ['recovery-requiredRatio,hiddenPasswordCount', -9.673283576965332],\n    ],\n    bias: -3.87492299079895,\n    cutoff: 0.5,\n};\n\nconst recovery = {\n    name: FormType.RECOVERY,\n    coeffs: FORM_COMBINED_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `recovery-${key}`,\n            (_b =\n                (_a = results$7.coeffs.find(([feature]) => feature === `recovery-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$7.bias,\n    cutoff: results$7.cutoff,\n    getRules: () => [\n        rule(type('form'), type(FormType.RECOVERY), {}),\n        ...FORM_COMBINED_FEATURES.map((key) =>\n            rule(type(FormType.RECOVERY), featureScore('form', key), {\n                name: `recovery-${key}`,\n            })\n        ),\n        ...outRuleWithCache('form-candidate', FormType.RECOVERY),\n    ],\n};\n\nconst results$6 = {\n    coeffs: [\n        ['mfa-fieldsCount', -1.986028790473938],\n        ['mfa-inputCount', -2.417893171310425],\n        ['mfa-fieldsetCount', 8.618748664855957],\n        ['mfa-textCount', 10.741029739379883],\n        ['mfa-textareaCount', -21.107969284057617],\n        ['mfa-selectCount', -6.036983013153076],\n        ['mfa-optionsCount', -6.089150428771973],\n        ['mfa-radioCount', -5.989146709442139],\n        ['mfa-identifierCount', -2.976684808731079],\n        ['mfa-hiddenIdentifierCount', -2.914689779281616],\n        ['mfa-usernameCount', -3.2611923217773438],\n        ['mfa-emailCount', -6.297138690948486],\n        ['mfa-hiddenCount', -0.5899203419685364],\n        ['mfa-hiddenPasswordCount', -1.1170684099197388],\n        ['mfa-submitCount', 3.2955262660980225],\n        ['mfa-hasTels', 13.675196647644043],\n        ['mfa-hasOAuth', -6.1800312995910645],\n        ['mfa-hasCaptchas', -2.140284776687622],\n        ['mfa-hasFiles', -5.91282320022583],\n        ['mfa-hasDate', -6.000078201293945],\n        ['mfa-hasNumber', 14.798690795898438],\n        ['mfa-oneVisibleField', 5.3741021156311035],\n        ['mfa-twoVisibleFields', -5.333239555358887],\n        ['mfa-threeOrMoreVisibleFields', -1.8359535932540894],\n        ['mfa-noPasswords', -4.526628017425537],\n        ['mfa-onePassword', -5.278433799743652],\n        ['mfa-twoPasswords', -5.979758262634277],\n        ['mfa-threeOrMorePasswords', -6.017874240875244],\n        ['mfa-noIdentifiers', -7.453759670257568],\n        ['mfa-oneIdentifier', -3.9392337799072266],\n        ['mfa-twoIdentifiers', -0.1508341133594513],\n        ['mfa-threeOrMoreIdentifiers', 0.9015580415725708],\n        ['mfa-autofocusedIsIdentifier', -4.173874855041504],\n        ['mfa-autofocusedIsPassword', 8.88188648223877],\n        ['mfa-visibleRatio', 0.1725667119026184],\n        ['mfa-inputRatio', -5.889572620391846],\n        ['mfa-hiddenRatio', 4.6787800788879395],\n        ['mfa-identifierRatio', -2.5309557914733887],\n        ['mfa-emailRatio', -5.6209330558776855],\n        ['mfa-usernameRatio', -4.058542728424072],\n        ['mfa-passwordRatio', -5.722538471221924],\n        ['mfa-requiredRatio', 3.3665359020233154],\n        ['mfa-checkboxRatio', 10.59062385559082],\n        ['mfa-pageLogin', 2.369318962097168],\n        ['mfa-formTextLogin', -6.009958267211914],\n        ['mfa-formAttrsLogin', -1.656536340713501],\n        ['mfa-headingsLogin', -4.8079304695129395],\n        ['mfa-layoutLogin', 0.8272684812545776],\n        ['mfa-rememberMeCheckbox', 9.608478546142578],\n        ['mfa-troubleLink', -4.030245304107666],\n        ['mfa-submitLogin', 2.395260810852051],\n        ['mfa-pageRegister', -0.050235673785209656],\n        ['mfa-formTextRegister', 0.018041975796222687],\n        ['mfa-formAttrsRegister', -4.002821445465088],\n        ['mfa-headingsRegister', -7.619940757751465],\n        ['mfa-layoutRegister', -1.8554503917694092],\n        ['mfa-pwNewRegister', -6.025944232940674],\n        ['mfa-pwConfirmRegister', -6.040721893310547],\n        ['mfa-submitRegister', -6.058624267578125],\n        ['mfa-TOSRef', -2.5561230182647705],\n        ['mfa-pagePwReset', -6.049489498138428],\n        ['mfa-formTextPwReset', -6.06840181350708],\n        ['mfa-formAttrsPwReset', -5.907971382141113],\n        ['mfa-headingsPwReset', -5.974218845367432],\n        ['mfa-layoutPwReset', -5.9922099113464355],\n        ['mfa-pageRecovery', 1.330160140991211],\n        ['mfa-formTextRecovery', -0.0034301504492759705],\n        ['mfa-formAttrsRecovery', -6.100997447967529],\n        ['mfa-headingsRecovery', -6.0003981590271],\n        ['mfa-layoutRecovery', 1.902138352394104],\n        ['mfa-identifierRecovery', -6.056447505950928],\n        ['mfa-submitRecovery', 5.776317119598389],\n        ['mfa-formTextMFA', 0.053553156554698944],\n        ['mfa-formAttrsMFA', 14.734620094299316],\n        ['mfa-headingsMFA', 13.750317573547363],\n        ['mfa-layoutMFA', 14.608585357666016],\n        ['mfa-buttonVerify', 18.474651336669922],\n        ['mfa-inputsMFA', 16.719091415405273],\n        ['mfa-inputsOTP', 19.327695846557617],\n        ['mfa-linkOTPOutlier', -1.056117296218872],\n        ['mfa-newsletterForm', -6.025543212890625],\n        ['mfa-searchForm', -6.527355670928955],\n        ['mfa-multiStepForm', 3.8046202659606934],\n        ['mfa-multiAuthForm', -6.06812858581543],\n        ['mfa-visibleRatio,fieldsCount', 1.3153743743896484],\n        ['mfa-visibleRatio,identifierCount', -2.8759515285491943],\n        ['mfa-visibleRatio,passwordCount', -4.6935200691223145],\n        ['mfa-visibleRatio,hiddenIdentifierCount', -6.843139171600342],\n        ['mfa-visibleRatio,hiddenPasswordCount', -0.27420809864997864],\n        ['mfa-identifierRatio,fieldsCount', -0.4094852805137634],\n        ['mfa-identifierRatio,identifierCount', -1.8246272802352905],\n        ['mfa-identifierRatio,passwordCount', -5.31271505355835],\n        ['mfa-identifierRatio,hiddenIdentifierCount', 0.39803561568260193],\n        ['mfa-identifierRatio,hiddenPasswordCount', 2.3596723079681396],\n        ['mfa-passwordRatio,fieldsCount', -5.3759026527404785],\n        ['mfa-passwordRatio,identifierCount', -5.346388339996338],\n        ['mfa-passwordRatio,passwordCount', -5.632260799407959],\n        ['mfa-passwordRatio,hiddenIdentifierCount', -8.22301197052002],\n        ['mfa-passwordRatio,hiddenPasswordCount', -5.995488166809082],\n        ['mfa-requiredRatio,fieldsCount', -3.7365427017211914],\n        ['mfa-requiredRatio,identifierCount', -2.866434335708618],\n        ['mfa-requiredRatio,passwordCount', -3.930940628051758],\n        ['mfa-requiredRatio,hiddenIdentifierCount', -6.067808628082275],\n        ['mfa-requiredRatio,hiddenPasswordCount', -6.0450439453125],\n    ],\n    bias: -5.322455883026123,\n    cutoff: 0.5,\n};\n\nconst mfa = {\n    name: FormType.MFA,\n    coeffs: FORM_COMBINED_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `mfa-${key}`,\n            (_b =\n                (_a = results$6.coeffs.find(([feature]) => feature === `mfa-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$6.bias,\n    cutoff: results$6.cutoff,\n    getRules: () => [\n        rule(type('form'), type(FormType.MFA), {}),\n        ...FORM_COMBINED_FEATURES.map((key) =>\n            rule(type(FormType.MFA), featureScore('form', key), {\n                name: `mfa-${key}`,\n            })\n        ),\n        ...outRuleWithCache('form-candidate', FormType.MFA),\n    ],\n};\n\nconst getPasswordFieldFeatures = (fnode) => {\n    var _a, _b;\n    const fieldFeatures = fnode.noteFor('field');\n    const { fieldAttrs, fieldText, labelText, prevField, nextField } = fieldFeatures;\n    const attrCreate = any(matchPasswordCreateAttr)(fieldAttrs);\n    const attrCurrent = any(matchPasswordCurrentAttr)(fieldAttrs);\n    const attrConfirm = any(matchPasswordConfirmAttr)(fieldAttrs);\n    const attrReset = any(matchPasswordResetAttr)(fieldAttrs);\n    const textCreate = matchPasswordCreate(fieldText);\n    const textCurrent = matchPasswordCurrent(fieldText);\n    const textConfirm = matchPasswordConfirm(fieldText);\n    const textReset = matchPasswordReset(fieldText);\n    const labelCreate = matchPasswordCreate(labelText);\n    const labelCurrent = matchPasswordCurrent(labelText);\n    const labelConfirm = matchPasswordConfirm(labelText);\n    const labelReset = matchPasswordReset(labelText);\n    const passwordOutlier = any(matchPasswordOutlier)(fieldAttrs.concat(labelText, fieldText));\n    const prevPwHaystack =\n        prevField && prevField.getAttribute('type') === 'password' ? getAllFieldHaystacks(prevField) : [];\n    const nextPwHaystack =\n        nextField && nextField.getAttribute('type') === 'password' ? getAllFieldHaystacks(nextField) : [];\n    const prevPwCreate = any(matchPasswordCreate)(prevPwHaystack);\n    const prevPwCurrent = any(matchPasswordCurrent)(prevPwHaystack);\n    const prevPwConfirm = any(matchPasswordConfirm)(prevPwHaystack);\n    const nextPwCreate = any(matchPasswordCreate)(nextPwHaystack);\n    const nextPwCurrent = any(matchPasswordCurrent)(nextPwHaystack);\n    const nextPwConfirm = any(matchPasswordConfirm)(nextPwHaystack);\n    return {\n        loginScore: boolInt(fieldFeatures.isFormLogin),\n        registerScore: boolInt(fieldFeatures.isFormRegister),\n        pwChangeScore: boolInt(fieldFeatures.isFormPWChange),\n        exotic: boolInt(fieldFeatures.isFormNoop),\n        autocompleteNew: boolInt(fieldFeatures.autocomplete === 'new-password'),\n        autocompleteCurrent: boolInt(fieldFeatures.autocomplete === 'current-password'),\n        autocompleteOff: boolInt(fieldFeatures.autocomplete === 'off'),\n        isOnlyPassword:\n            (_b = (_a = fieldFeatures.formFeatures) === null || _a === void 0 ? void 0 : _a.onePassword) !== null &&\n            _b !== void 0\n                ? _b\n                : 0,\n        prevPwField: boolInt(prevField !== null),\n        nextPwField: boolInt(nextField !== null),\n        attrCreate: boolInt(attrCreate),\n        attrCurrent: boolInt(attrCurrent),\n        attrConfirm: boolInt(attrConfirm),\n        attrReset: boolInt(attrReset),\n        textCreate: boolInt(textCreate),\n        textCurrent: boolInt(textCurrent),\n        textConfirm: boolInt(textConfirm),\n        textReset: boolInt(textReset),\n        labelCreate: boolInt(labelCreate),\n        labelCurrent: boolInt(labelCurrent),\n        labelConfirm: boolInt(labelConfirm),\n        labelReset: boolInt(labelReset),\n        passwordOutlier: boolInt(passwordOutlier),\n        prevPwCreate: boolInt(prevPwCreate),\n        prevPwCurrent: boolInt(prevPwCurrent),\n        prevPwConfirm: boolInt(prevPwConfirm),\n        nextPwCreate: boolInt(nextPwCreate),\n        nextPwCurrent: boolInt(nextPwCurrent),\n        nextPwConfirm: boolInt(nextPwConfirm),\n    };\n};\n\nconst PW_FIELD_FEATURES = [\n    'loginScore',\n    'registerScore',\n    'pwChangeScore',\n    'exotic',\n    'autocompleteNew',\n    'autocompleteCurrent',\n    'autocompleteOff',\n    'isOnlyPassword',\n    'prevPwField',\n    'nextPwField',\n    'attrCreate',\n    'attrCurrent',\n    'attrConfirm',\n    'attrReset',\n    'textCreate',\n    'textCurrent',\n    'textConfirm',\n    'textReset',\n    'labelCreate',\n    'labelCurrent',\n    'labelConfirm',\n    'labelReset',\n    'prevPwCreate',\n    'prevPwCurrent',\n    'prevPwConfirm',\n    'passwordOutlier',\n    'nextPwCreate',\n    'nextPwCurrent',\n    'nextPwConfirm',\n];\n\nconst results$5 = {\n    coeffs: [\n        ['pw-loginScore', 12.8425931930542],\n        ['pw-registerScore', -13.378499031066895],\n        ['pw-pwChangeScore', 2.921213388442993],\n        ['pw-exotic', -12.663826942443848],\n        ['pw-autocompleteNew', -3.51690673828125],\n        ['pw-autocompleteCurrent', 0.7590001821517944],\n        ['pw-autocompleteOff', -4.523982524871826],\n        ['pw-isOnlyPassword', 5.8820366859436035],\n        ['pw-prevPwField', 5.306009292602539],\n        ['pw-nextPwField', -6.745763301849365],\n        ['pw-attrCreate', -5.484086990356445],\n        ['pw-attrCurrent', 3.1155130863189697],\n        ['pw-attrConfirm', -6.409403324127197],\n        ['pw-attrReset', 0.07032205164432526],\n        ['pw-textCreate', -2.6428706645965576],\n        ['pw-textCurrent', 1.7301194667816162],\n        ['pw-textConfirm', -6.27731990814209],\n        ['pw-textReset', -0.1284354329109192],\n        ['pw-labelCreate', -6.91628885269165],\n        ['pw-labelCurrent', 13.543344497680664],\n        ['pw-labelConfirm', -6.303647518157959],\n        ['pw-labelReset', 0.09284727275371552],\n        ['pw-prevPwCreate', -9.341208457946777],\n        ['pw-prevPwCurrent', -12.110845565795898],\n        ['pw-prevPwConfirm', 0.09804551303386688],\n        ['pw-passwordOutlier', -6.297443866729736],\n        ['pw-nextPwCreate', 15.074135780334473],\n        ['pw-nextPwCurrent', -7.233329772949219],\n        ['pw-nextPwConfirm', -6.696846961975098],\n    ],\n    bias: -6.901088237762451,\n    cutoff: 0.5,\n};\n\nconst password = {\n    name: FieldType.PASSWORD_CURRENT,\n    coeffs: PW_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `pw-${key}`,\n            (_b =\n                (_a = results$5.coeffs.find(([feature]) => feature === `pw-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$5.bias,\n    cutoff: results$5.cutoff,\n    getRules: () => [\n        rule(type('password-field'), type(FieldType.PASSWORD_CURRENT), {}),\n        ...PW_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.PASSWORD_CURRENT), featureScore('password-field', key), {\n                name: `pw-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.PASSWORD_CURRENT),\n    ],\n};\n\nconst results$4 = {\n    coeffs: [\n        ['pw[new]-loginScore', -11.79761791229248],\n        ['pw[new]-registerScore', 13.207467079162598],\n        ['pw[new]-pwChangeScore', 0.518919050693512],\n        ['pw[new]-exotic', 15.661911010742188],\n        ['pw[new]-autocompleteNew', 1.3702919483184814],\n        ['pw[new]-autocompleteCurrent', -0.585719108581543],\n        ['pw[new]-autocompleteOff', -1.0984125137329102],\n        ['pw[new]-isOnlyPassword', -2.0054612159729004],\n        ['pw[new]-prevPwField', 1.1099307537078857],\n        ['pw[new]-nextPwField', 9.469817161560059],\n        ['pw[new]-attrCreate', 3.6383402347564697],\n        ['pw[new]-attrCurrent', 1.8213093280792236],\n        ['pw[new]-attrConfirm', 7.772680759429932],\n        ['pw[new]-attrReset', 0.057515159249305725],\n        ['pw[new]-textCreate', 1.7611318826675415],\n        ['pw[new]-textCurrent', -1.4192075729370117],\n        ['pw[new]-textConfirm', -15.807029724121094],\n        ['pw[new]-textReset', -0.022727981209754944],\n        ['pw[new]-labelCreate', 7.953551292419434],\n        ['pw[new]-labelCurrent', -13.997352600097656],\n        ['pw[new]-labelConfirm', 7.937860488891602],\n        ['pw[new]-labelReset', 0.02178335189819336],\n        ['pw[new]-prevPwCreate', 11.071161270141602],\n        ['pw[new]-prevPwCurrent', 9.047843933105469],\n        ['pw[new]-prevPwConfirm', -0.0050661563873291016],\n        ['pw[new]-passwordOutlier', -28.866724014282227],\n        ['pw[new]-nextPwCreate', -11.700383186340332],\n        ['pw[new]-nextPwCurrent', 8.510000228881836],\n        ['pw[new]-nextPwConfirm', 9.286312103271484],\n    ],\n    bias: -3.1783359050750732,\n    cutoff: 0.5,\n};\n\nconst newPassword = {\n    name: FieldType.PASSWORD_NEW,\n    coeffs: PW_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `pw[new]-${key}`,\n            (_b =\n                (_a = results$4.coeffs.find(([feature]) => feature === `pw[new]-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$4.bias,\n    cutoff: results$4.cutoff,\n    getRules: () => [\n        rule(type('password-field'), type(FieldType.PASSWORD_NEW), {}),\n        ...PW_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.PASSWORD_NEW), featureScore('password-field', key), {\n                name: `pw[new]-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.PASSWORD_NEW),\n    ],\n};\n\nconst getUsernameFieldFeatures = (fnode) => {\n    const fieldFeatures = fnode.noteFor('field');\n    const { fieldAttrs, fieldText, labelText, prevField } = fieldFeatures;\n    const attrUsername = any(matchUsernameAttr)(fieldAttrs);\n    const textUsername = matchUsername(fieldText);\n    const labelUsername = matchUsername(labelText);\n    const outlierUsername = any(matchUsernameOutlier)(fieldAttrs.concat(fieldText, labelText));\n    const haystack = fieldAttrs.concat(fieldText).concat(labelText);\n    const outlier = outlierUsername || any(matchEmailAttr)(haystack);\n    const loginForm = fieldFeatures.isFormLogin;\n    const isFirstField = prevField === null;\n    const loginUsername = loginForm && isFirstField && !outlier;\n    return {\n        autocompleteUsername: boolInt(fieldFeatures.autocomplete === 'username'),\n        autocompleteNickname: boolInt(fieldFeatures.autocomplete === 'nickname'),\n        autocompleteEmail: boolInt(fieldFeatures.autocomplete === 'email'),\n        autocompleteOff: boolInt(fieldFeatures.autocomplete === 'off'),\n        attrUsername: boolInt(attrUsername),\n        textUsername: boolInt(textUsername),\n        labelUsername: boolInt(labelUsername),\n        outlierUsername: boolInt(outlier),\n        loginUsername: boolInt(loginUsername),\n        searchField: boolInt(fieldFeatures.searchField),\n    };\n};\n\nconst USERNAME_FIELD_FEATURES = [\n    'autocompleteUsername',\n    'autocompleteNickname',\n    'autocompleteEmail',\n    'autocompleteOff',\n    'attrUsername',\n    'textUsername',\n    'labelUsername',\n    'outlierUsername',\n    'loginUsername',\n    'searchField',\n];\n\nconst results$3 = {\n    coeffs: [\n        ['username-autocompleteUsername', 8.4799222946167],\n        ['username-autocompleteNickname', 0.2949698269367218],\n        ['username-autocompleteEmail', -6.826112747192383],\n        ['username-autocompleteOff', -0.30067768692970276],\n        ['username-attrUsername', 17.987205505371094],\n        ['username-textUsername', 15.601824760437012],\n        ['username-labelUsername', 17.35613441467285],\n        ['username-outlierUsername', -0.11823385208845139],\n        ['username-loginUsername', 18.332326889038086],\n        ['username-searchField', -6.9408440589904785],\n    ],\n    bias: -9.685441970825195,\n    cutoff: 0.5,\n};\n\nconst username = {\n    name: FieldType.USERNAME,\n    coeffs: USERNAME_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `username-${key}`,\n            (_b =\n                (_a = results$3.coeffs.find(([feature]) => feature === `username-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$3.bias,\n    cutoff: results$3.cutoff,\n    getRules: () => [\n        rule(type('username-field'), type(FieldType.USERNAME), {}),\n        ...USERNAME_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.USERNAME), featureScore('username-field', key), {\n                name: `username-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.USERNAME),\n    ],\n};\n\nconst getHiddenUserFieldFeatures = (fnode) => {\n    const field = fnode.element;\n    const fieldFeatures = fnode.noteFor('field');\n    const { fieldAttrs, autocomplete } = fieldFeatures;\n    const attrUsername = any(matchUsernameAttr)(fieldAttrs);\n    const attrEmail = any(matchEmailAttr)(fieldAttrs);\n    const usernameAttr = field.matches('[name=\"username\"],[id=\"username\"]');\n    const autocompleteUsername = autocomplete === 'username';\n    const visibleReadonly =\n        field.readOnly &&\n        isVisible(field, {\n            opacity: true,\n        }) &&\n        field.type !== 'hidden';\n    const valueEmail = matchEmailValue(fieldFeatures.value);\n    const valueTel = matchTelValue(fieldFeatures.value);\n    const valueUsername = matchUsernameValue(fieldFeatures.value);\n    return {\n        exotic: boolInt(fieldFeatures.isFormNoop),\n        attrUsername: boolInt(attrUsername),\n        attrEmail: boolInt(attrEmail),\n        usernameAttr: boolInt(usernameAttr),\n        autocompleteUsername: boolInt(autocompleteUsername),\n        visibleReadonly: boolInt(visibleReadonly),\n        hiddenEmailValue: boolInt(valueEmail),\n        hiddenTelValue: boolInt(valueTel),\n        hiddenUsernameValue: boolInt(valueUsername),\n    };\n};\n\nconst HIDDEN_USER_FIELD_FEATURES = [\n    'exotic',\n    'attrUsername',\n    'attrEmail',\n    'usernameAttr',\n    'autocompleteUsername',\n    'visibleReadonly',\n    'hiddenEmailValue',\n    'hiddenTelValue',\n    'hiddenUsernameValue',\n];\n\nconst results$2 = {\n    coeffs: [\n        ['username[hidden]-exotic', -7.268867015838623],\n        ['username[hidden]-attrUsername', 14.68941879272461],\n        ['username[hidden]-attrEmail', 13.718717575073242],\n        ['username[hidden]-usernameAttr', 15.945220947265625],\n        ['username[hidden]-autocompleteUsername', 1.195915699005127],\n        ['username[hidden]-visibleReadonly', 13.705889701843262],\n        ['username[hidden]-hiddenEmailValue', 15.474560737609863],\n        ['username[hidden]-hiddenTelValue', 6.844428539276123],\n        ['username[hidden]-hiddenUsernameValue', -0.6306125521659851],\n    ],\n    bias: -21.708499908447266,\n    cutoff: 0.5,\n};\n\nconst usernameHidden = {\n    name: FieldType.USERNAME_HIDDEN,\n    coeffs: HIDDEN_USER_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `username[hidden]-${key}`,\n            (_b =\n                (_a = results$2.coeffs.find(([feature]) => feature === `username[hidden]-${key}`)) === null ||\n                _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$2.bias,\n    cutoff: results$2.cutoff,\n    getRules: () => [\n        rule(type('username-hidden-field'), type(FieldType.USERNAME_HIDDEN), {}),\n        ...HIDDEN_USER_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.USERNAME_HIDDEN), featureScore('username-hidden-field', key), {\n                name: `username[hidden]-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.USERNAME_HIDDEN),\n    ],\n};\n\nconst getEmailFieldFeatures = (fnode) => {\n    const field = fnode.element;\n    const fieldFeatures = fnode.noteFor('field');\n    const { fieldAttrs, fieldText, labelText } = fieldFeatures;\n    const typeEmail = fieldFeatures.type === 'email';\n    const exactAttrEmail = field.matches(kEmailSelector);\n    const attrEmail = any(matchEmailAttr)(fieldAttrs);\n    const textEmail = matchEmail(fieldText);\n    const labelEmail = matchEmail(labelText);\n    const placeholderEmail = any(or([matchEmailValue, matchEmail]))(field.placeholder.split(' '));\n    return {\n        autocompleteUsername: boolInt(fieldFeatures.autocomplete === 'username'),\n        autocompleteNickname: boolInt(fieldFeatures.autocomplete === 'nickname'),\n        autocompleteEmail: boolInt(fieldFeatures.autocomplete === 'email'),\n        autocompleteOff: boolInt(fieldFeatures.autocomplete === 'off'),\n        typeEmail: boolInt(typeEmail),\n        exactAttrEmail: boolInt(exactAttrEmail),\n        attrEmail: boolInt(attrEmail),\n        textEmail: boolInt(textEmail),\n        labelEmail: boolInt(labelEmail),\n        placeholderEmail: boolInt(placeholderEmail),\n        searchField: boolInt(fieldFeatures.searchField),\n    };\n};\n\nconst EMAIL_FIELD_FEATURES = [\n    'autocompleteUsername',\n    'autocompleteNickname',\n    'autocompleteEmail',\n    'typeEmail',\n    'exactAttrEmail',\n    'attrEmail',\n    'textEmail',\n    'labelEmail',\n    'placeholderEmail',\n    'searchField',\n];\n\nconst results$1 = {\n    coeffs: [\n        ['email-autocompleteUsername', 1.1164394617080688],\n        ['email-autocompleteNickname', -0.11852008104324341],\n        ['email-autocompleteEmail', 6.255153656005859],\n        ['email-typeEmail', 14.818696022033691],\n        ['email-exactAttrEmail', 12.930174827575684],\n        ['email-attrEmail', 2.435703992843628],\n        ['email-textEmail', 13.969071388244629],\n        ['email-labelEmail', 16.99106216430664],\n        ['email-placeholderEmail', 14.20310115814209],\n        ['email-searchField', -24.339866638183594],\n    ],\n    bias: -9.423550605773926,\n    cutoff: 0.5,\n};\n\nconst email = {\n    name: FieldType.EMAIL,\n    coeffs: EMAIL_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `email-${key}`,\n            (_b =\n                (_a = results$1.coeffs.find(([feature]) => feature === `email-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results$1.bias,\n    cutoff: results$1.cutoff,\n    getRules: () => [\n        rule(type('email-field'), type(FieldType.EMAIL), {}),\n        ...EMAIL_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.EMAIL), featureScore('email-field', key), {\n                name: `email-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.EMAIL),\n    ],\n};\n\nconst { linearScale } = utils;\n\nconst getOTPFieldFeatures = (fnode) => {\n    var _a, _b, _c, _d;\n    const field = fnode.element;\n    const fieldFeatures = fnode.noteFor('field');\n    const { fieldAttrs, fieldText, labelText, prevField, nextField, type, minLength, maxLength } = fieldFeatures;\n    const form = (_a = fieldFeatures.formFnode) === null || _a === void 0 ? void 0 : _a.element;\n    const formMfa = fieldFeatures.isFormMFA;\n    const linkOTPOutlier = Boolean(\n        (_b = fieldFeatures === null || fieldFeatures === void 0 ? void 0 : fieldFeatures.formFeatures) === null ||\n            _b === void 0\n            ? void 0\n            : _b.linkOTPOutlier\n    );\n    const formCheckboxCount =\n        (_d =\n            (_c = fieldFeatures === null || fieldFeatures === void 0 ? void 0 : fieldFeatures.formFeatures) === null ||\n            _c === void 0\n                ? void 0\n                : _c.checkboxCount) !== null && _d !== void 0\n            ? _d\n            : 0;\n    const formInnerText = form && formMfa ? form.innerText : '';\n    const patternOTP = OTP_PATTERNS.some(\n        ([maxLength, pattern]) => field.pattern.includes(pattern) && maxLength === field.maxLength\n    );\n    const exactAttr = ['code', 'token', 'otp', 'otc', 'totp'];\n    const nameMatch = exactAttr.some((match) => field.name === match);\n    const idMatch = exactAttr.some((match) => field.id === match);\n    const { area, top, bottom, width } = getNodeRect(field);\n    const maybeGroup = width < 100;\n    const prevRect = prevField ? getNodeRect(prevField) : null;\n    const nextRect = nextField ? getNodeRect(nextField) : null;\n    const prevCheck =\n        maybeGroup &&\n        prevField &&\n        (prevField === null || prevField === void 0 ? void 0 : prevField.getAttribute('type')) === type;\n    const nextCheck =\n        maybeGroup &&\n        nextField &&\n        (nextField === null || nextField === void 0 ? void 0 : nextField.getAttribute('type')) === type;\n    const prevAligned = prevCheck\n        ? top === (prevRect === null || prevRect === void 0 ? void 0 : prevRect.top) &&\n          bottom === (prevRect === null || prevRect === void 0 ? void 0 : prevRect.bottom)\n        : false;\n    const prevArea = prevCheck ? area === (prevRect === null || prevRect === void 0 ? void 0 : prevRect.area) : false;\n    const nextAligned = nextCheck\n        ? top === (nextRect === null || nextRect === void 0 ? void 0 : nextRect.top) &&\n          bottom === (nextRect === null || nextRect === void 0 ? void 0 : nextRect.top)\n        : false;\n    const nextArea = nextCheck ? area === (nextRect === null || nextRect === void 0 ? void 0 : nextRect.area) : false;\n    const attrOTP = any(matchOtpAttr)(fieldAttrs);\n    const attrMFA = any(matchMfaAttr)(fieldAttrs);\n    const attrOutlier = any(matchOtpOutlier)(fieldAttrs);\n    const textOTP = matchOtpAttr(fieldText);\n    const textMFA = matchMfa(fieldText);\n    const labelOTP = matchOtpAttr(labelText);\n    const labelMFA = matchMfa(labelText);\n    const labelOutlier = matchOtpOutlier(labelText);\n    const parents = [getNthParent(field)(1), getNthParent(field)(2)];\n    const wrapperAttrs = parents.flatMap(getBaseAttributes);\n    const wrapperOTP = any(matchOtpAttr)(wrapperAttrs);\n    const wrapperOutlier = any(matchOtpOutlier)(wrapperAttrs);\n    const emailOutlierCount = (formInnerText.match(/@/g) || []).length;\n    return {\n        mfaScore: boolInt(formMfa),\n        exotic: boolInt(fieldFeatures.isFormNoop),\n        linkOTPOutlier: boolInt(formMfa && linkOTPOutlier),\n        hasCheckboxes: boolInt(formMfa && formCheckboxCount > 0),\n        hidden: boolInt(!fieldFeatures.visible),\n        required: boolInt(fieldFeatures.required),\n        nameMatch: boolInt(nameMatch),\n        idMatch: boolInt(idMatch),\n        numericMode: boolInt(field.inputMode === 'numeric'),\n        autofocused: boolInt(field.autofocus),\n        tabIndex1: boolInt(field.tabIndex === 1),\n        patternOTP: boolInt(patternOTP),\n        maxLength1: boolInt(maxLength === 1),\n        maxLength5: boolInt(maxLength === 5),\n        minLength6: boolInt(minLength === 6),\n        maxLength6: boolInt(maxLength === 6),\n        maxLength20: boolInt(maxLength === 20),\n        autocompleteOTC: boolInt(fieldFeatures.autocomplete === 'one-time-code'),\n        autocompleteOff: boolInt(fieldFeatures.autocomplete === 'off'),\n        prevAligned: boolInt(prevAligned),\n        prevArea: boolInt(prevArea),\n        nextAligned: boolInt(nextAligned),\n        nextArea: boolInt(nextArea),\n        attrMFA: boolInt(attrMFA),\n        attrOTP: boolInt(attrOTP),\n        attrOutlier: boolInt(attrOutlier),\n        textMFA: boolInt(textMFA),\n        textOTP: boolInt(textOTP),\n        labelMFA: boolInt(labelMFA),\n        labelOTP: boolInt(labelOTP),\n        labelOutlier: boolInt(labelOutlier),\n        wrapperOTP: boolInt(wrapperOTP),\n        wrapperOutlier: boolInt(wrapperOutlier),\n        emailOutlierCount: linearScale(emailOutlierCount, 0, 2),\n    };\n};\n\nconst OTP_FIELD_FEATURES = [\n    'mfaScore',\n    'exotic',\n    'linkOTPOutlier',\n    'hasCheckboxes',\n    'hidden',\n    'required',\n    'nameMatch',\n    'idMatch',\n    'numericMode',\n    'autofocused',\n    'tabIndex1',\n    'patternOTP',\n    'maxLength1',\n    'maxLength5',\n    'minLength6',\n    'maxLength6',\n    'maxLength20',\n    'autocompleteOTC',\n    'autocompleteOff',\n    'prevAligned',\n    'prevArea',\n    'nextAligned',\n    'nextArea',\n    'attrMFA',\n    'attrOTP',\n    'attrOutlier',\n    'textMFA',\n    'textOTP',\n    'labelMFA',\n    'labelOTP',\n    'labelOutlier',\n    'wrapperOTP',\n    'wrapperOutlier',\n    'emailOutlierCount',\n];\n\nconst results = {\n    coeffs: [\n        ['otp-mfaScore', 34.24491500854492],\n        ['otp-exotic', -7.1488356590271],\n        ['otp-linkOTPOutlier', -30.66411590576172],\n        ['otp-hasCheckboxes', 7.240150451660156],\n        ['otp-hidden', -0.007220640778541565],\n        ['otp-required', -3.7672529220581055],\n        ['otp-nameMatch', 2.5392072200775146],\n        ['otp-idMatch', 8.873919486999512],\n        ['otp-numericMode', -8.184645652770996],\n        ['otp-autofocused', 1.1361602544784546],\n        ['otp-tabIndex1', 3.0903444290161133],\n        ['otp-patternOTP', 6.962174415588379],\n        ['otp-maxLength1', 5.160733699798584],\n        ['otp-maxLength5', -8.207122802734375],\n        ['otp-minLength6', 16.07337760925293],\n        ['otp-maxLength6', 8.32022762298584],\n        ['otp-maxLength20', -1.140841007232666],\n        ['otp-autocompleteOTC', 0.1409512609243393],\n        ['otp-autocompleteOff', -3.0876314640045166],\n        ['otp-prevAligned', -0.35210293531417847],\n        ['otp-prevArea', -0.3188312351703644],\n        ['otp-nextAligned', 0.16715140640735626],\n        ['otp-nextArea', -0.051897935569286346],\n        ['otp-attrMFA', 7.639617919921875],\n        ['otp-attrOTP', 1.7246224880218506],\n        ['otp-attrOutlier', -10.390393257141113],\n        ['otp-textMFA', 6.657490253448486],\n        ['otp-textOTP', -16.34011459350586],\n        ['otp-labelMFA', -1.3743057250976562],\n        ['otp-labelOTP', -0.07948236167430878],\n        ['otp-labelOutlier', -6.6860761642456055],\n        ['otp-wrapperOTP', 6.924853801727295],\n        ['otp-wrapperOutlier', -6.270834922790527],\n        ['otp-emailOutlierCount', -18.866779327392578],\n    ],\n    bias: -11.855243682861328,\n    cutoff: 0.51,\n};\n\nconst otp = {\n    name: FieldType.OTP,\n    coeffs: OTP_FIELD_FEATURES.map((key) => {\n        var _a, _b;\n        return [\n            `otp-${key}`,\n            (_b =\n                (_a = results.coeffs.find(([feature]) => feature === `otp-${key}`)) === null || _a === void 0\n                    ? void 0\n                    : _a[1]) !== null && _b !== void 0\n                ? _b\n                : 0,\n        ];\n    }),\n    bias: results.bias,\n    cutoff: results.cutoff,\n    getRules: () => [\n        rule(type('otp-field'), type(FieldType.OTP), {}),\n        ...OTP_FIELD_FEATURES.map((key) =>\n            rule(type(FieldType.OTP), featureScore('otp-field', key), {\n                name: `otp-${key}`,\n            })\n        ),\n        ...outRuleWithCache('field-candidate', FieldType.OTP),\n    ],\n};\n\nconst getFieldFeature = (fnode) => {\n    var _a, _b;\n    const field = fnode.element;\n    const fieldHaystacks = getFieldHaystacks(field);\n    const formFnode = getParentFormFnode(fnode);\n    if (formFnode !== null && !formFnode.hasNoteFor('form')) formFnode.setNoteFor('form', getFormFeatures(formFnode));\n    const formFeatures = formFnode === null || formFnode === void 0 ? void 0 : formFnode.noteFor('form');\n    const formClassification = getFormClassification(formFnode);\n    const value = field.value;\n    const type = field.getAttribute('type');\n    const readonly = field.readOnly;\n    const required = field.required;\n    const minLength = safeInt(field.minLength, 0);\n    const maxLength = safeInt(field.maxLength, 250);\n    const pattern = field.pattern;\n    const autocomplete = field.autocomplete;\n    const disabled = field.disabled;\n    const typeValid = type !== 'hidden';\n    const tabIndex = field.tabIndex;\n    const visible = typeValid\n        ? isVisibleField(field) &&\n          isVisible(field, {\n              opacity: false,\n          })\n        : false;\n    const searchField = visible && any(matchSearchAction)(fieldHaystacks.fieldAttrs.concat(fieldHaystacks.fieldText));\n    const prevField = typeValid\n        ? (_a =\n              formFeatures === null || formFeatures === void 0\n                  ? void 0\n                  : formFeatures.formInputIterator.prev(field)) !== null && _a !== void 0\n            ? _a\n            : null\n        : null;\n    const nextField = typeValid\n        ? (_b =\n              formFeatures === null || formFeatures === void 0\n                  ? void 0\n                  : formFeatures.formInputIterator.next(field)) !== null && _b !== void 0\n            ? _b\n            : null\n        : null;\n    return Object.assign(\n        {\n            formFnode,\n            formFeatures,\n            isFormLogin: formClassification.login,\n            isFormRegister: formClassification.register,\n            isFormPWChange: formClassification.pwChange,\n            isFormRecovery: formClassification.recovery,\n            isFormMFA: formClassification.mfa,\n            isFormNoop: formClassification.noop,\n            value,\n            visible,\n            type,\n            readonly,\n            required,\n            disabled,\n            pattern,\n            autocomplete,\n            minLength,\n            maxLength,\n            tabIndex,\n            prevField,\n            nextField,\n            searchField,\n        },\n        fieldHaystacks\n    );\n};\n\nconst { clusters } = clusters$1;\n\nconst CLUSTER_MAX_X_DIST = 50;\n\nconst CLUSTER_MAX_Y_DIST = 275;\n\nconst CLUSTER_ALIGNMENT_TOLERANCE = 0.05;\n\nconst CLUSTER_MAX_ELEMENTS = 50;\n\nconst context = {\n    cache: new WeakMap(),\n};\n\nconst getElementData = (el) => {\n    var _a;\n    const data =\n        (_a = context.cache.get(el)) !== null && _a !== void 0\n            ? _a\n            : {\n                  isField: el.matches(kFieldSelector) && el.matches(':not([type=\"submit\"])'),\n                  rect: el.getBoundingClientRect(),\n              };\n    context.cache.set(el, data);\n    return data;\n};\n\nconst compare = (elA, elB) => {\n    const a = getElementData(elA);\n    const b = getElementData(elB);\n    const maxDx = CLUSTER_MAX_X_DIST;\n    const maxDy = CLUSTER_MAX_Y_DIST / (a.isField && b.isField ? 2 : 1);\n    const { dx, dy } = getRectMinDistance(a.rect, b.rect);\n    const leftRatio = Math.abs(a.rect.left / b.rect.left);\n    const topRatio = Math.abs(a.rect.top / b.rect.top);\n    const xAlign = leftRatio > 1 - CLUSTER_ALIGNMENT_TOLERANCE && leftRatio < 1 + CLUSTER_ALIGNMENT_TOLERANCE;\n    const yAlign = topRatio > 1 - CLUSTER_ALIGNMENT_TOLERANCE && topRatio < 1 + CLUSTER_ALIGNMENT_TOLERANCE;\n    if (xAlign && yAlign) return true;\n    if (xAlign && dy < maxDy) return true;\n    if (yAlign && dx < maxDx) return true;\n    if (dx < maxDx && dy < maxDy) return true;\n    return false;\n};\n\nconst handleSingletonCluster = (cluster) => {\n    const node = cluster[0];\n    return walkUpWhile(\n        node,\n        5\n    )((_, candidate) => candidate === node || candidate.querySelectorAll(buttonSelector).length === 0);\n};\n\nconst resolveFormClusters = (doc) => {\n    const forms = selectFormCandidates(doc);\n    const clusterable = (els) => els.filter((el) => !forms.some((ex) => ex.contains(el)) && isVisibleField(el));\n    const fields = Array.from(doc.querySelectorAll(kFieldSelector));\n    const fieldsOfInterest = clusterable(\n        fields.filter((el) => isClassifiable(el) && el.getAttribute('type') !== 'hidden')\n    );\n    const inputs = fieldsOfInterest.filter((field) => field.matches(inputCandidateSelector));\n    if (inputs.length === 0 || inputs.length > CLUSTER_MAX_ELEMENTS) return [];\n    const domGroups = Array.from(doc.querySelectorAll(kDomGroupSelector)).filter((el) => el !== document.body);\n    const positionedEls = findStackedParents(inputs, 20);\n    const groups = pruneNested(\n        domGroups.filter((el) => !positionedEls.some((stack) => el.contains(stack))).concat(positionedEls)\n    );\n    const buttons = clusterable(\n        Array.from(document.querySelectorAll(kButtonSubmitSelector)).filter(isSubmitBtnCandidate)\n    );\n    const candidates = uniqueNodes(fieldsOfInterest, buttons);\n    if (candidates.length > CLUSTER_MAX_ELEMENTS) return [];\n    const groupByInput = new WeakMap(candidates.map((el) => [el, groups.find((group) => group.contains(el))]));\n    const theClusters = clusters(candidates, 1, (a, b) => {\n        if (a.parentElement === b.parentElement) return 0;\n        const groupA = groupByInput.get(a);\n        const groupB = groupByInput.get(b);\n        if (groupA !== groupB) return Number.MAX_SAFE_INTEGER;\n        if (groupA && groupA === groupB) return 0;\n        return compare(a, b) ? 0 : Number.MAX_SAFE_INTEGER;\n    });\n    const ancestors = theClusters\n        .map((cluster) => (cluster.length === 1 ? handleSingletonCluster(cluster) : cluster.reduce(getCommonAncestor)))\n        .filter(\n            (ancestor) => document.body !== ancestor && ancestor.querySelectorAll(inputCandidateSelector).length > 0\n        );\n    const result = pruneNested(ancestors);\n    result.forEach(flagCluster);\n    context.cache = new WeakMap();\n    return result;\n};\n\nconst TABLE_MAX_COLS = 3;\n\nconst TABLE_MAX_AREA = 15e4;\n\nconst nodeOfInterest = (el) => isClassifiable(el) && el.querySelector('input') !== null;\n\nconst excludeForms = (doc = document) => {\n    const bodyElCount = document.body.querySelectorAll('*').length;\n    return doc.querySelectorAll('form').forEach((form) => {\n        if (nodeOfInterest(form)) {\n            const fieldCount = form.querySelectorAll(kFieldSelector).length;\n            const inputCount = form.querySelectorAll(inputCandidateSelector).length;\n            const invalidFieldCount =\n                inputCount === 0 || inputCount > MAX_INPUTS_PER_FORM || fieldCount > MAX_FIELDS_PER_FORM;\n            const pageForm = form.matches('body > form');\n            const formElCount = form.querySelectorAll('*').length;\n            const invalidPageForm = pageForm && formElCount >= bodyElCount * 0.8;\n            const invalidCount = invalidFieldCount || invalidPageForm;\n            if (invalidCount && !pageForm) return flagSubtreeAsIgnored(form);\n            if (invalidCount && pageForm) return flagAsIgnored(form);\n            if (form.matches('table form') && form.closest('table').querySelectorAll('form').length > 2)\n                return flagAsIgnored(form);\n        }\n    });\n};\n\nconst excludeClusterableNodes = (doc = document) => {\n    doc.querySelectorAll('table').forEach((table) => {\n        if (nodeOfInterest(table) && !table.querySelector('table') && table.closest('form') === null) {\n            const nestedForms = table.querySelectorAll('form');\n            if (nestedForms.length > 2) return flagSubtreeAsIgnored(table);\n            if (!nestedForms.length) {\n                if (table.querySelector('thead') !== null) return flagSubtreeAsIgnored(table);\n                const cellCount = Math.max(...Array.from(table.rows).map((row) => row.cells.length));\n                if (cellCount > TABLE_MAX_COLS || getNodeRect(table).area > TABLE_MAX_AREA)\n                    return flagSubtreeAsIgnored(table);\n            }\n        }\n    });\n    doc.querySelectorAll(kEditorSelector).forEach(flagSubtreeAsIgnored);\n};\n\nconst excludeFields = (doc = document) => {\n    doc.querySelectorAll('input').forEach((input) => {\n        if (!isClassifiable(input)) return;\n        const invalidType = !VALID_INPUT_TYPES.includes(input.type);\n        const listElement = input.getAttribute('aria-autocomplete') === 'list';\n        if (invalidType || listElement) return flagAsIgnored(input);\n        if (input.type === 'hidden') {\n            const value = input.value.trim();\n            const invalidValueLength = !value.length || value.length > MAX_HIDDEN_FIELD_VALUE_LENGTH;\n            if (\n                invalidValueLength ||\n                HIDDEN_FIELD_IGNORE_VALUES.includes(value) ||\n                !input.matches(kHiddenUsernameSelector)\n            )\n                return flagAsIgnored(input);\n        }\n    });\n};\n\nconst prepass = (doc = document) => {\n    excludeForms(doc);\n    excludeClusterableNodes(doc);\n    excludeFields(doc);\n    resolveFormClusters(doc);\n};\n\nconst shouldRunClassifier = () => {\n    const runForForms = selectFormCandidates().reduce((runDetection, form) => {\n        if (isProcessed(form)) {\n            const unprocessedFields = selectInputCandidates(form).some(isProcessableField);\n            if (unprocessedFields) removeClassifierFlags(form);\n            return runDetection || unprocessedFields;\n        }\n        if (isVisibleForm(form)) return true;\n        return runDetection;\n    }, false);\n    if (runForForms) return true;\n    const runForFields = selectInputCandidates().some(isProcessableField);\n    return runForFields;\n};\n\nconst definitions = [\n    login,\n    register,\n    passwordChange,\n    recovery,\n    mfa,\n    username,\n    usernameHidden,\n    email,\n    password,\n    newPassword,\n    otp,\n];\n\nconst trainees = {\n    forms: {\n        login,\n        register,\n        passwordChange,\n        recovery,\n        mfa,\n    },\n    fields: {\n        username,\n        usernameHidden,\n        email,\n        password,\n        newPassword,\n        otp,\n    },\n};\n\nconst rulesetMaker = () => {\n    const aggregation = definitions.reduce(\n        (acc, curr) => ({\n            rules: [...acc.rules, ...curr.getRules()],\n            coeffs: [...acc.coeffs, ...curr.coeffs],\n            biases: [...acc.biases, [curr.name, curr.bias]],\n        }),\n        {\n            rules: [\n                rule(dom(formCandidateSelector), type('form-candidate'), {}),\n                rule(dom('input'), type('field-candidate'), {}),\n                rule(type('form-candidate').when(withFnodeEl(isClassifiable)), type('form-element'), {}),\n                rule(type('form-element').when(withFnodeEl(isVisibleForm)), type('form').note(getFormFeatures), {}),\n                rule(type('form-element'), out('form').through(processFormEffect), {}),\n                rule(type('form').when(isNoopForm), type(FormType.NOOP), {}),\n                rule(type(FormType.NOOP), out(FormType.NOOP), {}),\n                rule(type('field-candidate').when(isClassifiableField), type('field').note(getFieldFeature), {}),\n                rule(type('field').when(maybeUsername), type('username-field').note(getUsernameFieldFeatures), {}),\n                rule(\n                    type('field').when(maybeHiddenUsername),\n                    type('username-hidden-field').note(getHiddenUserFieldFeatures),\n                    {}\n                ),\n                rule(type('field').when(maybeEmail), type('email-field').note(getEmailFieldFeatures), {}),\n                rule(type('field').when(maybePassword), type('password-field').note(getPasswordFieldFeatures), {}),\n                rule(type('field').when(maybeOTP), type('otp-field').note(getOTPFieldFeatures), {}),\n                rule(type('field'), out('field').through(processFieldEffect), {}),\n            ],\n            coeffs: [],\n            biases: [],\n        }\n    );\n    const rules = ruleset(aggregation.rules, aggregation.coeffs, aggregation.biases);\n    return rules;\n};\n\nconst clearDetectionCache = () => clearVisibilityCache();\n\nexport {\n    EL_ATTRIBUTES,\n    FIELD_ATTRIBUTES,\n    FORM_ATTRIBUTES,\n    FORM_CLUSTER_ATTR,\n    FieldType,\n    FormType,\n    TEXT_ATTRIBUTES,\n    buttonSelector,\n    cacheContext,\n    clearDetectionCache,\n    clearVisibilityCache,\n    createInputIterator,\n    fieldTypes,\n    flagAsIgnored,\n    flagAsProcessed,\n    flagCluster,\n    flagSubtreeAsIgnored,\n    formCandidateSelector,\n    formTypes,\n    getAttributes,\n    getBaseAttributes,\n    getFieldAttributes,\n    getFormAttributes,\n    getFormParent,\n    getIgnoredParent,\n    getParentFormPrediction,\n    getTextAttributes,\n    getVisibilityCache,\n    inputCandidateSelector,\n    isClassifiable,\n    isClassifiableField,\n    isCluster,\n    isEmailCandidate,\n    isIgnored,\n    isOAuthCandidate,\n    isPredictedType,\n    isPrediction,\n    isProcessableField,\n    isProcessed,\n    isSubmitBtnCandidate,\n    isUsernameCandidate,\n    isVisible,\n    isVisibleEl,\n    isVisibleField,\n    isVisibleForm,\n    kAnchorLinkSelector,\n    kButtonSubmitSelector,\n    kCaptchaSelector,\n    kDomGroupSelector,\n    kEditorSelector,\n    kEmailSelector,\n    kFieldSelector,\n    kHeadingSelector,\n    kHiddenUsernameSelector,\n    kLayoutSelector,\n    kPasswordSelector,\n    kSocialSelector,\n    kUsernameSelector,\n    maybeEmail,\n    maybeHiddenUsername,\n    maybeOTP,\n    maybePassword,\n    maybeUsername,\n    otpSelector,\n    prepass,\n    removeClassifierFlags,\n    removeIgnoredFlag,\n    removePredictionFlag,\n    removeProcessedFlag,\n    rulesetMaker,\n    selectFormCandidates,\n    selectInputCandidates,\n    setPrediction,\n    shouldRunClassifier,\n    splitFieldsByVisibility,\n    trainees,\n};\n","import type { MaybeNull, SafeLoginItem } from '@proton/pass/types';\n\nimport type { FieldHandle } from './form';\nimport type { IFrameAppService } from './iframe';\n\nexport enum DropdownAction {\n    AUTOFILL = 'AUTOFILL',\n    AUTOSUGGEST_PASSWORD = 'AUTOSUGGEST_PASSWORD',\n    AUTOSUGGEST_ALIAS = 'AUTOSUGGEST_ALIAS',\n}\n\nexport type DropdownActions =\n    | { action: DropdownAction.AUTOFILL; items: SafeLoginItem[]; needsUpgrade: boolean }\n    | { action: DropdownAction.AUTOSUGGEST_PASSWORD }\n    | { action: DropdownAction.AUTOSUGGEST_ALIAS; domain: string; prefix: string };\n\nexport type DropdownOpenOptions = {\n    action: DropdownAction;\n    field: FieldHandle;\n    autofocused?: boolean;\n};\n\nexport interface InjectedDropdown extends IFrameAppService<DropdownOpenOptions> {\n    getCurrentField: () => MaybeNull<FieldHandle>;\n    sync: () => Promise<void>;\n}\n","import type { FieldType, FormType } from '@proton/pass/fathom';\nimport type { MaybeNull } from '@proton/pass/types';\n\nimport { type AutofillOptions } from '../utils/autofill';\nimport type { DropdownAction } from './dropdown';\nimport type { FieldIconHandle } from './icon';\n\nexport type DetectedForm = { formType: FormType; form: HTMLElement; fields: DetectedField[] };\nexport type DetectedField = { fieldType: FieldType; field: HTMLInputElement };\nexport interface FormHandle {\n    id: string;\n    formType: FormType;\n    element: HTMLElement;\n    fields: Map<HTMLInputElement, FieldHandle>;\n    tracker?: FormTracker;\n    detachField: (field: HTMLInputElement) => void;\n    getFieldsFor: (type: FieldType, predicate?: (handle: FieldHandle) => boolean) => FieldHandle[];\n    getFields: (predicate?: (handle: FieldHandle) => boolean) => FieldHandle[];\n    reconciliate: (type: FormType, fields: DetectedField[]) => void;\n    shouldRemove: () => boolean;\n    attach: () => void;\n    detach: () => void;\n}\n\nexport interface FieldHandle {\n    formType: FormType;\n    fieldType: FieldType;\n    element: HTMLInputElement;\n    boxElement: HTMLElement;\n    icon: FieldIconHandle | null;\n    action: MaybeNull<DropdownAction>;\n    value: string;\n    tracked: boolean;\n    zIndex: number;\n    getFormHandle: () => FormHandle;\n    getBoxElement: (options?: { revalidate: boolean }) => HTMLElement;\n    setValue: (value: string) => void;\n    setAction: (action: MaybeNull<DropdownAction>) => void;\n    autofill: (value: string, options?: AutofillOptions) => void;\n    focus: (options?: { preventAction?: boolean }) => void;\n    attachIcon: () => FieldIconHandle;\n    detachIcon: () => void;\n    attach: (onSubmit: () => void) => void;\n    detach: () => void;\n}\n\nexport enum FieldInjectionRule {\n    ALWAYS /* always inject */,\n    FIRST_OF_TYPE /* first field for field type */,\n    FIRST_OF_FORM /* first field in form */,\n    NEVER /* never inject */,\n}\n\nexport type FormTrackerFieldConfig = {\n    type: FieldType;\n    injection: FieldInjectionRule;\n    action?: DropdownAction;\n};\n\nexport interface FormTracker {\n    detach: () => void;\n    reconciliate: () => void;\n}\n","import { FieldType, FormType } from '@proton/pass/fathom';\nimport browser from '@proton/pass/globals/browser';\n\nimport type { FormTrackerFieldConfig } from './types';\nimport { DropdownAction, FieldInjectionRule } from './types';\n\nexport const INPUT_BASE_STYLES_ATTR = `data-protonpass-base-css`;\n\nexport const ICON_MAX_HEIGHT = 28;\nexport const ICON_MIN_HEIGHT = 16;\nexport const ICON_PADDING = 8;\nexport const DROPDOWN_WIDTH = 250;\nexport const MIN_DROPDOWN_HEIGHT = 60;\nexport const NOTIFICATION_HEIGHT = 335;\nexport const NOTIFICATION_HEIGHT_SM = 220;\nexport const NOTIFICATION_WIDTH = 320;\n\nexport const ACTIVE_ICON_SRC = browser.runtime.getURL('/assets/protonpass-icon-active.svg');\nexport const LOCKED_ICON_SRC = browser.runtime.getURL('/assets/protonpass-icon-locked.svg');\nexport const DISABLED_ICON_SRC = browser.runtime.getURL('/assets/protonpass-icon-disabled.svg');\nexport const COUNTER_ICON_SRC = browser.runtime.getURL('/assets/protonpass-icon-counter.svg');\nexport const DROPDOWN_IFRAME_SRC = browser.runtime.getURL('/dropdown.html');\nexport const NOTIFICATION_IFRAME_SRC = browser.runtime.getURL('/notification.html');\n\n/* heuristic max detection time duration in ms for sanity checking */\nexport const MIN_MAX_DETECTION_TIME = 250;\nexport const MAX_MAX_DETECTION_TIME = 1_000;\n\n/* ⚠️ WIP ⚠️\n * This list should be actively maintained\n * to list all top-level domains of email\n * providers. On sign-up forms for these\n * domains, we want to avoid prompting the\n * user for an alias creation on the email\n * field (if any). In some cases  we might\n * still permit it - ie in the case of google.com,\n * you can actually sign up with an email */\nexport const EMAIL_PROVIDERS = [\n    'proton.me',\n    'protonmail.com',\n    'protonvpn.com',\n    'proton.black',\n    'proton.pink',\n    'proton.local',\n];\n\nexport const FORM_TRACKER_CONFIG: Record<FormType, FormTrackerFieldConfig[]> = {\n    [FormType.LOGIN]: [\n        {\n            type: FieldType.USERNAME,\n            injection: FieldInjectionRule.FIRST_OF_FORM,\n            action: DropdownAction.AUTOFILL,\n        },\n        {\n            type: FieldType.USERNAME_HIDDEN,\n            injection: FieldInjectionRule.NEVER,\n        },\n        {\n            type: FieldType.EMAIL,\n            injection: FieldInjectionRule.FIRST_OF_FORM,\n            action: DropdownAction.AUTOFILL,\n        },\n        {\n            type: FieldType.PASSWORD_CURRENT,\n            injection: FieldInjectionRule.FIRST_OF_FORM,\n            action: DropdownAction.AUTOFILL,\n        },\n    ],\n    [FormType.REGISTER]: [\n        {\n            type: FieldType.USERNAME,\n            injection: FieldInjectionRule.NEVER,\n        },\n        {\n            type: FieldType.USERNAME_HIDDEN,\n            injection: FieldInjectionRule.NEVER,\n        },\n        {\n            type: FieldType.EMAIL,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOSUGGEST_ALIAS,\n        },\n        {\n            type: FieldType.PASSWORD_NEW,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOSUGGEST_PASSWORD,\n        },\n    ],\n    [FormType.RECOVERY]: [\n        {\n            type: FieldType.EMAIL,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOFILL,\n        },\n    ],\n    [FormType.PASSWORD_CHANGE]: [\n        {\n            type: FieldType.PASSWORD_CURRENT,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOFILL,\n        },\n        {\n            type: FieldType.PASSWORD_NEW,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOSUGGEST_PASSWORD,\n        },\n    ],\n    [FormType.MFA]: [],\n    /* NOOP forms are forms that were not classified into\n     * one of our form types. This can either be a detection\n     * error - in that case, if we match any fields of interest\n     * we should still add some actions - OR due to exotic\n     * forms (newsletters etc..) */\n    [FormType.NOOP]: [\n        {\n            type: FieldType.EMAIL,\n            injection: FieldInjectionRule.ALWAYS,\n            action: DropdownAction.AUTOSUGGEST_ALIAS,\n        },\n        {\n            type: FieldType.PASSWORD_CURRENT,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOFILL,\n        },\n        {\n            type: FieldType.PASSWORD_NEW,\n            injection: FieldInjectionRule.FIRST_OF_TYPE,\n            action: DropdownAction.AUTOSUGGEST_PASSWORD,\n        },\n    ],\n};\n","import type { MaybeNull } from '@proton/pass/types';\nimport type { BoundComputeStyles } from '@proton/pass/utils/dom';\nimport {\n    createElement,\n    createStyleCompute,\n    getComputedHeight,\n    pixelEncoder,\n    pixelParser,\n    repaint,\n} from '@proton/pass/utils/dom';\n\nimport { ICON_MAX_HEIGHT, ICON_MIN_HEIGHT, ICON_PADDING, INPUT_BASE_STYLES_ATTR } from '../../constants';\nimport type { FieldHandle } from '../../types';\nimport type { ProtonPassControl } from '../custom-elements/ProtonPassControl';\n\ntype InjectionElements = {\n    form: HTMLElement;\n    input: HTMLInputElement;\n    inputBox: HTMLElement;\n    icon: HTMLButtonElement;\n    control: ProtonPassControl;\n};\n\ntype SharedInjectionOptions = {\n    inputBox: HTMLElement;\n    getInputStyle: BoundComputeStyles;\n    getBoxStyle: BoundComputeStyles;\n};\n\n/* input styles we may override */\ntype InputInitialStyles = { ['padding-right']?: string };\n\nconst getOverlayedElement = (options: {\n    x: number;\n    y: number;\n    inputBox: HTMLElement;\n    form: HTMLElement;\n}): MaybeNull<HTMLElement> => {\n    try {\n        const { x, y, form, inputBox } = options;\n        const maxWidth = inputBox.offsetWidth;\n\n        if (Number.isNaN(x) || Number.isNaN(y)) return null;\n        const overlays = Array.from(document.elementsFromPoint(x, y));\n\n        return (\n            overlays.find((el): el is HTMLElement => {\n                /* exclude non-html elements */\n                if (!(el instanceof HTMLElement)) return false;\n                /* exclude svg elements */\n                if (el.matches('svg *')) return false;\n                /* exclude our own injected elements */\n                if (el.matches('protonpass-control')) return false;\n                /* exclude elements not in the current form stack */\n                if (!form.contains(el)) return false;\n                /* exclude \"placeholder\" overlays */\n                if (el.innerText.length > 0 && el.offsetWidth >= maxWidth * 0.85) return false;\n\n                return true;\n            }) ?? null\n        );\n    } catch (e) {\n        return null;\n    }\n};\n\n/* Force re-render/re-paint of the input element\n * before computing the icon injection styles in\n * order to avoid certain browser rendering optimisations\n * which cause incorrect DOMRect / styles to be resolved.\n * ie: check amazon sign-in page without repaint to\n * reproduce issue */\nconst computeIconInjectionStyles = (\n    { input, control, form }: Omit<InjectionElements, 'icon'>,\n    { getInputStyle, getBoxStyle, inputBox }: SharedInjectionOptions\n) => {\n    repaint(input);\n\n    const { right: inputRight, top: inputTop, height: inputHeight } = input.getBoundingClientRect();\n    const { top: boxTop, height: boxMaxHeight } = inputBox.getBoundingClientRect();\n    const { top: controlTop, right: controlRight } = control.getBoundingClientRect();\n\n    /* If inputBox is not the input element in the case we\n     * resolved a bounding element : compute inner height\n     * without offsets in order to correctly position icon\n     * if bounding element has some padding-top/border-top */\n    const boxed = inputBox !== input;\n    const { value: boxHeight, offset: boxOffset } = getComputedHeight(getBoxStyle, {\n        node: inputBox,\n        mode: boxed ? 'inner' : 'outer',\n    });\n\n    const size = Math.max(Math.min(boxMaxHeight - ICON_PADDING, ICON_MAX_HEIGHT), ICON_MIN_HEIGHT);\n    const pl = getInputStyle('padding-left', pixelParser);\n    const pr = getInputStyle('padding-right', pixelParser);\n    const iconPaddingLeft = size / 5; /* dynamic \"responsive\" padding */\n    const iconPaddingRight = Math.max(Math.min(pl, pr) / 1.5, iconPaddingLeft);\n\n    /* look for any overlayed elements if we were to inject\n     * the icon on the right hand-side of the input element\n     * accounting for icon size and padding  */\n    const overlayEl = getOverlayedElement({\n        x: inputRight - (iconPaddingRight + size / 2),\n        y: inputTop + inputHeight / 2,\n        inputBox,\n        form,\n    });\n\n    const overlayWidth = (() => {\n        if (!overlayEl) return 0;\n        const { clientWidth, offsetWidth } = overlayEl;\n        if (clientWidth === 0) return offsetWidth; /* support :before pseudo elements */\n        return clientWidth;\n    })();\n\n    const overlayDx = overlayEl !== input && overlayWidth !== 0 ? overlayWidth + iconPaddingLeft : 0;\n\n    /* Compute the new input padding :\n     * Take into account the input element's current padding as it\n     * may already cover the necessary space to inject the icon without\n     * the need to mutate the input's padding style. Account for potential\n     * overlayed element offset */\n    const newPaddingRight = Math.max(pr, size + iconPaddingLeft + iconPaddingRight + overlayDx);\n\n    /* `mt` represents the vertical offset needed to align the\n     * center of the injected icon with the top-most part of\n     * the bounding box :\n     * mt = boxTop - boxOffset.top - controlTop - size / 2\n     * top = mt + boxHeight / 2 */\n    const top = boxTop - controlTop + boxOffset.top + (boxHeight - size) / 2;\n    const right = controlRight - inputRight + iconPaddingRight + overlayDx;\n\n    return {\n        input: {\n            paddingRight: pixelEncoder(newPaddingRight),\n        },\n        icon: {\n            top: pixelEncoder(top),\n            right: pixelEncoder(right),\n            size: pixelEncoder(size),\n            fontSize: size / 2.5,\n        },\n    };\n};\n\nexport const getInputInitialStyles = (el: HTMLElement): InputInitialStyles => {\n    const initialStyles = el.getAttribute(INPUT_BASE_STYLES_ATTR);\n    return initialStyles ? JSON.parse(initialStyles) : {};\n};\n\nexport const cleanupInputInjectedStyles = (input: HTMLInputElement) => {\n    Object.entries(getInputInitialStyles(input)).forEach(\n        ([prop, value]) =>\n            Boolean(value)\n                ? input.style.setProperty(prop, value) /* if has initial style -> reset */\n                : input.style.removeProperty(prop) /* else remove override */\n    );\n\n    input.removeAttribute(INPUT_BASE_STYLES_ATTR);\n};\n\nexport const cleanupInjectionStyles = ({ control, input }: Pick<InjectionElements, 'control' | 'input'>) => {\n    control.style.removeProperty('float');\n    control.style.removeProperty('max-width');\n    control.style.removeProperty('margin-left');\n    cleanupInputInjectedStyles(input);\n};\n\nconst applyIconInjectionStyles = (elements: InjectionElements, shared: SharedInjectionOptions) => {\n    const { icon, input } = elements;\n    const styles = computeIconInjectionStyles(elements, shared);\n    const widthBefore = input.getBoundingClientRect().width;\n\n    icon.style.top = styles.icon.top;\n    icon.style.right = styles.icon.right;\n    icon.style.width = styles.icon.size;\n    icon.style.height = styles.icon.size;\n    icon.style.setProperty(`--control-lineheight`, styles.icon.size);\n    icon.style.setProperty(`--control-fontsize`, pixelEncoder(styles.icon.fontSize));\n\n    /* Content-script may be destroyed and re-injected\n     * on extension update or on code hot-reload. Keep\n     * track of the previous input styles for clean-up */\n    input.setAttribute(INPUT_BASE_STYLES_ATTR, JSON.stringify({ 'padding-right': input.style.paddingRight }));\n    input.style.setProperty('padding-right', styles.input.paddingRight, 'important');\n    const widthAfter = input.getBoundingClientRect().width;\n\n    /* when dealing with `content-box` box-sized elements or certain\n     * flexbox edge-cases : adapting the padding may lead to input width\n     * growing - if we detect this: remove the padding override. */\n    if (widthAfter !== widthBefore) {\n        input.style.removeProperty('padding-right');\n        input.style.setProperty('padding-right', input.style.paddingRight);\n    }\n};\n\n/* The injection styles application is a two pass process :\n * - First correctly position the control element by computing\n *   its possible margin left offset + max width\n * - Use the re-renderer control element for positioning the icon\n * + Pre-compute shared styles and DOMRects between two passes */\nexport const applyInjectionStyles = (elements: InjectionElements) => {\n    const { input, inputBox } = elements;\n    cleanupInputInjectedStyles(input);\n\n    const sharedOptions = {\n        inputBox,\n        getInputStyle: createStyleCompute(input),\n        getBoxStyle: createStyleCompute(inputBox),\n    };\n\n    applyIconInjectionStyles(elements, sharedOptions);\n};\n\nexport const createIcon = (field: FieldHandle): InjectionElements => {\n    const input = field.element as HTMLInputElement;\n    const inputBox = field.boxElement;\n\n    const control = createElement<ProtonPassControl>({ type: 'protonpass-control' });\n\n    control.style.display = 'none';\n    control.addEventListener('ready', () => control.style.removeProperty('display'), { once: true });\n\n    const icon = createElement<HTMLButtonElement>({ type: 'button', classNames: [] });\n\n    icon.tabIndex = -1;\n    icon.style.zIndex = field.zIndex.toString();\n    icon.setAttribute('type', 'button');\n\n    const elements = { icon, control, input, inputBox, form: field.getFormHandle().element };\n    const boxed = input !== inputBox;\n\n    if (boxed) inputBox.insertBefore(control, inputBox.firstElementChild);\n    else input.parentElement!.insertBefore(control, input);\n\n    control.shadowRoot?.appendChild(icon);\n\n    return elements;\n};\n","/* Handling multiple instances of the orchestrator being injected is\n * necessary to ensure that the content-scripts are properly loaded\n * and unloaded as needed. This can be particularly important during\n * updates or hot-reload scenarios, where multiple instances of the\n * orchestrator may be living simultaneously. By unloading the client\n * content-script when the frame becomes hidden, we can free up resources\n * on inactive tabs, further improving performance and minimizing the\n * impact on the user's experience */\nimport { contentScriptMessage, sendMessage } from '@proton/pass/extension/message';\nimport browser from '@proton/pass/globals/browser';\nimport { WorkerMessageType } from '@proton/pass/types';\nimport { isMainFrame } from '@proton/pass/utils/dom';\nimport { createListenerStore } from '@proton/pass/utils/listener';\nimport { logger } from '@proton/pass/utils/logger';\n\nimport { DOMCleanUp } from './injections/cleanup';\n\nconst listeners = createListenerStore();\nlet clientLoaded: boolean = false;\n\n/* The `unregister` function is responsible for removing all event listeners\n * that are associated with the orchestrator. This may occur when the extension\n * context is invalidated, such as when the registration or unregistration of the\n * client fails */\nconst unregister = (err: unknown) => {\n    logger.warn(`[ContentScript::orchestrator] invalidation error`, err);\n    listeners.removeAll();\n};\n\n/* The `registerClient` function is responsible for ensuring that the client\n * content-script is loaded and started if it hasn't already been loaded in the\n * current frame. Once the client has been loaded, a `START_CONTENT_SCRIPT`\n * message is sent to the worker to start the script (used on visibilitychange) */\nconst registerClient = async () => {\n    clientLoaded = await Promise.resolve(\n        clientLoaded ||\n            sendMessage(contentScriptMessage({ type: WorkerMessageType.LOAD_CONTENT_SCRIPT }))\n                .then((res) => res.type === 'success')\n                .catch(() => false)\n    );\n\n    await sendMessage(contentScriptMessage({ type: WorkerMessageType.START_CONTENT_SCRIPT }));\n};\n\n/* The `UNLOAD_CONTENT_SCRIPT` message is broadcasted to any client content-scripts\n * that may be running, instructing them to properly destroy themselves and free up\n * any resources they are using */\nconst unloadClient = () => sendMessage(contentScriptMessage({ type: WorkerMessageType.UNLOAD_CONTENT_SCRIPT }));\n\n/* The `handleFrameVisibilityChange` function is registered as a listener for\n * the `visibilitychange` event on the `document` object. This ensures that resources\n * are freed up on inactive tabs, and that the content-script is properly re-registered\n * and initialized when the tab becomes active again */\nconst handleFrameVisibilityChange = () => {\n    try {\n        switch (document.visibilityState) {\n            case 'visible':\n                return registerClient();\n            case 'hidden':\n                return unloadClient();\n        }\n    } catch (err: unknown) {\n        unregister(err);\n    }\n};\n\nconst loadCustomElements = async () =>\n    new Promise<void>((resolve, reject) => {\n        const script = document.createElement('script');\n\n        script.src = browser.runtime.getURL('elements.js');\n        script.setAttribute('public-path', browser.runtime.getURL('/'));\n\n        script.addEventListener('load', () => {\n            script.remove();\n            resolve();\n        });\n\n        script.addEventListener('error', () => {\n            script.remove();\n            reject('Could not load custom elements');\n        });\n\n        (document.head || document.documentElement).appendChild(script);\n    });\n\n/* This IIFE is responsible for handling every new content-script injection. It starts\n * by cleaning up the DOM (in case of concurrent scripts running) and unloading any client\n * content-scripts. Depending on the current visibility state, either the client content\n * script is registered again or unloaded. TODO: add extra heuristics steps before actually\n * loading the client content-script : This would allows us to perform additional checks to\n * determine whether or not the client should be injected, potentially saving resources and\n * improving performance (ie: run the form detection assessment here) */\nvoid (async () => {\n    try {\n        await new Promise<void>((resolve) => {\n            const { readyState } = document;\n            if (readyState === 'complete' || readyState === 'interactive') return resolve();\n            window.addEventListener('load', () => resolve(), { once: true });\n        });\n\n        DOMCleanUp();\n\n        await loadCustomElements();\n        await unloadClient();\n\n        if (!isMainFrame()) {\n            /* FIXME: apply iframe specific heuristics here :\n             * we want to avoid injecting into frames that have\n             * an src element starting with \"about:\" or \"javascript:\"\n             * + only one \"iframe depth\" should be supported */\n        }\n        listeners.addListener(document, 'visibilitychange', handleFrameVisibilityChange);\n        await (document.visibilityState === 'visible' && registerClient());\n    } catch (err) {\n        unregister(err);\n    }\n})();\n","import type { Callback, Maybe } from '@proton/pass/types';\n\n/**\n * Removing every listener from a DOM node\n * can be achieved by cloning the node and\n * replacing it in-place\n */\nexport const removeListeners = (el: HTMLElement): void => {\n    el.replaceWith(el.cloneNode(true));\n};\n\ntype EventSource = Window | Document | HTMLElement;\n\ntype EventMap<T extends EventSource> = T extends Window\n    ? WindowEventMap\n    : T extends Document\n    ? DocumentEventMap\n    : T extends HTMLElement\n    ? HTMLElementEventMap\n    : never;\n\ntype EventType<T extends EventSource, E extends keyof EventMap<T>> = EventMap<T>[E];\n\nexport type Listener<T extends EventSource = any, E extends keyof EventMap<T> = any> =\n    | {\n          kind: 'listener';\n          fn: (e: EventType<T, E>) => void;\n          element: T;\n          type: E;\n      }\n    | {\n          kind: 'observer';\n          observer: MutationObserver;\n      }\n    | {\n          kind: 'resizeObserver';\n          observer: ResizeObserver;\n      };\n\nexport type ListenerStore = ReturnType<typeof createListenerStore>;\n\nexport const createListenerStore = () => {\n    const listeners: Listener[] = [];\n\n    const cancelDebounce = (fn: Callback) => (fn as any)?.cancel?.();\n\n    const addListener = <T extends EventSource, E extends keyof EventMap<T>>(\n        element: Maybe<T>,\n        type: E,\n        fn: (e: EventType<T, E>) => void\n    ) => {\n        if (element !== undefined) {\n            listeners.push({ kind: 'listener', element, type, fn });\n            (element as any).addEventListener(type, fn);\n        }\n    };\n\n    const addObserver = (target: Node, mutationCb: MutationCallback, options?: MutationObserverInit) => {\n        const observer = new MutationObserver(mutationCb);\n\n        const disconnect = observer.disconnect;\n\n        observer.disconnect = () => {\n            cancelDebounce(mutationCb);\n            disconnect.bind(observer)();\n        };\n\n        listeners.push({ kind: 'observer', observer });\n        observer.observe(target, options);\n    };\n\n    const addResizeObserver = (target: Element, resizeCb: ResizeObserverCallback) => {\n        const observer = new ResizeObserver(resizeCb);\n        const disconnect = observer.disconnect;\n\n        observer.disconnect = () => {\n            cancelDebounce(resizeCb);\n            disconnect.bind(observer)();\n        };\n\n        listeners.push({ kind: 'resizeObserver', observer });\n        observer.observe(target);\n    };\n\n    const removeAll = () => {\n        listeners.forEach((listener) => {\n            switch (listener.kind) {\n                case 'observer':\n                case 'resizeObserver':\n                    return listener.observer.disconnect();\n                case 'listener': {\n                    cancelDebounce(listener.fn);\n                    return listener.element.removeEventListener(listener.type, listener.fn);\n                }\n            }\n        });\n\n        listeners.length = 0;\n    };\n\n    return {\n        addListener,\n        addObserver,\n        addResizeObserver,\n        removeAll,\n    };\n};\n","import { INPUT_BASE_STYLES_ATTR } from '../constants';\nimport { cleanupInputInjectedStyles } from './icon';\n\nexport const DOMCleanUp = () => {\n    /* remove all injected DOM nodes */\n    const injectedNodes = document.querySelectorAll('protonpass-control, protonpass-root');\n    injectedNodes.forEach((node) => node.remove());\n\n    /* reset input field styles */\n    const inputs = document.querySelectorAll<HTMLInputElement>(`input[${INPUT_BASE_STYLES_ATTR}]`);\n    inputs.forEach((input) => cleanupInputInjectedStyles(input));\n};\n","export const isMainFrame = (): boolean => {\n    try {\n        return window.self === window.top;\n    } catch (e) {\n        return false;\n    }\n};\n","import { disableBrowserProxyTrap } from '@proton/pass/globals/browser';\n\n/* Since content-scripts cannot be inspected, it is safe to disable the\n * browser API trap in this context. Additionally, content-scripts have\n * access to a dedicated execution context with a proxy to the window object,\n * so even if this flag is set, it won't be inspectable in the console where\n * this script is running. See `@pass/globals/browser.ts` */\ndisableBrowserProxyTrap();\n"],"names":["self","globalThis","context","allowProxy","globals","chrome","browser","disableBrowserProxyTrap","polyfill","setTimeout","Object","entries","filter","value","forEach","key","Proxy","get","target","prop","receiver","logger","error","set","log","withLoggerOptions","fn","options","args","onLog","join","info","debug","warn","setLogOptions","opts","isCallable","tryToString","$TypeError","TypeError","module","exports","argument","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","O","length","index","includes","indexOf","DESCRIPTORS","isArray","getOwnPropertyDescriptor","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","uncurryThis","toString","stringSlice","slice","it","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","source","exceptions","keys","f","i","createPropertyDescriptor","object","bitmap","enumerable","configurable","makeBuiltIn","name","descriptor","getter","setter","defineGlobalProperty","simple","global","unsafe","nonConfigurable","nonWritable","fails","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","navigator","userAgent","match","version","process","Deno","versions","v8","split","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","arguments","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","uncurryThisWithBind","namespace","method","aCallable","isNullOrUndefined","V","P","func","check","Math","window","g","toObject","a","classof","$Object","propertyIsEnumerable","store","functionToString","inspectSource","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","state","metadata","facade","STATE","enforce","getterFor","TYPE","type","Array","$documentAll","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","getBuiltIn","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","CONFIGURABLE_LENGTH","TEMPLATE","arity","constructor","ceil","floor","trunc","x","n","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","concat","getOwnPropertyNames","getOwnPropertySymbols","push","names","result","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","uid","SHARED","IS_PURE","mode","copyright","license","V8_VERSION","symbol","Symbol","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","$","setArrayLength","doesNotExceedSafeInteger","proto","properErrorOnNonWritableLength","item","len","argCount","defineBuiltInAccessor","URLSearchParamsPrototype","URLSearchParams","count","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","LodashWrapper","chainAll","__chain__","__index__","__values__","getNative","thisArg","array","values","offset","objectCreate","create","arrayPush","isFlattenable","baseFlatten","depth","predicate","isStrict","getRawTag","objectToString","symToStringTag","toStringTag","baseGetTag","isObjectLike","isFunction","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","RegExp","constant","identity","baseSetToString","coreJsData","flatRest","getData","getFuncName","isLaziable","fromRight","funcs","prereq","thru","reverse","wrapper","funcName","plant","e","flatten","overRest","setToString","freeGlobal","metaMap","noop","realNames","otherFunc","baseIsNative","getValue","nativeObjectToString","isOwn","tag","unmasked","isArguments","spreadableSymbol","isConcatSpreadable","lodash","other","maskSrcKey","IE_PROTO","nativeMax","start","transform","otherArgs","freeSelf","root","shortOut","nativeNow","Date","now","lastCalled","stamp","remaining","copyArray","clone","flow","createFlow","baseIsArguments","wrapperClone","definition","undefinedType","isIE","logMethods","bindMethod","methodName","traceForIE","console","trace","realMethod","replaceLoggingMethods","level","loggerName","methodFactory","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","factory","currentLevel","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","levels","clearPersistedLevel","removeItem","getLevel","setLevel","persist","SILENT","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","_log","noConflict","getLoggers","runtime","Error","getPrototypeOf","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","wrapAPIs","extensionAPIs","apiMetadata","DefaultWeakMap","createItem","items","super","isThenable","then","makeCallback","promise","callbackArgs","lastError","reject","message","singleCallbackArg","resolve","pluralizeArguments","numArgs","wrapAsyncFunction","minArgs","maxArgs","Promise","fallbackToNoCallback","cbError","noCallback","wrapMethod","targetMethod","thisObj","wrapObject","wrappers","cache","handlers","proxyTarget","desc","Reflect","deleteProperty","wrapEvent","wrapperMap","addListener","listener","hasListener","removeListener","onRequestFinishedWrappers","req","wrappedReq","getContent","onMessageWrappers","sender","sendResponse","wrappedSendResponse","didCallSendResponse","sendResponsePromise","response","err","isResultThenable","sendPromisedResult","msg","__mozWebExtensionPolyfillReject__","catch","wrappedSendMessageCallback","reply","wrappedSendMessage","apiNamespaceObj","wrappedCb","sendMessage","staticWrappers","devtools","network","onRequestFinished","onMessage","onMessageExternal","tabs","settingMetadata","clear","privacy","services","websites","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__esModule","d","o","UnknownFieldHandler","WireType","reflectionMergePartial","fieldValue","output","field","fields","localName","oneof","group","oneofKind","repeat","kind","T","mergePartial","assign","k","for","onRead","typeName","fieldNo","wireType","is","no","onWrite","writer","list","raw","uf","last","MESSAGE_TYPE","lowerCamelCase","snakeCase","capNext","sb","next","charAt","ScalarType","LongType","RepeatType","normalizeFieldInfo","_a","_b","_c","_d","jsonName","NO","opt","isOneofGroup","any","ReflectionTypeCheck","prepare","known","oneofs","allowExcessProperties","some","find","arg","repeated","scalars","L","scalar","INT32","messages","mapKeys","K","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","isNaN","BOOL","STRING","BYTES","Uint8Array","DOUBLE","FLOAT","Number","isInteger","map","FIXED32","SFIXED32","SINT32","UINT32","parseInt","typeofJsonValue","t","encTable","decTable","charCodeAt","varint64read","lowBits","highBits","shift","b","buf","pos","assertBounds","middleByte","varint64write","lo","hi","bytes","hasNext","byte","splitBits","hasMoreBits","TWO_PWR_32_DBL","int64fromString","dec","minus","base","add1e6digit","begin","end","digit1e6","int64toString","bitsLow","bitsHigh","mid","high","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","varint32write","varint32read","readBytes","BI","assertBi","bi","dv","DataView","ArrayBuffer","ok","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","C","detectBi","RE_DECIMAL_STR","HALF_2_PWR_32","SharedPbLong","isZero","toNumber","isSafeInteger","PbULong","from","ZERO","getInt32","trim","toBigInt","setInt32","PbLong","pbl","negate","isNegative","assert","condition","assertInt32","assertUInt32","assertFloat32","isFinite","reflectionLongConvert","long","ReflectionJsonReader","fMap","fieldsInput","fieldName","jsonValue","what","read","oneofsHandled","jsonKey","ignoreUnknownFields","fieldObj","jsonObjKey","jsonObjValue","internalJsonRead","enum","fieldArr","jsonItem","json","localEnumName","substring","enumNumber","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","float","int32","base64Str","es","bytePos","groupPos","p","subarray","base64decode","ReflectionJsonWriter","write","useProtoFieldName","emitDefaultValues","jsonObj","entryKey","entryValue","messageType","enumInfo","enumAsInteger","jsonArr","optional","internalJsonWrite","ed","ulong","byteLength","base64","base64encode","reflectionScalarDefault","ReflectionBinaryReader","fieldNoToField","Map","reader","u","readUnknownField","skip","arr","LengthDelimited","uint32","internalBinaryRead","mapKey","mapVal","mapEntry","bool","keyRaw","double","int64","uint64","fixed64","fixed32","sfixed32","sfixed64","sint32","sint64","ReflectionBinaryWriter","sort","emitDefault","PACKED","packed","writeUnknownFields","fork","keyValue","handler","internalBinaryWrite","isDefault","scalarInfo","m","Varint","Bit64","Bit32","defaultsWrite","prettySpaces","defaultsRead","objectValues","primitiveEq","ba","bb","repeatedPrimitiveEq","repeatedMsgEq","equals","writerFactory","BinaryWriter","textEncoder","stack","TextEncoder","chunks","finish","chunk","prev","pop","encode","buffer","setFloat32","setFloat64","setUint32","view","sign","readerFactory","BinaryReader","textDecoder","varint64","byteOffset","TextDecoder","fatal","ignoreBOM","StartGroup","EndGroup","RangeError","zze","s","getUint32","getFloat32","getFloat64","decode","MessageType","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","reflectionCreate","copy","val_a","val_b","reflectionEquals","fromBinary","binaryReadOptions","fromJson","jsonReadOptions","fromJsonString","JSON","parse","toJson","jsonWriteOptions","toJsonString","stringify","toBinary","binaryWriteOptions","CardType","ItemNote","ItemLogin","username","password","urls","totpUri","ItemAlias","ItemCreditCard","cardholderName","cardType","verificationNumber","expirationDate","pin","AllowedAndroidApp","packageName","hashes","appName","AndroidSpecific","allowedApps","PlatformSpecific","android","ExtraTotp","ExtraTextField","content","ExtraHiddenField","ExtraField","totp","text","hidden","Metadata","note","itemUuid","Content","login","alias","creditCard","extraFields","platformSpecific","VaultIcon","VaultColor","VaultDisplayPreferences","icon","color","description","display","WorkerMessageType","async","on","onResponse","onSuccess","contentScriptMessage","CycleError","NoWindowError","best","iterable","by","isBetter","bestSoFar","bestKeySoFar","isFirst","maxes","bests","sum","total","addend","walk","element","shouldTraverse","child","childNodes","w","blockTags","Set","isBlock","tagName","inlineTexts","nodeType","TEXT_NODE","textContent","inlineTextLength","collapseWhitespace","str","isWhitespace","setDefault","defaultMaker","defaultValue","getDefault","toposort","nodes","nodesThatNeed","ret","todo","inProgress","visit","node","add","needer","delete","size","first","NiceSet","v","extend","otherSet","rootElement","ownerDocument","documentElement","toDomElement","fnodeOrElement","isDomElement","ancestors","parent","parentNode","ELEMENT_NODE","sigmoid","exp","Element","thing","nodeName","reversed","windowForElement","doc","win","defaultView","utilsForFrontend","freeze","__proto__","num","linkDensity","fnode","inlineLength","numberOfMatches","regex","haystack","page","scoringFunction","scoreAndTypeAndNote","score","domSort","fnodes","position","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","attributesMatch","attrs","attributes","attr","getAttribute","isVisible","elementWindow","elementRect","getBoundingClientRect","elementStyle","getComputedStyle","width","height","overflow","visibility","y","ancestor","isElement","style","opacity","rect","rgbaFromString","parseFloat","saturation","r","cMax","cMin","delta","lightness","denom","abs","linearScale","zeroAt","oneAt","numStrides","left","right","sibling","shouldContinue","nextSibling","previousSibling","distance","fnodeA","fnodeB","differentDepthCost","differentTagCost","sameTagCost","strideCost","additionalCost","elementA","elementB","aAncestors","bAncestors","aAncestor","bAncestor","contains","comparison","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_CONTAINED_BY","MAX_VALUE","cost","l","euclidean","xCenter","domRect","yCenter","top","aRect","bRect","sqrt","DistanceMatrix","elements","_matrix","clusters","outerCluster","innerMap","innerCluster","_numClusters","closest","outerKey","row","innerKey","storedDistance","clustersAndDistances","_cachedDistance","clusterA","clusterB","merge","newRow","inner","numClusters","splittingDistance","getDistance","matrix","clusters$1","Lhs","_predicate","fromFirstCall","firstCall","TypeLhs","AndLhs","NearestLhs","when","lhs","fnodesSatisfyingWhen","checkFact","fact","guaranteedType","aggregatedType","_type","ruleset","cached","typeCache","inputType","TypeMaxLhs","bestCluster","BestClusterLhs","possibleTypeCombinations","typesMentioned","AggregateTypeLhs","getSuperFnodes","maxCache","weightedScore","scoresSoFarFor","_options","fnodesOfType","clust","scoreFor","clustAndSum","lhss","_args","sideToTypeLhs","fnodeLoop","otherLhs","hasType","side","asLhs","_distance","as_","bs","nearest","rhsTransformer","SUBFACTS","out","OutwardRhs","InwardRhs","calls","Infinity","types","_calls","_max","_types","atMost","_checkAtMost","props","callback","getSubfacts","subfacts","subfact","possibleSubfacts","theType","typeIn","_checkTypeIn","leftType","scoreOrCallback","doneKinds","haveSubfacts","newSubfacts","possibleEmissions","couldChangeType","possibleTypes","through","allThrough","allCallback","asRhs","Side","_and","and","_asSide","pred","Fnode","_ruleset","_conservedScores","_computeType","biases","noteFor","_noteSoFarFor","hasNoteFor","_hasNoteSoFarFor","typesSoFar","_typeRecordForGetting","addScoreFor","ruleName","_typeRecordForSetting","setNoteFor","rule","rhs","OutwardRule","InwardRule","nextRuleNumber","Rule","prerequisites","extendOrThrow","prereqs","ruleGetter","verb","rules","_typesFinalized","inwardRulesThatCouldEmit","inwardRulesThatCouldAdd","results","doneRules","leftResults","returnedFnodes","leftResult","leftFnode","rightFnode","fnodeForElement","rightType","typesItCouldEmit","typesItCouldAdd","emissions","combo","rhsType","typesThatCouldChange","fnodeOrStruct","sanitizeString","MULTI_STEP_RE","TROUBLE_RE","PASSWORD_RE","USERNAME_RE","EMAIL_RE","CONFIRM_ACTION_RE","CONFIRM_ACTION_ATTR_END_RE","NEWSLETTER_RE","notRe","reg","andRe","re","orRe","or","reSanityCheck","cb","maxLength","minLength","tests","every","matchEmailValue","matchPasswordReset","matchPasswordCreate","matchPasswordCurrent","kPasswordSelector","kUsernameSelector","flagAsProcessed","flatMap","__PP_SEEN__","isPredictedType","__PP_TYPE__","FormType","FieldType","throughEffect","effect","typeEffect","setPrediction","_el","currentType","featureScore","visible","features","reduce","belongsToType","outRuleWithCache","typeOut","EL_ATTRIBUTES","FORM_ATTRIBUTES","flat","FIELD_ATTRIBUTES","getAttributes","Boolean","isActiveFieldFNode","readonly","disabled","fType","fMatch","selector","matches","fMode","inputMode","fActive","linearScale$1","utils","results$a","coeffs","bias","cutoff","FORM_COMBINED_FEATURES","arr1","arr2","item1","item2","combineFeatures","LOGIN","feat","results$9","results$8","PASSWORD_CHANGE","results$7","REGISTER","results$6","RECOVERY","PW_FIELD_FEATURES","MFA","results$5","results$4","PASSWORD_CURRENT","USERNAME_FIELD_FEATURES","PASSWORD_NEW","results$3","HIDDEN_USER_FIELD_FEATURES","USERNAME","results$2","EMAIL_FIELD_FEATURES","USERNAME_HIDDEN","results$1","EMAIL","OTP_FIELD_FEATURES","OTP","DropdownAction","FieldInjectionRule","INPUT_BASE_STYLES_ATTR","cleanupInputInjectedStyles","getURL","FIRST_OF_FORM","AUTOFILL","NEVER","FIRST_OF_TYPE","AUTOSUGGEST_ALIAS","AUTOSUGGEST_PASSWORD","NOOP","ALWAYS","initialStyles","getInputInitialStyles","setProperty","removeProperty","removeAttribute","listeners","createListenerStore","cancelDebounce","cancel","addEventListener","addObserver","mutationCb","observer","MutationObserver","disconnect","observe","addResizeObserver","resizeCb","ResizeObserver","removeAll","removeEventListener","clientLoaded","unregister","registerClient","LOAD_CONTENT_SCRIPT","res","START_CONTENT_SCRIPT","unloadClient","UNLOAD_CONTENT_SCRIPT","handleFrameVisibilityChange","visibilityState","readyState","once","querySelectorAll","remove","script","src","setAttribute","head","appendChild","loadCustomElements","isMainFrame"],"sourceRoot":""}